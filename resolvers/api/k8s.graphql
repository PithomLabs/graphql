directive @openapi(ref:String) on OBJECT | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT
type Mutation {
  # connect DELETE requests to proxy of Pod
  connectCoreV1DeleteNamespacedPodProxy:String
  # connect DELETE requests to proxy of Pod
  connectCoreV1DeleteNamespacedPodProxyWithPath:String
  # connect DELETE requests to proxy of Service
  connectCoreV1DeleteNamespacedServiceProxy:String
  # connect DELETE requests to proxy of Service
  connectCoreV1DeleteNamespacedServiceProxyWithPath:String
  # connect DELETE requests to proxy of Node
  connectCoreV1DeleteNodeProxy:String
  # connect DELETE requests to proxy of Node
  connectCoreV1DeleteNodeProxyWithPath:String
  # connect OPTIONS requests to proxy of Pod
  connectCoreV1OptionsNamespacedPodProxy:String
  # connect OPTIONS requests to proxy of Pod
  connectCoreV1OptionsNamespacedPodProxyWithPath:String
  # connect OPTIONS requests to proxy of Service
  connectCoreV1OptionsNamespacedServiceProxy:String
  # connect OPTIONS requests to proxy of Service
  connectCoreV1OptionsNamespacedServiceProxyWithPath:String
  # connect OPTIONS requests to proxy of Node
  connectCoreV1OptionsNodeProxy:String
  # connect OPTIONS requests to proxy of Node
  connectCoreV1OptionsNodeProxyWithPath:String
  # connect PATCH requests to proxy of Pod
  connectCoreV1PatchNamespacedPodProxy:String
  # connect PATCH requests to proxy of Pod
  connectCoreV1PatchNamespacedPodProxyWithPath:String
  # connect PATCH requests to proxy of Service
  connectCoreV1PatchNamespacedServiceProxy:String
  # connect PATCH requests to proxy of Service
  connectCoreV1PatchNamespacedServiceProxyWithPath:String
  # connect PATCH requests to proxy of Node
  connectCoreV1PatchNodeProxy:String
  # connect PATCH requests to proxy of Node
  connectCoreV1PatchNodeProxyWithPath:String
  # connect POST requests to attach of Pod
  connectCoreV1PostNamespacedPodAttach:String
  # connect POST requests to exec of Pod
  connectCoreV1PostNamespacedPodExec:String
  # connect POST requests to portforward of Pod
  connectCoreV1PostNamespacedPodPortforward:String
  # connect POST requests to proxy of Pod
  connectCoreV1PostNamespacedPodProxy:String
  # connect POST requests to proxy of Pod
  connectCoreV1PostNamespacedPodProxyWithPath:String
  # connect POST requests to proxy of Service
  connectCoreV1PostNamespacedServiceProxy:String
  # connect POST requests to proxy of Service
  connectCoreV1PostNamespacedServiceProxyWithPath:String
  # connect POST requests to proxy of Node
  connectCoreV1PostNodeProxy:String
  # connect POST requests to proxy of Node
  connectCoreV1PostNodeProxyWithPath:String
  # connect PUT requests to proxy of Pod
  connectCoreV1PutNamespacedPodProxy:String
  # connect PUT requests to proxy of Pod
  connectCoreV1PutNamespacedPodProxyWithPath:String
  # connect PUT requests to proxy of Service
  connectCoreV1PutNamespacedServiceProxy:String
  # connect PUT requests to proxy of Service
  connectCoreV1PutNamespacedServiceProxyWithPath:String
  # connect PUT requests to proxy of Node
  connectCoreV1PutNodeProxy:String
  # connect PUT requests to proxy of Node
  connectCoreV1PutNodeProxyWithPath:String
  # create a MutatingWebhookConfiguration
  createAdmissionregistrationV1MutatingWebhookConfiguration(post:io_k8s_api_admissionregistration_v1_MutatingWebhookConfigurationInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_admissionregistration_v1_MutatingWebhookConfigurationResult
  # create a ValidatingWebhookConfiguration
  createAdmissionregistrationV1ValidatingWebhookConfiguration(post:io_k8s_api_admissionregistration_v1_ValidatingWebhookConfigurationInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_admissionregistration_v1_ValidatingWebhookConfigurationResult
  # create a MutatingWebhookConfiguration
  createAdmissionregistrationV1beta1MutatingWebhookConfiguration(post:io_k8s_api_admissionregistration_v1beta1_MutatingWebhookConfigurationInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_admissionregistration_v1beta1_MutatingWebhookConfigurationResult
  # create a ValidatingWebhookConfiguration
  createAdmissionregistrationV1beta1ValidatingWebhookConfiguration(post:io_k8s_api_admissionregistration_v1beta1_ValidatingWebhookConfigurationInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_admissionregistration_v1beta1_ValidatingWebhookConfigurationResult
  # create a CustomResourceDefinition
  createApiextensionsV1CustomResourceDefinition(post:io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceDefinitionInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceDefinitionResult
  # create a CustomResourceDefinition
  createApiextensionsV1beta1CustomResourceDefinition(post:io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_CustomResourceDefinitionInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_CustomResourceDefinitionResult
  # create an APIService
  createApiregistrationV1APIService(post:io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIServiceInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIServiceResult
  # create an APIService
  createApiregistrationV1beta1APIService(post:io_k8s_kube_aggregator_pkg_apis_apiregistration_v1beta1_APIServiceInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_kube_aggregator_pkg_apis_apiregistration_v1beta1_APIServiceResult
  # create a ControllerRevision
  createAppsV1NamespacedControllerRevision(post:io_k8s_api_apps_v1_ControllerRevisionInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_apps_v1_ControllerRevisionResult
  # create a DaemonSet
  createAppsV1NamespacedDaemonSet(post:io_k8s_api_apps_v1_DaemonSetInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_apps_v1_DaemonSetResult
  # create a Deployment
  createAppsV1NamespacedDeployment(post:io_k8s_api_apps_v1_DeploymentInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_apps_v1_DeploymentResult
  # create a ReplicaSet
  createAppsV1NamespacedReplicaSet(post:io_k8s_api_apps_v1_ReplicaSetInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_apps_v1_ReplicaSetResult
  # create a StatefulSet
  createAppsV1NamespacedStatefulSet(post:io_k8s_api_apps_v1_StatefulSetInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_apps_v1_StatefulSetResult
  # create a TokenReview
  createAuthenticationV1TokenReview(post:io_k8s_api_authentication_v1_TokenReviewInput!):io_k8s_api_authentication_v1_TokenReviewResult
  # create a TokenReview
  createAuthenticationV1beta1TokenReview(post:io_k8s_api_authentication_v1beta1_TokenReviewInput!):io_k8s_api_authentication_v1beta1_TokenReviewResult
  # create a LocalSubjectAccessReview
  createAuthorizationV1NamespacedLocalSubjectAccessReview(post:io_k8s_api_authorization_v1_LocalSubjectAccessReviewInput!):io_k8s_api_authorization_v1_LocalSubjectAccessReviewResult
  # create a SelfSubjectAccessReview
  createAuthorizationV1SelfSubjectAccessReview(post:io_k8s_api_authorization_v1_SelfSubjectAccessReviewInput!):io_k8s_api_authorization_v1_SelfSubjectAccessReviewResult
  # create a SelfSubjectRulesReview
  createAuthorizationV1SelfSubjectRulesReview(post:io_k8s_api_authorization_v1_SelfSubjectRulesReviewInput!):io_k8s_api_authorization_v1_SelfSubjectRulesReviewResult
  # create a SubjectAccessReview
  createAuthorizationV1SubjectAccessReview(post:io_k8s_api_authorization_v1_SubjectAccessReviewInput!):io_k8s_api_authorization_v1_SubjectAccessReviewResult
  # create a LocalSubjectAccessReview
  createAuthorizationV1beta1NamespacedLocalSubjectAccessReview(post:io_k8s_api_authorization_v1beta1_LocalSubjectAccessReviewInput!):io_k8s_api_authorization_v1beta1_LocalSubjectAccessReviewResult
  # create a SelfSubjectAccessReview
  createAuthorizationV1beta1SelfSubjectAccessReview(post:io_k8s_api_authorization_v1beta1_SelfSubjectAccessReviewInput!):io_k8s_api_authorization_v1beta1_SelfSubjectAccessReviewResult
  # create a SelfSubjectRulesReview
  createAuthorizationV1beta1SelfSubjectRulesReview(post:io_k8s_api_authorization_v1beta1_SelfSubjectRulesReviewInput!):io_k8s_api_authorization_v1beta1_SelfSubjectRulesReviewResult
  # create a SubjectAccessReview
  createAuthorizationV1beta1SubjectAccessReview(post:io_k8s_api_authorization_v1beta1_SubjectAccessReviewInput!):io_k8s_api_authorization_v1beta1_SubjectAccessReviewResult
  # create a HorizontalPodAutoscaler
  createAutoscalingV1NamespacedHorizontalPodAutoscaler(post:io_k8s_api_autoscaling_v1_HorizontalPodAutoscalerInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_autoscaling_v1_HorizontalPodAutoscalerResult
  # create a HorizontalPodAutoscaler
  createAutoscalingV2beta1NamespacedHorizontalPodAutoscaler(post:io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscalerInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscalerResult
  # create a HorizontalPodAutoscaler
  createAutoscalingV2beta2NamespacedHorizontalPodAutoscaler(post:io_k8s_api_autoscaling_v2beta2_HorizontalPodAutoscalerInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_autoscaling_v2beta2_HorizontalPodAutoscalerResult
  # create a Job
  createBatchV1NamespacedJob(post:io_k8s_api_batch_v1_JobInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_batch_v1_JobResult
  # create a CronJob
  createBatchV1beta1NamespacedCronJob(post:io_k8s_api_batch_v1beta1_CronJobInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_batch_v1beta1_CronJobResult
  # create a CertificateSigningRequest
  createCertificatesV1beta1CertificateSigningRequest(post:io_k8s_api_certificates_v1beta1_CertificateSigningRequestInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_certificates_v1beta1_CertificateSigningRequestResult
  # create a Lease
  createCoordinationV1NamespacedLease(post:io_k8s_api_coordination_v1_LeaseInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_coordination_v1_LeaseResult
  # create a Lease
  createCoordinationV1beta1NamespacedLease(post:io_k8s_api_coordination_v1beta1_LeaseInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_coordination_v1beta1_LeaseResult
  # create a Namespace
  createCoreV1Namespace(post:io_k8s_api_core_v1_NamespaceInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_core_v1_NamespaceResult
  # create a Binding
  createCoreV1NamespacedBinding(post:io_k8s_api_core_v1_BindingInput!):io_k8s_api_core_v1_BindingResult
  # create a ConfigMap
  createCoreV1NamespacedConfigMap(post:io_k8s_api_core_v1_ConfigMapInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_core_v1_ConfigMapResult
  # create Endpoints
  createCoreV1NamespacedEndpoints(post:io_k8s_api_core_v1_EndpointsInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_core_v1_EndpointsResult
  # create an Event
  createCoreV1NamespacedEvent(post:io_k8s_api_core_v1_EventInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_core_v1_EventResult
  # create a LimitRange
  createCoreV1NamespacedLimitRange(post:io_k8s_api_core_v1_LimitRangeInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_core_v1_LimitRangeResult
  # create a PersistentVolumeClaim
  createCoreV1NamespacedPersistentVolumeClaim(post:io_k8s_api_core_v1_PersistentVolumeClaimInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_core_v1_PersistentVolumeClaimResult
  # create a Pod
  createCoreV1NamespacedPod(post:io_k8s_api_core_v1_PodInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_core_v1_PodResult
  # create binding of a Pod
  createCoreV1NamespacedPodBinding(post:io_k8s_api_core_v1_BindingInput!):io_k8s_api_core_v1_BindingResult
  # create eviction of a Pod
  createCoreV1NamespacedPodEviction(post:io_k8s_api_policy_v1beta1_EvictionInput!):io_k8s_api_policy_v1beta1_EvictionResult
  # create a PodTemplate
  createCoreV1NamespacedPodTemplate(post:io_k8s_api_core_v1_PodTemplateInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_core_v1_PodTemplateResult
  # create a ReplicationController
  createCoreV1NamespacedReplicationController(post:io_k8s_api_core_v1_ReplicationControllerInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_core_v1_ReplicationControllerResult
  # create a ResourceQuota
  createCoreV1NamespacedResourceQuota(post:io_k8s_api_core_v1_ResourceQuotaInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_core_v1_ResourceQuotaResult
  # create a Secret
  createCoreV1NamespacedSecret(post:io_k8s_api_core_v1_SecretInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_core_v1_SecretResult
  # create a Service
  createCoreV1NamespacedService(post:io_k8s_api_core_v1_ServiceInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_core_v1_ServiceResult
  # create a ServiceAccount
  createCoreV1NamespacedServiceAccount(post:io_k8s_api_core_v1_ServiceAccountInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_core_v1_ServiceAccountResult
  # create a Node
  createCoreV1Node(post:io_k8s_api_core_v1_NodeInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_core_v1_NodeResult
  # create a PersistentVolume
  createCoreV1PersistentVolume(post:io_k8s_api_core_v1_PersistentVolumeInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_core_v1_PersistentVolumeResult
  # create an EndpointSlice
  createDiscoveryV1beta1NamespacedEndpointSlice(post:io_k8s_api_discovery_v1beta1_EndpointSliceInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_discovery_v1beta1_EndpointSliceResult
  # create an Event
  createEventsV1beta1NamespacedEvent(post:io_k8s_api_events_v1beta1_EventInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_events_v1beta1_EventResult
  # create an Ingress
  createExtensionsV1beta1NamespacedIngress(post:io_k8s_api_extensions_v1beta1_IngressInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_extensions_v1beta1_IngressResult
  # create a NetworkPolicy
  createNetworkingV1NamespacedNetworkPolicy(post:io_k8s_api_networking_v1_NetworkPolicyInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_networking_v1_NetworkPolicyResult
  # create an Ingress
  createNetworkingV1beta1NamespacedIngress(post:io_k8s_api_networking_v1beta1_IngressInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_networking_v1beta1_IngressResult
  # create a RuntimeClass
  createNodeV1beta1RuntimeClass(post:io_k8s_api_node_v1beta1_RuntimeClassInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_node_v1beta1_RuntimeClassResult
  # create a PodDisruptionBudget
  createPolicyV1beta1NamespacedPodDisruptionBudget(post:io_k8s_api_policy_v1beta1_PodDisruptionBudgetInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_policy_v1beta1_PodDisruptionBudgetResult
  # create a PodSecurityPolicy
  createPolicyV1beta1PodSecurityPolicy(post:io_k8s_api_policy_v1beta1_PodSecurityPolicyInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_policy_v1beta1_PodSecurityPolicyResult
  # create a ClusterRole
  createRbacAuthorizationV1ClusterRole(post:io_k8s_api_rbac_v1_ClusterRoleInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_rbac_v1_ClusterRoleResult
  # create a ClusterRoleBinding
  createRbacAuthorizationV1ClusterRoleBinding(post:io_k8s_api_rbac_v1_ClusterRoleBindingInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_rbac_v1_ClusterRoleBindingResult
  # create a Role
  createRbacAuthorizationV1NamespacedRole(post:io_k8s_api_rbac_v1_RoleInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_rbac_v1_RoleResult
  # create a RoleBinding
  createRbacAuthorizationV1NamespacedRoleBinding(post:io_k8s_api_rbac_v1_RoleBindingInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_rbac_v1_RoleBindingResult
  # create a ClusterRole
  createRbacAuthorizationV1beta1ClusterRole(post:io_k8s_api_rbac_v1beta1_ClusterRoleInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_rbac_v1beta1_ClusterRoleResult
  # create a ClusterRoleBinding
  createRbacAuthorizationV1beta1ClusterRoleBinding(post:io_k8s_api_rbac_v1beta1_ClusterRoleBindingInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_rbac_v1beta1_ClusterRoleBindingResult
  # create a Role
  createRbacAuthorizationV1beta1NamespacedRole(post:io_k8s_api_rbac_v1beta1_RoleInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_rbac_v1beta1_RoleResult
  # create a RoleBinding
  createRbacAuthorizationV1beta1NamespacedRoleBinding(post:io_k8s_api_rbac_v1beta1_RoleBindingInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_rbac_v1beta1_RoleBindingResult
  # create a PriorityClass
  createSchedulingV1PriorityClass(post:io_k8s_api_scheduling_v1_PriorityClassInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_scheduling_v1_PriorityClassResult
  # create a PriorityClass
  createSchedulingV1beta1PriorityClass(post:io_k8s_api_scheduling_v1beta1_PriorityClassInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_scheduling_v1beta1_PriorityClassResult
  # create a CSINode
  createStorageV1CSINode(post:io_k8s_api_storage_v1_CSINodeInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_storage_v1_CSINodeResult
  # create a StorageClass
  createStorageV1StorageClass(post:io_k8s_api_storage_v1_StorageClassInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_storage_v1_StorageClassResult
  # create a VolumeAttachment
  createStorageV1VolumeAttachment(post:io_k8s_api_storage_v1_VolumeAttachmentInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_storage_v1_VolumeAttachmentResult
  # create a CSIDriver
  createStorageV1beta1CSIDriver(post:io_k8s_api_storage_v1beta1_CSIDriverInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_storage_v1beta1_CSIDriverResult
  # create a CSINode
  createStorageV1beta1CSINode(post:io_k8s_api_storage_v1beta1_CSINodeInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_storage_v1beta1_CSINodeResult
  # create a StorageClass
  createStorageV1beta1StorageClass(post:io_k8s_api_storage_v1beta1_StorageClassInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_storage_v1beta1_StorageClassResult
  # create a VolumeAttachment
  createStorageV1beta1VolumeAttachment(post:io_k8s_api_storage_v1beta1_VolumeAttachmentInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_storage_v1beta1_VolumeAttachmentResult
  # delete collection of MutatingWebhookConfiguration
  deleteAdmissionregistrationV1CollectionMutatingWebhookConfiguration(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete collection of ValidatingWebhookConfiguration
  deleteAdmissionregistrationV1CollectionValidatingWebhookConfiguration(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete a MutatingWebhookConfiguration
  deleteAdmissionregistrationV1MutatingWebhookConfiguration(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete a ValidatingWebhookConfiguration
  deleteAdmissionregistrationV1ValidatingWebhookConfiguration(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete collection of MutatingWebhookConfiguration
  deleteAdmissionregistrationV1beta1CollectionMutatingWebhookConfiguration(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete collection of ValidatingWebhookConfiguration
  deleteAdmissionregistrationV1beta1CollectionValidatingWebhookConfiguration(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete a MutatingWebhookConfiguration
  deleteAdmissionregistrationV1beta1MutatingWebhookConfiguration(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete a ValidatingWebhookConfiguration
  deleteAdmissionregistrationV1beta1ValidatingWebhookConfiguration(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete collection of CustomResourceDefinition
  deleteApiextensionsV1CollectionCustomResourceDefinition(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete a CustomResourceDefinition
  deleteApiextensionsV1CustomResourceDefinition(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete collection of CustomResourceDefinition
  deleteApiextensionsV1beta1CollectionCustomResourceDefinition(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete a CustomResourceDefinition
  deleteApiextensionsV1beta1CustomResourceDefinition(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete an APIService
  deleteApiregistrationV1APIService(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete collection of APIService
  deleteApiregistrationV1CollectionAPIService(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete an APIService
  deleteApiregistrationV1beta1APIService(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete collection of APIService
  deleteApiregistrationV1beta1CollectionAPIService(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete collection of ControllerRevision
  deleteAppsV1CollectionNamespacedControllerRevision(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete collection of DaemonSet
  deleteAppsV1CollectionNamespacedDaemonSet(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete collection of Deployment
  deleteAppsV1CollectionNamespacedDeployment(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete collection of ReplicaSet
  deleteAppsV1CollectionNamespacedReplicaSet(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete collection of StatefulSet
  deleteAppsV1CollectionNamespacedStatefulSet(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete a ControllerRevision
  deleteAppsV1NamespacedControllerRevision(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete a DaemonSet
  deleteAppsV1NamespacedDaemonSet(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete a Deployment
  deleteAppsV1NamespacedDeployment(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete a ReplicaSet
  deleteAppsV1NamespacedReplicaSet(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete a StatefulSet
  deleteAppsV1NamespacedStatefulSet(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete collection of HorizontalPodAutoscaler
  deleteAutoscalingV1CollectionNamespacedHorizontalPodAutoscaler(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete a HorizontalPodAutoscaler
  deleteAutoscalingV1NamespacedHorizontalPodAutoscaler(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete collection of HorizontalPodAutoscaler
  deleteAutoscalingV2beta1CollectionNamespacedHorizontalPodAutoscaler(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete a HorizontalPodAutoscaler
  deleteAutoscalingV2beta1NamespacedHorizontalPodAutoscaler(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete collection of HorizontalPodAutoscaler
  deleteAutoscalingV2beta2CollectionNamespacedHorizontalPodAutoscaler(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete a HorizontalPodAutoscaler
  deleteAutoscalingV2beta2NamespacedHorizontalPodAutoscaler(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete collection of Job
  deleteBatchV1CollectionNamespacedJob(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete a Job
  deleteBatchV1NamespacedJob(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete collection of CronJob
  deleteBatchV1beta1CollectionNamespacedCronJob(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete a CronJob
  deleteBatchV1beta1NamespacedCronJob(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete a CertificateSigningRequest
  deleteCertificatesV1beta1CertificateSigningRequest(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete collection of CertificateSigningRequest
  deleteCertificatesV1beta1CollectionCertificateSigningRequest(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete collection of Lease
  deleteCoordinationV1CollectionNamespacedLease(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete a Lease
  deleteCoordinationV1NamespacedLease(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete collection of Lease
  deleteCoordinationV1beta1CollectionNamespacedLease(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete a Lease
  deleteCoordinationV1beta1NamespacedLease(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete collection of ConfigMap
  deleteCoreV1CollectionNamespacedConfigMap(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete collection of Endpoints
  deleteCoreV1CollectionNamespacedEndpoints(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete collection of Event
  deleteCoreV1CollectionNamespacedEvent(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete collection of LimitRange
  deleteCoreV1CollectionNamespacedLimitRange(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete collection of PersistentVolumeClaim
  deleteCoreV1CollectionNamespacedPersistentVolumeClaim(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete collection of Pod
  deleteCoreV1CollectionNamespacedPod(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete collection of PodTemplate
  deleteCoreV1CollectionNamespacedPodTemplate(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete collection of ReplicationController
  deleteCoreV1CollectionNamespacedReplicationController(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete collection of ResourceQuota
  deleteCoreV1CollectionNamespacedResourceQuota(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete collection of Secret
  deleteCoreV1CollectionNamespacedSecret(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete collection of ServiceAccount
  deleteCoreV1CollectionNamespacedServiceAccount(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete collection of Node
  deleteCoreV1CollectionNode(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete collection of PersistentVolume
  deleteCoreV1CollectionPersistentVolume(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete a Namespace
  deleteCoreV1Namespace(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete a ConfigMap
  deleteCoreV1NamespacedConfigMap(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete Endpoints
  deleteCoreV1NamespacedEndpoints(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete an Event
  deleteCoreV1NamespacedEvent(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete a LimitRange
  deleteCoreV1NamespacedLimitRange(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete a PersistentVolumeClaim
  deleteCoreV1NamespacedPersistentVolumeClaim(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete a Pod
  deleteCoreV1NamespacedPod(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete a PodTemplate
  deleteCoreV1NamespacedPodTemplate(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete a ReplicationController
  deleteCoreV1NamespacedReplicationController(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete a ResourceQuota
  deleteCoreV1NamespacedResourceQuota(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete a Secret
  deleteCoreV1NamespacedSecret(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete a Service
  deleteCoreV1NamespacedService(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete a ServiceAccount
  deleteCoreV1NamespacedServiceAccount(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete a Node
  deleteCoreV1Node(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete a PersistentVolume
  deleteCoreV1PersistentVolume(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete collection of EndpointSlice
  deleteDiscoveryV1beta1CollectionNamespacedEndpointSlice(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete an EndpointSlice
  deleteDiscoveryV1beta1NamespacedEndpointSlice(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete collection of Event
  deleteEventsV1beta1CollectionNamespacedEvent(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete an Event
  deleteEventsV1beta1NamespacedEvent(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete collection of Ingress
  deleteExtensionsV1beta1CollectionNamespacedIngress(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete an Ingress
  deleteExtensionsV1beta1NamespacedIngress(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete collection of NetworkPolicy
  deleteNetworkingV1CollectionNamespacedNetworkPolicy(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete a NetworkPolicy
  deleteNetworkingV1NamespacedNetworkPolicy(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete collection of Ingress
  deleteNetworkingV1beta1CollectionNamespacedIngress(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete an Ingress
  deleteNetworkingV1beta1NamespacedIngress(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete collection of RuntimeClass
  deleteNodeV1beta1CollectionRuntimeClass(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete a RuntimeClass
  deleteNodeV1beta1RuntimeClass(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete collection of PodDisruptionBudget
  deletePolicyV1beta1CollectionNamespacedPodDisruptionBudget(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete collection of PodSecurityPolicy
  deletePolicyV1beta1CollectionPodSecurityPolicy(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete a PodDisruptionBudget
  deletePolicyV1beta1NamespacedPodDisruptionBudget(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete a PodSecurityPolicy
  deletePolicyV1beta1PodSecurityPolicy(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete a ClusterRole
  deleteRbacAuthorizationV1ClusterRole(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete a ClusterRoleBinding
  deleteRbacAuthorizationV1ClusterRoleBinding(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete collection of ClusterRole
  deleteRbacAuthorizationV1CollectionClusterRole(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete collection of ClusterRoleBinding
  deleteRbacAuthorizationV1CollectionClusterRoleBinding(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete collection of Role
  deleteRbacAuthorizationV1CollectionNamespacedRole(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete collection of RoleBinding
  deleteRbacAuthorizationV1CollectionNamespacedRoleBinding(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete a Role
  deleteRbacAuthorizationV1NamespacedRole(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete a RoleBinding
  deleteRbacAuthorizationV1NamespacedRoleBinding(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete a ClusterRole
  deleteRbacAuthorizationV1beta1ClusterRole(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete a ClusterRoleBinding
  deleteRbacAuthorizationV1beta1ClusterRoleBinding(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete collection of ClusterRole
  deleteRbacAuthorizationV1beta1CollectionClusterRole(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete collection of ClusterRoleBinding
  deleteRbacAuthorizationV1beta1CollectionClusterRoleBinding(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete collection of Role
  deleteRbacAuthorizationV1beta1CollectionNamespacedRole(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete collection of RoleBinding
  deleteRbacAuthorizationV1beta1CollectionNamespacedRoleBinding(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete a Role
  deleteRbacAuthorizationV1beta1NamespacedRole(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete a RoleBinding
  deleteRbacAuthorizationV1beta1NamespacedRoleBinding(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete collection of PriorityClass
  deleteSchedulingV1CollectionPriorityClass(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete a PriorityClass
  deleteSchedulingV1PriorityClass(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete collection of PriorityClass
  deleteSchedulingV1beta1CollectionPriorityClass(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete a PriorityClass
  deleteSchedulingV1beta1PriorityClass(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete a CSINode
  deleteStorageV1CSINode(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete collection of CSINode
  deleteStorageV1CollectionCSINode(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete collection of StorageClass
  deleteStorageV1CollectionStorageClass(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete collection of VolumeAttachment
  deleteStorageV1CollectionVolumeAttachment(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete a StorageClass
  deleteStorageV1StorageClass(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete a VolumeAttachment
  deleteStorageV1VolumeAttachment(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete a CSIDriver
  deleteStorageV1beta1CSIDriver(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete a CSINode
  deleteStorageV1beta1CSINode(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete collection of CSIDriver
  deleteStorageV1beta1CollectionCSIDriver(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete collection of CSINode
  deleteStorageV1beta1CollectionCSINode(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete collection of StorageClass
  deleteStorageV1beta1CollectionStorageClass(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete collection of VolumeAttachment
  deleteStorageV1beta1CollectionVolumeAttachment(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete a StorageClass
  deleteStorageV1beta1StorageClass(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # delete a VolumeAttachment
  deleteStorageV1beta1VolumeAttachment(delete:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
    gracePeriodSeconds:Int,   
    # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
    orphanDependents:Boolean,   
    # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
    propagationPolicy:String
  ):io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult
  # replace the specified MutatingWebhookConfiguration
  replaceAdmissionregistrationV1MutatingWebhookConfiguration(put:io_k8s_api_admissionregistration_v1_MutatingWebhookConfigurationInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_admissionregistration_v1_MutatingWebhookConfigurationResult
  # replace the specified ValidatingWebhookConfiguration
  replaceAdmissionregistrationV1ValidatingWebhookConfiguration(put:io_k8s_api_admissionregistration_v1_ValidatingWebhookConfigurationInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_admissionregistration_v1_ValidatingWebhookConfigurationResult
  # replace the specified MutatingWebhookConfiguration
  replaceAdmissionregistrationV1beta1MutatingWebhookConfiguration(put:io_k8s_api_admissionregistration_v1beta1_MutatingWebhookConfigurationInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_admissionregistration_v1beta1_MutatingWebhookConfigurationResult
  # replace the specified ValidatingWebhookConfiguration
  replaceAdmissionregistrationV1beta1ValidatingWebhookConfiguration(put:io_k8s_api_admissionregistration_v1beta1_ValidatingWebhookConfigurationInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_admissionregistration_v1beta1_ValidatingWebhookConfigurationResult
  # replace the specified CustomResourceDefinition
  replaceApiextensionsV1CustomResourceDefinition(put:io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceDefinitionInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceDefinitionResult
  # replace status of the specified CustomResourceDefinition
  replaceApiextensionsV1CustomResourceDefinitionStatus(put:io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceDefinitionInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceDefinitionResult
  # replace the specified CustomResourceDefinition
  replaceApiextensionsV1beta1CustomResourceDefinition(put:io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_CustomResourceDefinitionInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_CustomResourceDefinitionResult
  # replace status of the specified CustomResourceDefinition
  replaceApiextensionsV1beta1CustomResourceDefinitionStatus(put:io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_CustomResourceDefinitionInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_CustomResourceDefinitionResult
  # replace the specified APIService
  replaceApiregistrationV1APIService(put:io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIServiceInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIServiceResult
  # replace status of the specified APIService
  replaceApiregistrationV1APIServiceStatus(put:io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIServiceInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIServiceResult
  # replace the specified APIService
  replaceApiregistrationV1beta1APIService(put:io_k8s_kube_aggregator_pkg_apis_apiregistration_v1beta1_APIServiceInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_kube_aggregator_pkg_apis_apiregistration_v1beta1_APIServiceResult
  # replace status of the specified APIService
  replaceApiregistrationV1beta1APIServiceStatus(put:io_k8s_kube_aggregator_pkg_apis_apiregistration_v1beta1_APIServiceInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_kube_aggregator_pkg_apis_apiregistration_v1beta1_APIServiceResult
  # replace the specified ControllerRevision
  replaceAppsV1NamespacedControllerRevision(put:io_k8s_api_apps_v1_ControllerRevisionInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_apps_v1_ControllerRevisionResult
  # replace the specified DaemonSet
  replaceAppsV1NamespacedDaemonSet(put:io_k8s_api_apps_v1_DaemonSetInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_apps_v1_DaemonSetResult
  # replace status of the specified DaemonSet
  replaceAppsV1NamespacedDaemonSetStatus(put:io_k8s_api_apps_v1_DaemonSetInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_apps_v1_DaemonSetResult
  # replace the specified Deployment
  replaceAppsV1NamespacedDeployment(put:io_k8s_api_apps_v1_DeploymentInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_apps_v1_DeploymentResult
  # replace scale of the specified Deployment
  replaceAppsV1NamespacedDeploymentScale(put:io_k8s_api_autoscaling_v1_ScaleInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_autoscaling_v1_ScaleResult
  # replace status of the specified Deployment
  replaceAppsV1NamespacedDeploymentStatus(put:io_k8s_api_apps_v1_DeploymentInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_apps_v1_DeploymentResult
  # replace the specified ReplicaSet
  replaceAppsV1NamespacedReplicaSet(put:io_k8s_api_apps_v1_ReplicaSetInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_apps_v1_ReplicaSetResult
  # replace scale of the specified ReplicaSet
  replaceAppsV1NamespacedReplicaSetScale(put:io_k8s_api_autoscaling_v1_ScaleInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_autoscaling_v1_ScaleResult
  # replace status of the specified ReplicaSet
  replaceAppsV1NamespacedReplicaSetStatus(put:io_k8s_api_apps_v1_ReplicaSetInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_apps_v1_ReplicaSetResult
  # replace the specified StatefulSet
  replaceAppsV1NamespacedStatefulSet(put:io_k8s_api_apps_v1_StatefulSetInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_apps_v1_StatefulSetResult
  # replace scale of the specified StatefulSet
  replaceAppsV1NamespacedStatefulSetScale(put:io_k8s_api_autoscaling_v1_ScaleInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_autoscaling_v1_ScaleResult
  # replace status of the specified StatefulSet
  replaceAppsV1NamespacedStatefulSetStatus(put:io_k8s_api_apps_v1_StatefulSetInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_apps_v1_StatefulSetResult
  # replace the specified HorizontalPodAutoscaler
  replaceAutoscalingV1NamespacedHorizontalPodAutoscaler(put:io_k8s_api_autoscaling_v1_HorizontalPodAutoscalerInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_autoscaling_v1_HorizontalPodAutoscalerResult
  # replace status of the specified HorizontalPodAutoscaler
  replaceAutoscalingV1NamespacedHorizontalPodAutoscalerStatus(put:io_k8s_api_autoscaling_v1_HorizontalPodAutoscalerInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_autoscaling_v1_HorizontalPodAutoscalerResult
  # replace the specified HorizontalPodAutoscaler
  replaceAutoscalingV2beta1NamespacedHorizontalPodAutoscaler(put:io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscalerInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscalerResult
  # replace status of the specified HorizontalPodAutoscaler
  replaceAutoscalingV2beta1NamespacedHorizontalPodAutoscalerStatus(put:io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscalerInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscalerResult
  # replace the specified HorizontalPodAutoscaler
  replaceAutoscalingV2beta2NamespacedHorizontalPodAutoscaler(put:io_k8s_api_autoscaling_v2beta2_HorizontalPodAutoscalerInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_autoscaling_v2beta2_HorizontalPodAutoscalerResult
  # replace status of the specified HorizontalPodAutoscaler
  replaceAutoscalingV2beta2NamespacedHorizontalPodAutoscalerStatus(put:io_k8s_api_autoscaling_v2beta2_HorizontalPodAutoscalerInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_autoscaling_v2beta2_HorizontalPodAutoscalerResult
  # replace the specified Job
  replaceBatchV1NamespacedJob(put:io_k8s_api_batch_v1_JobInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_batch_v1_JobResult
  # replace status of the specified Job
  replaceBatchV1NamespacedJobStatus(put:io_k8s_api_batch_v1_JobInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_batch_v1_JobResult
  # replace the specified CronJob
  replaceBatchV1beta1NamespacedCronJob(put:io_k8s_api_batch_v1beta1_CronJobInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_batch_v1beta1_CronJobResult
  # replace status of the specified CronJob
  replaceBatchV1beta1NamespacedCronJobStatus(put:io_k8s_api_batch_v1beta1_CronJobInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_batch_v1beta1_CronJobResult
  # replace the specified CertificateSigningRequest
  replaceCertificatesV1beta1CertificateSigningRequest(put:io_k8s_api_certificates_v1beta1_CertificateSigningRequestInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_certificates_v1beta1_CertificateSigningRequestResult
  # replace approval of the specified CertificateSigningRequest
  replaceCertificatesV1beta1CertificateSigningRequestApproval(put:io_k8s_api_certificates_v1beta1_CertificateSigningRequestInput!):io_k8s_api_certificates_v1beta1_CertificateSigningRequestResult
  # replace status of the specified CertificateSigningRequest
  replaceCertificatesV1beta1CertificateSigningRequestStatus(put:io_k8s_api_certificates_v1beta1_CertificateSigningRequestInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_certificates_v1beta1_CertificateSigningRequestResult
  # replace the specified Lease
  replaceCoordinationV1NamespacedLease(put:io_k8s_api_coordination_v1_LeaseInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_coordination_v1_LeaseResult
  # replace the specified Lease
  replaceCoordinationV1beta1NamespacedLease(put:io_k8s_api_coordination_v1beta1_LeaseInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_coordination_v1beta1_LeaseResult
  # replace the specified Namespace
  replaceCoreV1Namespace(put:io_k8s_api_core_v1_NamespaceInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_core_v1_NamespaceResult
  # replace finalize of the specified Namespace
  replaceCoreV1NamespaceFinalize(put:io_k8s_api_core_v1_NamespaceInput!):io_k8s_api_core_v1_NamespaceResult
  # replace status of the specified Namespace
  replaceCoreV1NamespaceStatus(put:io_k8s_api_core_v1_NamespaceInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_core_v1_NamespaceResult
  # replace the specified ConfigMap
  replaceCoreV1NamespacedConfigMap(put:io_k8s_api_core_v1_ConfigMapInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_core_v1_ConfigMapResult
  # replace the specified Endpoints
  replaceCoreV1NamespacedEndpoints(put:io_k8s_api_core_v1_EndpointsInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_core_v1_EndpointsResult
  # replace the specified Event
  replaceCoreV1NamespacedEvent(put:io_k8s_api_core_v1_EventInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_core_v1_EventResult
  # replace the specified LimitRange
  replaceCoreV1NamespacedLimitRange(put:io_k8s_api_core_v1_LimitRangeInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_core_v1_LimitRangeResult
  # replace the specified PersistentVolumeClaim
  replaceCoreV1NamespacedPersistentVolumeClaim(put:io_k8s_api_core_v1_PersistentVolumeClaimInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_core_v1_PersistentVolumeClaimResult
  # replace status of the specified PersistentVolumeClaim
  replaceCoreV1NamespacedPersistentVolumeClaimStatus(put:io_k8s_api_core_v1_PersistentVolumeClaimInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_core_v1_PersistentVolumeClaimResult
  # replace the specified Pod
  replaceCoreV1NamespacedPod(put:io_k8s_api_core_v1_PodInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_core_v1_PodResult
  # replace status of the specified Pod
  replaceCoreV1NamespacedPodStatus(put:io_k8s_api_core_v1_PodInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_core_v1_PodResult
  # replace the specified PodTemplate
  replaceCoreV1NamespacedPodTemplate(put:io_k8s_api_core_v1_PodTemplateInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_core_v1_PodTemplateResult
  # replace the specified ReplicationController
  replaceCoreV1NamespacedReplicationController(put:io_k8s_api_core_v1_ReplicationControllerInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_core_v1_ReplicationControllerResult
  # replace scale of the specified ReplicationController
  replaceCoreV1NamespacedReplicationControllerScale(put:io_k8s_api_autoscaling_v1_ScaleInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_autoscaling_v1_ScaleResult
  # replace status of the specified ReplicationController
  replaceCoreV1NamespacedReplicationControllerStatus(put:io_k8s_api_core_v1_ReplicationControllerInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_core_v1_ReplicationControllerResult
  # replace the specified ResourceQuota
  replaceCoreV1NamespacedResourceQuota(put:io_k8s_api_core_v1_ResourceQuotaInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_core_v1_ResourceQuotaResult
  # replace status of the specified ResourceQuota
  replaceCoreV1NamespacedResourceQuotaStatus(put:io_k8s_api_core_v1_ResourceQuotaInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_core_v1_ResourceQuotaResult
  # replace the specified Secret
  replaceCoreV1NamespacedSecret(put:io_k8s_api_core_v1_SecretInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_core_v1_SecretResult
  # replace the specified Service
  replaceCoreV1NamespacedService(put:io_k8s_api_core_v1_ServiceInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_core_v1_ServiceResult
  # replace the specified ServiceAccount
  replaceCoreV1NamespacedServiceAccount(put:io_k8s_api_core_v1_ServiceAccountInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_core_v1_ServiceAccountResult
  # replace status of the specified Service
  replaceCoreV1NamespacedServiceStatus(put:io_k8s_api_core_v1_ServiceInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_core_v1_ServiceResult
  # replace the specified Node
  replaceCoreV1Node(put:io_k8s_api_core_v1_NodeInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_core_v1_NodeResult
  # replace status of the specified Node
  replaceCoreV1NodeStatus(put:io_k8s_api_core_v1_NodeInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_core_v1_NodeResult
  # replace the specified PersistentVolume
  replaceCoreV1PersistentVolume(put:io_k8s_api_core_v1_PersistentVolumeInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_core_v1_PersistentVolumeResult
  # replace status of the specified PersistentVolume
  replaceCoreV1PersistentVolumeStatus(put:io_k8s_api_core_v1_PersistentVolumeInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_core_v1_PersistentVolumeResult
  # replace the specified EndpointSlice
  replaceDiscoveryV1beta1NamespacedEndpointSlice(put:io_k8s_api_discovery_v1beta1_EndpointSliceInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_discovery_v1beta1_EndpointSliceResult
  # replace the specified Event
  replaceEventsV1beta1NamespacedEvent(put:io_k8s_api_events_v1beta1_EventInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_events_v1beta1_EventResult
  # replace the specified Ingress
  replaceExtensionsV1beta1NamespacedIngress(put:io_k8s_api_extensions_v1beta1_IngressInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_extensions_v1beta1_IngressResult
  # replace status of the specified Ingress
  replaceExtensionsV1beta1NamespacedIngressStatus(put:io_k8s_api_extensions_v1beta1_IngressInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_extensions_v1beta1_IngressResult
  # replace the specified NetworkPolicy
  replaceNetworkingV1NamespacedNetworkPolicy(put:io_k8s_api_networking_v1_NetworkPolicyInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_networking_v1_NetworkPolicyResult
  # replace the specified Ingress
  replaceNetworkingV1beta1NamespacedIngress(put:io_k8s_api_networking_v1beta1_IngressInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_networking_v1beta1_IngressResult
  # replace status of the specified Ingress
  replaceNetworkingV1beta1NamespacedIngressStatus(put:io_k8s_api_networking_v1beta1_IngressInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_networking_v1beta1_IngressResult
  # replace the specified RuntimeClass
  replaceNodeV1beta1RuntimeClass(put:io_k8s_api_node_v1beta1_RuntimeClassInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_node_v1beta1_RuntimeClassResult
  # replace the specified PodDisruptionBudget
  replacePolicyV1beta1NamespacedPodDisruptionBudget(put:io_k8s_api_policy_v1beta1_PodDisruptionBudgetInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_policy_v1beta1_PodDisruptionBudgetResult
  # replace status of the specified PodDisruptionBudget
  replacePolicyV1beta1NamespacedPodDisruptionBudgetStatus(put:io_k8s_api_policy_v1beta1_PodDisruptionBudgetInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_policy_v1beta1_PodDisruptionBudgetResult
  # replace the specified PodSecurityPolicy
  replacePolicyV1beta1PodSecurityPolicy(put:io_k8s_api_policy_v1beta1_PodSecurityPolicyInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_policy_v1beta1_PodSecurityPolicyResult
  # replace the specified ClusterRole
  replaceRbacAuthorizationV1ClusterRole(put:io_k8s_api_rbac_v1_ClusterRoleInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_rbac_v1_ClusterRoleResult
  # replace the specified ClusterRoleBinding
  replaceRbacAuthorizationV1ClusterRoleBinding(put:io_k8s_api_rbac_v1_ClusterRoleBindingInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_rbac_v1_ClusterRoleBindingResult
  # replace the specified Role
  replaceRbacAuthorizationV1NamespacedRole(put:io_k8s_api_rbac_v1_RoleInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_rbac_v1_RoleResult
  # replace the specified RoleBinding
  replaceRbacAuthorizationV1NamespacedRoleBinding(put:io_k8s_api_rbac_v1_RoleBindingInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_rbac_v1_RoleBindingResult
  # replace the specified ClusterRole
  replaceRbacAuthorizationV1beta1ClusterRole(put:io_k8s_api_rbac_v1beta1_ClusterRoleInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_rbac_v1beta1_ClusterRoleResult
  # replace the specified ClusterRoleBinding
  replaceRbacAuthorizationV1beta1ClusterRoleBinding(put:io_k8s_api_rbac_v1beta1_ClusterRoleBindingInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_rbac_v1beta1_ClusterRoleBindingResult
  # replace the specified Role
  replaceRbacAuthorizationV1beta1NamespacedRole(put:io_k8s_api_rbac_v1beta1_RoleInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_rbac_v1beta1_RoleResult
  # replace the specified RoleBinding
  replaceRbacAuthorizationV1beta1NamespacedRoleBinding(put:io_k8s_api_rbac_v1beta1_RoleBindingInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_rbac_v1beta1_RoleBindingResult
  # replace the specified PriorityClass
  replaceSchedulingV1PriorityClass(put:io_k8s_api_scheduling_v1_PriorityClassInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_scheduling_v1_PriorityClassResult
  # replace the specified PriorityClass
  replaceSchedulingV1beta1PriorityClass(put:io_k8s_api_scheduling_v1beta1_PriorityClassInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_scheduling_v1beta1_PriorityClassResult
  # replace the specified CSINode
  replaceStorageV1CSINode(put:io_k8s_api_storage_v1_CSINodeInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_storage_v1_CSINodeResult
  # replace the specified StorageClass
  replaceStorageV1StorageClass(put:io_k8s_api_storage_v1_StorageClassInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_storage_v1_StorageClassResult
  # replace the specified VolumeAttachment
  replaceStorageV1VolumeAttachment(put:io_k8s_api_storage_v1_VolumeAttachmentInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_storage_v1_VolumeAttachmentResult
  # replace status of the specified VolumeAttachment
  replaceStorageV1VolumeAttachmentStatus(put:io_k8s_api_storage_v1_VolumeAttachmentInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_storage_v1_VolumeAttachmentResult
  # replace the specified CSIDriver
  replaceStorageV1beta1CSIDriver(put:io_k8s_api_storage_v1beta1_CSIDriverInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_storage_v1beta1_CSIDriverResult
  # replace the specified CSINode
  replaceStorageV1beta1CSINode(put:io_k8s_api_storage_v1beta1_CSINodeInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_storage_v1beta1_CSINodeResult
  # replace the specified StorageClass
  replaceStorageV1beta1StorageClass(put:io_k8s_api_storage_v1beta1_StorageClassInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_storage_v1beta1_StorageClassResult
  # replace the specified VolumeAttachment
  replaceStorageV1beta1VolumeAttachment(put:io_k8s_api_storage_v1beta1_VolumeAttachmentInput!,   
    # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
    dryRun:String,   
    # fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.
    fieldManager:String
  ):io_k8s_api_storage_v1beta1_VolumeAttachmentResult
}
type Query {
  # connect GET requests to attach of Pod
  connectCoreV1GetNamespacedPodAttach:String
  # connect GET requests to exec of Pod
  connectCoreV1GetNamespacedPodExec:String
  # connect GET requests to portforward of Pod
  connectCoreV1GetNamespacedPodPortforward:String
  # connect GET requests to proxy of Pod
  connectCoreV1GetNamespacedPodProxy:String
  # connect GET requests to proxy of Pod
  connectCoreV1GetNamespacedPodProxyWithPath:String
  # connect GET requests to proxy of Service
  connectCoreV1GetNamespacedServiceProxy:String
  # connect GET requests to proxy of Service
  connectCoreV1GetNamespacedServiceProxyWithPath:String
  # connect GET requests to proxy of Node
  connectCoreV1GetNodeProxy:String
  # connect GET requests to proxy of Node
  connectCoreV1GetNodeProxyWithPath:String
  # connect HEAD requests to proxy of Pod
  connectCoreV1HeadNamespacedPodProxy:String
  # connect HEAD requests to proxy of Pod
  connectCoreV1HeadNamespacedPodProxyWithPath:String
  # connect HEAD requests to proxy of Service
  connectCoreV1HeadNamespacedServiceProxy:String
  # connect HEAD requests to proxy of Service
  connectCoreV1HeadNamespacedServiceProxyWithPath:String
  # connect HEAD requests to proxy of Node
  connectCoreV1HeadNodeProxy:String
  # connect HEAD requests to proxy of Node
  connectCoreV1HeadNodeProxyWithPath:String
  # get available API versions
  getAPIVersions:io_k8s_apimachinery_pkg_apis_meta_v1_APIGroupListResult
  # get information of a group
  getAdmissionregistrationAPIGroup:io_k8s_apimachinery_pkg_apis_meta_v1_APIGroupResult
  # get available resources
  getAdmissionregistrationV1APIResources:io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceListResult
  # get available resources
  getAdmissionregistrationV1beta1APIResources:io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceListResult
  # get information of a group
  getApiextensionsAPIGroup:io_k8s_apimachinery_pkg_apis_meta_v1_APIGroupResult
  # get available resources
  getApiextensionsV1APIResources:io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceListResult
  # get available resources
  getApiextensionsV1beta1APIResources:io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceListResult
  # get information of a group
  getApiregistrationAPIGroup:io_k8s_apimachinery_pkg_apis_meta_v1_APIGroupResult
  # get available resources
  getApiregistrationV1APIResources:io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceListResult
  # get available resources
  getApiregistrationV1beta1APIResources:io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceListResult
  # get information of a group
  getAppsAPIGroup:io_k8s_apimachinery_pkg_apis_meta_v1_APIGroupResult
  # get available resources
  getAppsV1APIResources:io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceListResult
  # get information of a group
  getAuthenticationAPIGroup:io_k8s_apimachinery_pkg_apis_meta_v1_APIGroupResult
  # get available resources
  getAuthenticationV1APIResources:io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceListResult
  # get available resources
  getAuthenticationV1beta1APIResources:io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceListResult
  # get information of a group
  getAuthorizationAPIGroup:io_k8s_apimachinery_pkg_apis_meta_v1_APIGroupResult
  # get available resources
  getAuthorizationV1APIResources:io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceListResult
  # get available resources
  getAuthorizationV1beta1APIResources:io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceListResult
  # get information of a group
  getAutoscalingAPIGroup:io_k8s_apimachinery_pkg_apis_meta_v1_APIGroupResult
  # get available resources
  getAutoscalingV1APIResources:io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceListResult
  # get available resources
  getAutoscalingV2beta1APIResources:io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceListResult
  # get available resources
  getAutoscalingV2beta2APIResources:io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceListResult
  # get information of a group
  getBatchAPIGroup:io_k8s_apimachinery_pkg_apis_meta_v1_APIGroupResult
  # get available resources
  getBatchV1APIResources:io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceListResult
  # get available resources
  getBatchV1beta1APIResources:io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceListResult
  # get information of a group
  getCertificatesAPIGroup:io_k8s_apimachinery_pkg_apis_meta_v1_APIGroupResult
  # get available resources
  getCertificatesV1beta1APIResources:io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceListResult
  # get the code version
  getCodeVersion:io_k8s_apimachinery_pkg_version_InfoResult
  # get information of a group
  getCoordinationAPIGroup:io_k8s_apimachinery_pkg_apis_meta_v1_APIGroupResult
  # get available resources
  getCoordinationV1APIResources:io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceListResult
  # get available resources
  getCoordinationV1beta1APIResources:io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceListResult
  # get available API versions
  getCoreAPIVersions:io_k8s_apimachinery_pkg_apis_meta_v1_APIVersionsResult
  # get available resources
  getCoreV1APIResources:io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceListResult
  # get information of a group
  getDiscoveryAPIGroup:io_k8s_apimachinery_pkg_apis_meta_v1_APIGroupResult
  # get available resources
  getDiscoveryV1beta1APIResources:io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceListResult
  # get information of a group
  getEventsAPIGroup:io_k8s_apimachinery_pkg_apis_meta_v1_APIGroupResult
  # get available resources
  getEventsV1beta1APIResources:io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceListResult
  # get information of a group
  getExtensionsAPIGroup:io_k8s_apimachinery_pkg_apis_meta_v1_APIGroupResult
  # get available resources
  getExtensionsV1beta1APIResources:io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceListResult
  # get information of a group
  getNetworkingAPIGroup:io_k8s_apimachinery_pkg_apis_meta_v1_APIGroupResult
  # get available resources
  getNetworkingV1APIResources:io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceListResult
  # get available resources
  getNetworkingV1beta1APIResources:io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceListResult
  # get information of a group
  getNodeAPIGroup:io_k8s_apimachinery_pkg_apis_meta_v1_APIGroupResult
  # get available resources
  getNodeV1beta1APIResources:io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceListResult
  # get information of a group
  getPolicyAPIGroup:io_k8s_apimachinery_pkg_apis_meta_v1_APIGroupResult
  # get available resources
  getPolicyV1beta1APIResources:io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceListResult
  # get information of a group
  getRbacAuthorizationAPIGroup:io_k8s_apimachinery_pkg_apis_meta_v1_APIGroupResult
  # get available resources
  getRbacAuthorizationV1APIResources:io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceListResult
  # get available resources
  getRbacAuthorizationV1beta1APIResources:io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceListResult
  # get information of a group
  getSchedulingAPIGroup:io_k8s_apimachinery_pkg_apis_meta_v1_APIGroupResult
  # get available resources
  getSchedulingV1APIResources:io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceListResult
  # get available resources
  getSchedulingV1beta1APIResources:io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceListResult
  # get information of a group
  getStorageAPIGroup:io_k8s_apimachinery_pkg_apis_meta_v1_APIGroupResult
  # get available resources
  getStorageV1APIResources:io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceListResult
  # get available resources
  getStorageV1beta1APIResources:io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceListResult
  # list or watch objects of kind MutatingWebhookConfiguration
  listAdmissionregistrationV1MutatingWebhookConfiguration(  
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_api_admissionregistration_v1_MutatingWebhookConfigurationListResult
  # list or watch objects of kind ValidatingWebhookConfiguration
  listAdmissionregistrationV1ValidatingWebhookConfiguration(  
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_api_admissionregistration_v1_ValidatingWebhookConfigurationListResult
  # list or watch objects of kind MutatingWebhookConfiguration
  listAdmissionregistrationV1beta1MutatingWebhookConfiguration(  
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_api_admissionregistration_v1beta1_MutatingWebhookConfigurationListResult
  # list or watch objects of kind ValidatingWebhookConfiguration
  listAdmissionregistrationV1beta1ValidatingWebhookConfiguration(  
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_api_admissionregistration_v1beta1_ValidatingWebhookConfigurationListResult
  # list or watch objects of kind CustomResourceDefinition
  listApiextensionsV1CustomResourceDefinition(  
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceDefinitionListResult
  # list or watch objects of kind CustomResourceDefinition
  listApiextensionsV1beta1CustomResourceDefinition(  
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_CustomResourceDefinitionListResult
  # list or watch objects of kind APIService
  listApiregistrationV1APIService(  
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIServiceListResult
  # list or watch objects of kind APIService
  listApiregistrationV1beta1APIService(  
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_kube_aggregator_pkg_apis_apiregistration_v1beta1_APIServiceListResult
  # list or watch objects of kind ControllerRevision
  listAppsV1ControllerRevisionForAllNamespaces:io_k8s_api_apps_v1_ControllerRevisionListResult
  # list or watch objects of kind DaemonSet
  listAppsV1DaemonSetForAllNamespaces:io_k8s_api_apps_v1_DaemonSetListResult
  # list or watch objects of kind Deployment
  listAppsV1DeploymentForAllNamespaces:io_k8s_api_apps_v1_DeploymentListResult
  # list or watch objects of kind ControllerRevision
  listAppsV1NamespacedControllerRevision(  
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_api_apps_v1_ControllerRevisionListResult
  # list or watch objects of kind DaemonSet
  listAppsV1NamespacedDaemonSet(  
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_api_apps_v1_DaemonSetListResult
  # list or watch objects of kind Deployment
  listAppsV1NamespacedDeployment(  
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_api_apps_v1_DeploymentListResult
  # list or watch objects of kind ReplicaSet
  listAppsV1NamespacedReplicaSet(  
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_api_apps_v1_ReplicaSetListResult
  # list or watch objects of kind StatefulSet
  listAppsV1NamespacedStatefulSet(  
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_api_apps_v1_StatefulSetListResult
  # list or watch objects of kind ReplicaSet
  listAppsV1ReplicaSetForAllNamespaces:io_k8s_api_apps_v1_ReplicaSetListResult
  # list or watch objects of kind StatefulSet
  listAppsV1StatefulSetForAllNamespaces:io_k8s_api_apps_v1_StatefulSetListResult
  # list or watch objects of kind HorizontalPodAutoscaler
  listAutoscalingV1HorizontalPodAutoscalerForAllNamespaces:io_k8s_api_autoscaling_v1_HorizontalPodAutoscalerListResult
  # list or watch objects of kind HorizontalPodAutoscaler
  listAutoscalingV1NamespacedHorizontalPodAutoscaler(  
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_api_autoscaling_v1_HorizontalPodAutoscalerListResult
  # list or watch objects of kind HorizontalPodAutoscaler
  listAutoscalingV2beta1HorizontalPodAutoscalerForAllNamespaces:io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscalerListResult
  # list or watch objects of kind HorizontalPodAutoscaler
  listAutoscalingV2beta1NamespacedHorizontalPodAutoscaler(  
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscalerListResult
  # list or watch objects of kind HorizontalPodAutoscaler
  listAutoscalingV2beta2HorizontalPodAutoscalerForAllNamespaces:io_k8s_api_autoscaling_v2beta2_HorizontalPodAutoscalerListResult
  # list or watch objects of kind HorizontalPodAutoscaler
  listAutoscalingV2beta2NamespacedHorizontalPodAutoscaler(  
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_api_autoscaling_v2beta2_HorizontalPodAutoscalerListResult
  # list or watch objects of kind Job
  listBatchV1JobForAllNamespaces:io_k8s_api_batch_v1_JobListResult
  # list or watch objects of kind Job
  listBatchV1NamespacedJob(  
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_api_batch_v1_JobListResult
  # list or watch objects of kind CronJob
  listBatchV1beta1CronJobForAllNamespaces:io_k8s_api_batch_v1beta1_CronJobListResult
  # list or watch objects of kind CronJob
  listBatchV1beta1NamespacedCronJob(  
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_api_batch_v1beta1_CronJobListResult
  # list or watch objects of kind CertificateSigningRequest
  listCertificatesV1beta1CertificateSigningRequest(  
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_api_certificates_v1beta1_CertificateSigningRequestListResult
  # list or watch objects of kind Lease
  listCoordinationV1LeaseForAllNamespaces:io_k8s_api_coordination_v1_LeaseListResult
  # list or watch objects of kind Lease
  listCoordinationV1NamespacedLease(  
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_api_coordination_v1_LeaseListResult
  # list or watch objects of kind Lease
  listCoordinationV1beta1LeaseForAllNamespaces:io_k8s_api_coordination_v1beta1_LeaseListResult
  # list or watch objects of kind Lease
  listCoordinationV1beta1NamespacedLease(  
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_api_coordination_v1beta1_LeaseListResult
  # list objects of kind ComponentStatus
  listCoreV1ComponentStatus:io_k8s_api_core_v1_ComponentStatusListResult
  # list or watch objects of kind ConfigMap
  listCoreV1ConfigMapForAllNamespaces:io_k8s_api_core_v1_ConfigMapListResult
  # list or watch objects of kind Endpoints
  listCoreV1EndpointsForAllNamespaces:io_k8s_api_core_v1_EndpointsListResult
  # list or watch objects of kind Event
  listCoreV1EventForAllNamespaces:io_k8s_api_core_v1_EventListResult
  # list or watch objects of kind LimitRange
  listCoreV1LimitRangeForAllNamespaces:io_k8s_api_core_v1_LimitRangeListResult
  # list or watch objects of kind Namespace
  listCoreV1Namespace(  
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_api_core_v1_NamespaceListResult
  # list or watch objects of kind ConfigMap
  listCoreV1NamespacedConfigMap(  
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_api_core_v1_ConfigMapListResult
  # list or watch objects of kind Endpoints
  listCoreV1NamespacedEndpoints(  
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_api_core_v1_EndpointsListResult
  # list or watch objects of kind Event
  listCoreV1NamespacedEvent(  
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_api_core_v1_EventListResult
  # list or watch objects of kind LimitRange
  listCoreV1NamespacedLimitRange(  
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_api_core_v1_LimitRangeListResult
  # list or watch objects of kind PersistentVolumeClaim
  listCoreV1NamespacedPersistentVolumeClaim(  
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_api_core_v1_PersistentVolumeClaimListResult
  # list or watch objects of kind Pod
  listCoreV1NamespacedPod(  
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_api_core_v1_PodListResult
  # list or watch objects of kind PodTemplate
  listCoreV1NamespacedPodTemplate(  
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_api_core_v1_PodTemplateListResult
  # list or watch objects of kind ReplicationController
  listCoreV1NamespacedReplicationController(  
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_api_core_v1_ReplicationControllerListResult
  # list or watch objects of kind ResourceQuota
  listCoreV1NamespacedResourceQuota(  
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_api_core_v1_ResourceQuotaListResult
  # list or watch objects of kind Secret
  listCoreV1NamespacedSecret(  
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_api_core_v1_SecretListResult
  # list or watch objects of kind Service
  listCoreV1NamespacedService(  
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_api_core_v1_ServiceListResult
  # list or watch objects of kind ServiceAccount
  listCoreV1NamespacedServiceAccount(  
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_api_core_v1_ServiceAccountListResult
  # list or watch objects of kind Node
  listCoreV1Node(  
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_api_core_v1_NodeListResult
  # list or watch objects of kind PersistentVolume
  listCoreV1PersistentVolume(  
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_api_core_v1_PersistentVolumeListResult
  # list or watch objects of kind PersistentVolumeClaim
  listCoreV1PersistentVolumeClaimForAllNamespaces:io_k8s_api_core_v1_PersistentVolumeClaimListResult
  # list or watch objects of kind Pod
  listCoreV1PodForAllNamespaces:io_k8s_api_core_v1_PodListResult
  # list or watch objects of kind PodTemplate
  listCoreV1PodTemplateForAllNamespaces:io_k8s_api_core_v1_PodTemplateListResult
  # list or watch objects of kind ReplicationController
  listCoreV1ReplicationControllerForAllNamespaces:io_k8s_api_core_v1_ReplicationControllerListResult
  # list or watch objects of kind ResourceQuota
  listCoreV1ResourceQuotaForAllNamespaces:io_k8s_api_core_v1_ResourceQuotaListResult
  # list or watch objects of kind Secret
  listCoreV1SecretForAllNamespaces:io_k8s_api_core_v1_SecretListResult
  # list or watch objects of kind ServiceAccount
  listCoreV1ServiceAccountForAllNamespaces:io_k8s_api_core_v1_ServiceAccountListResult
  # list or watch objects of kind Service
  listCoreV1ServiceForAllNamespaces:io_k8s_api_core_v1_ServiceListResult
  # list or watch objects of kind EndpointSlice
  listDiscoveryV1beta1EndpointSliceForAllNamespaces:io_k8s_api_discovery_v1beta1_EndpointSliceListResult
  # list or watch objects of kind EndpointSlice
  listDiscoveryV1beta1NamespacedEndpointSlice(  
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_api_discovery_v1beta1_EndpointSliceListResult
  # list or watch objects of kind Event
  listEventsV1beta1EventForAllNamespaces:io_k8s_api_events_v1beta1_EventListResult
  # list or watch objects of kind Event
  listEventsV1beta1NamespacedEvent(  
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_api_events_v1beta1_EventListResult
  # list or watch objects of kind Ingress
  listExtensionsV1beta1IngressForAllNamespaces:io_k8s_api_extensions_v1beta1_IngressListResult
  # list or watch objects of kind Ingress
  listExtensionsV1beta1NamespacedIngress(  
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_api_extensions_v1beta1_IngressListResult
  # list or watch objects of kind NetworkPolicy
  listNetworkingV1NamespacedNetworkPolicy(  
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_api_networking_v1_NetworkPolicyListResult
  # list or watch objects of kind NetworkPolicy
  listNetworkingV1NetworkPolicyForAllNamespaces:io_k8s_api_networking_v1_NetworkPolicyListResult
  # list or watch objects of kind Ingress
  listNetworkingV1beta1IngressForAllNamespaces:io_k8s_api_networking_v1beta1_IngressListResult
  # list or watch objects of kind Ingress
  listNetworkingV1beta1NamespacedIngress(  
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_api_networking_v1beta1_IngressListResult
  # list or watch objects of kind RuntimeClass
  listNodeV1beta1RuntimeClass(  
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_api_node_v1beta1_RuntimeClassListResult
  # list or watch objects of kind PodDisruptionBudget
  listPolicyV1beta1NamespacedPodDisruptionBudget(  
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_api_policy_v1beta1_PodDisruptionBudgetListResult
  # list or watch objects of kind PodDisruptionBudget
  listPolicyV1beta1PodDisruptionBudgetForAllNamespaces:io_k8s_api_policy_v1beta1_PodDisruptionBudgetListResult
  # list or watch objects of kind PodSecurityPolicy
  listPolicyV1beta1PodSecurityPolicy(  
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_api_policy_v1beta1_PodSecurityPolicyListResult
  # list or watch objects of kind ClusterRole
  listRbacAuthorizationV1ClusterRole(  
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_api_rbac_v1_ClusterRoleListResult
  # list or watch objects of kind ClusterRoleBinding
  listRbacAuthorizationV1ClusterRoleBinding(  
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_api_rbac_v1_ClusterRoleBindingListResult
  # list or watch objects of kind Role
  listRbacAuthorizationV1NamespacedRole(  
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_api_rbac_v1_RoleListResult
  # list or watch objects of kind RoleBinding
  listRbacAuthorizationV1NamespacedRoleBinding(  
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_api_rbac_v1_RoleBindingListResult
  # list or watch objects of kind RoleBinding
  listRbacAuthorizationV1RoleBindingForAllNamespaces:io_k8s_api_rbac_v1_RoleBindingListResult
  # list or watch objects of kind Role
  listRbacAuthorizationV1RoleForAllNamespaces:io_k8s_api_rbac_v1_RoleListResult
  # list or watch objects of kind ClusterRole
  listRbacAuthorizationV1beta1ClusterRole(  
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_api_rbac_v1beta1_ClusterRoleListResult
  # list or watch objects of kind ClusterRoleBinding
  listRbacAuthorizationV1beta1ClusterRoleBinding(  
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_api_rbac_v1beta1_ClusterRoleBindingListResult
  # list or watch objects of kind Role
  listRbacAuthorizationV1beta1NamespacedRole(  
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_api_rbac_v1beta1_RoleListResult
  # list or watch objects of kind RoleBinding
  listRbacAuthorizationV1beta1NamespacedRoleBinding(  
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_api_rbac_v1beta1_RoleBindingListResult
  # list or watch objects of kind RoleBinding
  listRbacAuthorizationV1beta1RoleBindingForAllNamespaces:io_k8s_api_rbac_v1beta1_RoleBindingListResult
  # list or watch objects of kind Role
  listRbacAuthorizationV1beta1RoleForAllNamespaces:io_k8s_api_rbac_v1beta1_RoleListResult
  # list or watch objects of kind PriorityClass
  listSchedulingV1PriorityClass(  
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_api_scheduling_v1_PriorityClassListResult
  # list or watch objects of kind PriorityClass
  listSchedulingV1beta1PriorityClass(  
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_api_scheduling_v1beta1_PriorityClassListResult
  # list or watch objects of kind CSINode
  listStorageV1CSINode(  
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_api_storage_v1_CSINodeListResult
  # list or watch objects of kind StorageClass
  listStorageV1StorageClass(  
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_api_storage_v1_StorageClassListResult
  # list or watch objects of kind VolumeAttachment
  listStorageV1VolumeAttachment(  
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_api_storage_v1_VolumeAttachmentListResult
  # list or watch objects of kind CSIDriver
  listStorageV1beta1CSIDriver(  
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_api_storage_v1beta1_CSIDriverListResult
  # list or watch objects of kind CSINode
  listStorageV1beta1CSINode(  
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_api_storage_v1beta1_CSINodeListResult
  # list or watch objects of kind StorageClass
  listStorageV1beta1StorageClass(  
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_api_storage_v1beta1_StorageClassListResult
  # list or watch objects of kind VolumeAttachment
  listStorageV1beta1VolumeAttachment(  
    # allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.
    allowWatchBookmarks:Boolean,   
    # The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the "next key".
    # This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.
    continue:String,   
    # A selector to restrict the list of returned objects by their fields. Defaults to everything.
    fieldSelector:String,   
    # A selector to restrict the list of returned objects by their labels. Defaults to everything.
    labelSelector:String,   
    # limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.
    # The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
    limit:Int,   
    # When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.
    resourceVersion:String,   
    # Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.
    timeoutSeconds:Int,   
    # Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.
    watch:Boolean
  ):io_k8s_api_storage_v1beta1_VolumeAttachmentListResult
  # read the specified MutatingWebhookConfiguration
  readAdmissionregistrationV1MutatingWebhookConfiguration(  
    # Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.
    exact:Boolean,   
    # Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.
    export:Boolean
  ):io_k8s_api_admissionregistration_v1_MutatingWebhookConfigurationResult
  # read the specified ValidatingWebhookConfiguration
  readAdmissionregistrationV1ValidatingWebhookConfiguration(  
    # Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.
    exact:Boolean,   
    # Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.
    export:Boolean
  ):io_k8s_api_admissionregistration_v1_ValidatingWebhookConfigurationResult
  # read the specified MutatingWebhookConfiguration
  readAdmissionregistrationV1beta1MutatingWebhookConfiguration(  
    # Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.
    exact:Boolean,   
    # Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.
    export:Boolean
  ):io_k8s_api_admissionregistration_v1beta1_MutatingWebhookConfigurationResult
  # read the specified ValidatingWebhookConfiguration
  readAdmissionregistrationV1beta1ValidatingWebhookConfiguration(  
    # Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.
    exact:Boolean,   
    # Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.
    export:Boolean
  ):io_k8s_api_admissionregistration_v1beta1_ValidatingWebhookConfigurationResult
  # read the specified CustomResourceDefinition
  readApiextensionsV1CustomResourceDefinition(  
    # Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.
    exact:Boolean,   
    # Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.
    export:Boolean
  ):io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceDefinitionResult
  # read status of the specified CustomResourceDefinition
  readApiextensionsV1CustomResourceDefinitionStatus:io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceDefinitionResult
  # read the specified CustomResourceDefinition
  readApiextensionsV1beta1CustomResourceDefinition(  
    # Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.
    exact:Boolean,   
    # Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.
    export:Boolean
  ):io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_CustomResourceDefinitionResult
  # read status of the specified CustomResourceDefinition
  readApiextensionsV1beta1CustomResourceDefinitionStatus:io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_CustomResourceDefinitionResult
  # read the specified APIService
  readApiregistrationV1APIService(  
    # Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.
    exact:Boolean,   
    # Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.
    export:Boolean
  ):io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIServiceResult
  # read status of the specified APIService
  readApiregistrationV1APIServiceStatus:io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIServiceResult
  # read the specified APIService
  readApiregistrationV1beta1APIService(  
    # Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.
    exact:Boolean,   
    # Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.
    export:Boolean
  ):io_k8s_kube_aggregator_pkg_apis_apiregistration_v1beta1_APIServiceResult
  # read status of the specified APIService
  readApiregistrationV1beta1APIServiceStatus:io_k8s_kube_aggregator_pkg_apis_apiregistration_v1beta1_APIServiceResult
  # read the specified ControllerRevision
  readAppsV1NamespacedControllerRevision(  
    # Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.
    exact:Boolean,   
    # Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.
    export:Boolean
  ):io_k8s_api_apps_v1_ControllerRevisionResult
  # read the specified DaemonSet
  readAppsV1NamespacedDaemonSet(  
    # Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.
    exact:Boolean,   
    # Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.
    export:Boolean
  ):io_k8s_api_apps_v1_DaemonSetResult
  # read status of the specified DaemonSet
  readAppsV1NamespacedDaemonSetStatus:io_k8s_api_apps_v1_DaemonSetResult
  # read the specified Deployment
  readAppsV1NamespacedDeployment(  
    # Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.
    exact:Boolean,   
    # Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.
    export:Boolean
  ):io_k8s_api_apps_v1_DeploymentResult
  # read scale of the specified Deployment
  readAppsV1NamespacedDeploymentScale:io_k8s_api_autoscaling_v1_ScaleResult
  # read status of the specified Deployment
  readAppsV1NamespacedDeploymentStatus:io_k8s_api_apps_v1_DeploymentResult
  # read the specified ReplicaSet
  readAppsV1NamespacedReplicaSet(  
    # Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.
    exact:Boolean,   
    # Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.
    export:Boolean
  ):io_k8s_api_apps_v1_ReplicaSetResult
  # read scale of the specified ReplicaSet
  readAppsV1NamespacedReplicaSetScale:io_k8s_api_autoscaling_v1_ScaleResult
  # read status of the specified ReplicaSet
  readAppsV1NamespacedReplicaSetStatus:io_k8s_api_apps_v1_ReplicaSetResult
  # read the specified StatefulSet
  readAppsV1NamespacedStatefulSet(  
    # Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.
    exact:Boolean,   
    # Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.
    export:Boolean
  ):io_k8s_api_apps_v1_StatefulSetResult
  # read scale of the specified StatefulSet
  readAppsV1NamespacedStatefulSetScale:io_k8s_api_autoscaling_v1_ScaleResult
  # read status of the specified StatefulSet
  readAppsV1NamespacedStatefulSetStatus:io_k8s_api_apps_v1_StatefulSetResult
  # read the specified HorizontalPodAutoscaler
  readAutoscalingV1NamespacedHorizontalPodAutoscaler(  
    # Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.
    exact:Boolean,   
    # Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.
    export:Boolean
  ):io_k8s_api_autoscaling_v1_HorizontalPodAutoscalerResult
  # read status of the specified HorizontalPodAutoscaler
  readAutoscalingV1NamespacedHorizontalPodAutoscalerStatus:io_k8s_api_autoscaling_v1_HorizontalPodAutoscalerResult
  # read the specified HorizontalPodAutoscaler
  readAutoscalingV2beta1NamespacedHorizontalPodAutoscaler(  
    # Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.
    exact:Boolean,   
    # Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.
    export:Boolean
  ):io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscalerResult
  # read status of the specified HorizontalPodAutoscaler
  readAutoscalingV2beta1NamespacedHorizontalPodAutoscalerStatus:io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscalerResult
  # read the specified HorizontalPodAutoscaler
  readAutoscalingV2beta2NamespacedHorizontalPodAutoscaler(  
    # Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.
    exact:Boolean,   
    # Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.
    export:Boolean
  ):io_k8s_api_autoscaling_v2beta2_HorizontalPodAutoscalerResult
  # read status of the specified HorizontalPodAutoscaler
  readAutoscalingV2beta2NamespacedHorizontalPodAutoscalerStatus:io_k8s_api_autoscaling_v2beta2_HorizontalPodAutoscalerResult
  # read the specified Job
  readBatchV1NamespacedJob(  
    # Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.
    exact:Boolean,   
    # Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.
    export:Boolean
  ):io_k8s_api_batch_v1_JobResult
  # read status of the specified Job
  readBatchV1NamespacedJobStatus:io_k8s_api_batch_v1_JobResult
  # read the specified CronJob
  readBatchV1beta1NamespacedCronJob(  
    # Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.
    exact:Boolean,   
    # Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.
    export:Boolean
  ):io_k8s_api_batch_v1beta1_CronJobResult
  # read status of the specified CronJob
  readBatchV1beta1NamespacedCronJobStatus:io_k8s_api_batch_v1beta1_CronJobResult
  # read the specified CertificateSigningRequest
  readCertificatesV1beta1CertificateSigningRequest(  
    # Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.
    exact:Boolean,   
    # Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.
    export:Boolean
  ):io_k8s_api_certificates_v1beta1_CertificateSigningRequestResult
  # read status of the specified CertificateSigningRequest
  readCertificatesV1beta1CertificateSigningRequestStatus:io_k8s_api_certificates_v1beta1_CertificateSigningRequestResult
  # read the specified Lease
  readCoordinationV1NamespacedLease(  
    # Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.
    exact:Boolean,   
    # Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.
    export:Boolean
  ):io_k8s_api_coordination_v1_LeaseResult
  # read the specified Lease
  readCoordinationV1beta1NamespacedLease(  
    # Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.
    exact:Boolean,   
    # Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.
    export:Boolean
  ):io_k8s_api_coordination_v1beta1_LeaseResult
  # read the specified ComponentStatus
  readCoreV1ComponentStatus:io_k8s_api_core_v1_ComponentStatusResult
  # read the specified Namespace
  readCoreV1Namespace(  
    # Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.
    exact:Boolean,   
    # Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.
    export:Boolean
  ):io_k8s_api_core_v1_NamespaceResult
  # read status of the specified Namespace
  readCoreV1NamespaceStatus:io_k8s_api_core_v1_NamespaceResult
  # read the specified ConfigMap
  readCoreV1NamespacedConfigMap(  
    # Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.
    exact:Boolean,   
    # Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.
    export:Boolean
  ):io_k8s_api_core_v1_ConfigMapResult
  # read the specified Endpoints
  readCoreV1NamespacedEndpoints(  
    # Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.
    exact:Boolean,   
    # Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.
    export:Boolean
  ):io_k8s_api_core_v1_EndpointsResult
  # read the specified Event
  readCoreV1NamespacedEvent(  
    # Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.
    exact:Boolean,   
    # Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.
    export:Boolean
  ):io_k8s_api_core_v1_EventResult
  # read the specified LimitRange
  readCoreV1NamespacedLimitRange(  
    # Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.
    exact:Boolean,   
    # Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.
    export:Boolean
  ):io_k8s_api_core_v1_LimitRangeResult
  # read the specified PersistentVolumeClaim
  readCoreV1NamespacedPersistentVolumeClaim(  
    # Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.
    exact:Boolean,   
    # Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.
    export:Boolean
  ):io_k8s_api_core_v1_PersistentVolumeClaimResult
  # read status of the specified PersistentVolumeClaim
  readCoreV1NamespacedPersistentVolumeClaimStatus:io_k8s_api_core_v1_PersistentVolumeClaimResult
  # read the specified Pod
  readCoreV1NamespacedPod(  
    # Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.
    exact:Boolean,   
    # Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.
    export:Boolean
  ):io_k8s_api_core_v1_PodResult
  # read log of the specified Pod
  readCoreV1NamespacedPodLog:String
  # read status of the specified Pod
  readCoreV1NamespacedPodStatus:io_k8s_api_core_v1_PodResult
  # read the specified PodTemplate
  readCoreV1NamespacedPodTemplate(  
    # Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.
    exact:Boolean,   
    # Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.
    export:Boolean
  ):io_k8s_api_core_v1_PodTemplateResult
  # read the specified ReplicationController
  readCoreV1NamespacedReplicationController(  
    # Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.
    exact:Boolean,   
    # Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.
    export:Boolean
  ):io_k8s_api_core_v1_ReplicationControllerResult
  # read scale of the specified ReplicationController
  readCoreV1NamespacedReplicationControllerScale:io_k8s_api_autoscaling_v1_ScaleResult
  # read status of the specified ReplicationController
  readCoreV1NamespacedReplicationControllerStatus:io_k8s_api_core_v1_ReplicationControllerResult
  # read the specified ResourceQuota
  readCoreV1NamespacedResourceQuota(  
    # Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.
    exact:Boolean,   
    # Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.
    export:Boolean
  ):io_k8s_api_core_v1_ResourceQuotaResult
  # read status of the specified ResourceQuota
  readCoreV1NamespacedResourceQuotaStatus:io_k8s_api_core_v1_ResourceQuotaResult
  # read the specified Secret
  readCoreV1NamespacedSecret(  
    # Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.
    exact:Boolean,   
    # Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.
    export:Boolean
  ):io_k8s_api_core_v1_SecretResult
  # read the specified Service
  readCoreV1NamespacedService(  
    # Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.
    exact:Boolean,   
    # Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.
    export:Boolean
  ):io_k8s_api_core_v1_ServiceResult
  # read the specified ServiceAccount
  readCoreV1NamespacedServiceAccount(  
    # Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.
    exact:Boolean,   
    # Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.
    export:Boolean
  ):io_k8s_api_core_v1_ServiceAccountResult
  # read status of the specified Service
  readCoreV1NamespacedServiceStatus:io_k8s_api_core_v1_ServiceResult
  # read the specified Node
  readCoreV1Node(  
    # Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.
    exact:Boolean,   
    # Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.
    export:Boolean
  ):io_k8s_api_core_v1_NodeResult
  # read status of the specified Node
  readCoreV1NodeStatus:io_k8s_api_core_v1_NodeResult
  # read the specified PersistentVolume
  readCoreV1PersistentVolume(  
    # Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.
    exact:Boolean,   
    # Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.
    export:Boolean
  ):io_k8s_api_core_v1_PersistentVolumeResult
  # read status of the specified PersistentVolume
  readCoreV1PersistentVolumeStatus:io_k8s_api_core_v1_PersistentVolumeResult
  # read the specified EndpointSlice
  readDiscoveryV1beta1NamespacedEndpointSlice(  
    # Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.
    exact:Boolean,   
    # Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.
    export:Boolean
  ):io_k8s_api_discovery_v1beta1_EndpointSliceResult
  # read the specified Event
  readEventsV1beta1NamespacedEvent(  
    # Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.
    exact:Boolean,   
    # Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.
    export:Boolean
  ):io_k8s_api_events_v1beta1_EventResult
  # read the specified Ingress
  readExtensionsV1beta1NamespacedIngress(  
    # Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.
    exact:Boolean,   
    # Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.
    export:Boolean
  ):io_k8s_api_extensions_v1beta1_IngressResult
  # read status of the specified Ingress
  readExtensionsV1beta1NamespacedIngressStatus:io_k8s_api_extensions_v1beta1_IngressResult
  # read the specified NetworkPolicy
  readNetworkingV1NamespacedNetworkPolicy(  
    # Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.
    exact:Boolean,   
    # Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.
    export:Boolean
  ):io_k8s_api_networking_v1_NetworkPolicyResult
  # read the specified Ingress
  readNetworkingV1beta1NamespacedIngress(  
    # Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.
    exact:Boolean,   
    # Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.
    export:Boolean
  ):io_k8s_api_networking_v1beta1_IngressResult
  # read status of the specified Ingress
  readNetworkingV1beta1NamespacedIngressStatus:io_k8s_api_networking_v1beta1_IngressResult
  # read the specified RuntimeClass
  readNodeV1beta1RuntimeClass(  
    # Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.
    exact:Boolean,   
    # Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.
    export:Boolean
  ):io_k8s_api_node_v1beta1_RuntimeClassResult
  # read the specified PodDisruptionBudget
  readPolicyV1beta1NamespacedPodDisruptionBudget(  
    # Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.
    exact:Boolean,   
    # Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.
    export:Boolean
  ):io_k8s_api_policy_v1beta1_PodDisruptionBudgetResult
  # read status of the specified PodDisruptionBudget
  readPolicyV1beta1NamespacedPodDisruptionBudgetStatus:io_k8s_api_policy_v1beta1_PodDisruptionBudgetResult
  # read the specified PodSecurityPolicy
  readPolicyV1beta1PodSecurityPolicy(  
    # Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.
    exact:Boolean,   
    # Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.
    export:Boolean
  ):io_k8s_api_policy_v1beta1_PodSecurityPolicyResult
  # read the specified ClusterRole
  readRbacAuthorizationV1ClusterRole:io_k8s_api_rbac_v1_ClusterRoleResult
  # read the specified ClusterRoleBinding
  readRbacAuthorizationV1ClusterRoleBinding:io_k8s_api_rbac_v1_ClusterRoleBindingResult
  # read the specified Role
  readRbacAuthorizationV1NamespacedRole:io_k8s_api_rbac_v1_RoleResult
  # read the specified RoleBinding
  readRbacAuthorizationV1NamespacedRoleBinding:io_k8s_api_rbac_v1_RoleBindingResult
  # read the specified ClusterRole
  readRbacAuthorizationV1beta1ClusterRole:io_k8s_api_rbac_v1beta1_ClusterRoleResult
  # read the specified ClusterRoleBinding
  readRbacAuthorizationV1beta1ClusterRoleBinding:io_k8s_api_rbac_v1beta1_ClusterRoleBindingResult
  # read the specified Role
  readRbacAuthorizationV1beta1NamespacedRole:io_k8s_api_rbac_v1beta1_RoleResult
  # read the specified RoleBinding
  readRbacAuthorizationV1beta1NamespacedRoleBinding:io_k8s_api_rbac_v1beta1_RoleBindingResult
  # read the specified PriorityClass
  readSchedulingV1PriorityClass(  
    # Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.
    exact:Boolean,   
    # Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.
    export:Boolean
  ):io_k8s_api_scheduling_v1_PriorityClassResult
  # read the specified PriorityClass
  readSchedulingV1beta1PriorityClass(  
    # Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.
    exact:Boolean,   
    # Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.
    export:Boolean
  ):io_k8s_api_scheduling_v1beta1_PriorityClassResult
  # read the specified CSINode
  readStorageV1CSINode(  
    # Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.
    exact:Boolean,   
    # Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.
    export:Boolean
  ):io_k8s_api_storage_v1_CSINodeResult
  # read the specified StorageClass
  readStorageV1StorageClass(  
    # Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.
    exact:Boolean,   
    # Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.
    export:Boolean
  ):io_k8s_api_storage_v1_StorageClassResult
  # read the specified VolumeAttachment
  readStorageV1VolumeAttachment(  
    # Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.
    exact:Boolean,   
    # Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.
    export:Boolean
  ):io_k8s_api_storage_v1_VolumeAttachmentResult
  # read status of the specified VolumeAttachment
  readStorageV1VolumeAttachmentStatus:io_k8s_api_storage_v1_VolumeAttachmentResult
  # read the specified CSIDriver
  readStorageV1beta1CSIDriver(  
    # Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.
    exact:Boolean,   
    # Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.
    export:Boolean
  ):io_k8s_api_storage_v1beta1_CSIDriverResult
  # read the specified CSINode
  readStorageV1beta1CSINode(  
    # Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.
    exact:Boolean,   
    # Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.
    export:Boolean
  ):io_k8s_api_storage_v1beta1_CSINodeResult
  # read the specified StorageClass
  readStorageV1beta1StorageClass(  
    # Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.
    exact:Boolean,   
    # Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.
    export:Boolean
  ):io_k8s_api_storage_v1beta1_StorageClassResult
  # read the specified VolumeAttachment
  readStorageV1beta1VolumeAttachment(  
    # Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18.
    exact:Boolean,   
    # Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18.
    export:Boolean
  ):io_k8s_api_storage_v1beta1_VolumeAttachmentResult
  # watch changes to an object of kind MutatingWebhookConfiguration. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.
  watchAdmissionregistrationV1MutatingWebhookConfiguration:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of MutatingWebhookConfiguration. deprecated: use the 'watch' parameter with a list operation instead.
  watchAdmissionregistrationV1MutatingWebhookConfigurationList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch changes to an object of kind ValidatingWebhookConfiguration. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.
  watchAdmissionregistrationV1ValidatingWebhookConfiguration:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of ValidatingWebhookConfiguration. deprecated: use the 'watch' parameter with a list operation instead.
  watchAdmissionregistrationV1ValidatingWebhookConfigurationList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch changes to an object of kind MutatingWebhookConfiguration. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.
  watchAdmissionregistrationV1beta1MutatingWebhookConfiguration:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of MutatingWebhookConfiguration. deprecated: use the 'watch' parameter with a list operation instead.
  watchAdmissionregistrationV1beta1MutatingWebhookConfigurationList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch changes to an object of kind ValidatingWebhookConfiguration. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.
  watchAdmissionregistrationV1beta1ValidatingWebhookConfiguration:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of ValidatingWebhookConfiguration. deprecated: use the 'watch' parameter with a list operation instead.
  watchAdmissionregistrationV1beta1ValidatingWebhookConfigurationList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch changes to an object of kind CustomResourceDefinition. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.
  watchApiextensionsV1CustomResourceDefinition:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of CustomResourceDefinition. deprecated: use the 'watch' parameter with a list operation instead.
  watchApiextensionsV1CustomResourceDefinitionList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch changes to an object of kind CustomResourceDefinition. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.
  watchApiextensionsV1beta1CustomResourceDefinition:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of CustomResourceDefinition. deprecated: use the 'watch' parameter with a list operation instead.
  watchApiextensionsV1beta1CustomResourceDefinitionList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch changes to an object of kind APIService. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.
  watchApiregistrationV1APIService:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of APIService. deprecated: use the 'watch' parameter with a list operation instead.
  watchApiregistrationV1APIServiceList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch changes to an object of kind APIService. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.
  watchApiregistrationV1beta1APIService:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of APIService. deprecated: use the 'watch' parameter with a list operation instead.
  watchApiregistrationV1beta1APIServiceList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of ControllerRevision. deprecated: use the 'watch' parameter with a list operation instead.
  watchAppsV1ControllerRevisionListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of DaemonSet. deprecated: use the 'watch' parameter with a list operation instead.
  watchAppsV1DaemonSetListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of Deployment. deprecated: use the 'watch' parameter with a list operation instead.
  watchAppsV1DeploymentListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch changes to an object of kind ControllerRevision. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.
  watchAppsV1NamespacedControllerRevision:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of ControllerRevision. deprecated: use the 'watch' parameter with a list operation instead.
  watchAppsV1NamespacedControllerRevisionList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch changes to an object of kind DaemonSet. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.
  watchAppsV1NamespacedDaemonSet:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of DaemonSet. deprecated: use the 'watch' parameter with a list operation instead.
  watchAppsV1NamespacedDaemonSetList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch changes to an object of kind Deployment. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.
  watchAppsV1NamespacedDeployment:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of Deployment. deprecated: use the 'watch' parameter with a list operation instead.
  watchAppsV1NamespacedDeploymentList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch changes to an object of kind ReplicaSet. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.
  watchAppsV1NamespacedReplicaSet:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of ReplicaSet. deprecated: use the 'watch' parameter with a list operation instead.
  watchAppsV1NamespacedReplicaSetList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch changes to an object of kind StatefulSet. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.
  watchAppsV1NamespacedStatefulSet:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of StatefulSet. deprecated: use the 'watch' parameter with a list operation instead.
  watchAppsV1NamespacedStatefulSetList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of ReplicaSet. deprecated: use the 'watch' parameter with a list operation instead.
  watchAppsV1ReplicaSetListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of StatefulSet. deprecated: use the 'watch' parameter with a list operation instead.
  watchAppsV1StatefulSetListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of HorizontalPodAutoscaler. deprecated: use the 'watch' parameter with a list operation instead.
  watchAutoscalingV1HorizontalPodAutoscalerListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch changes to an object of kind HorizontalPodAutoscaler. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.
  watchAutoscalingV1NamespacedHorizontalPodAutoscaler:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of HorizontalPodAutoscaler. deprecated: use the 'watch' parameter with a list operation instead.
  watchAutoscalingV1NamespacedHorizontalPodAutoscalerList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of HorizontalPodAutoscaler. deprecated: use the 'watch' parameter with a list operation instead.
  watchAutoscalingV2beta1HorizontalPodAutoscalerListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch changes to an object of kind HorizontalPodAutoscaler. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.
  watchAutoscalingV2beta1NamespacedHorizontalPodAutoscaler:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of HorizontalPodAutoscaler. deprecated: use the 'watch' parameter with a list operation instead.
  watchAutoscalingV2beta1NamespacedHorizontalPodAutoscalerList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of HorizontalPodAutoscaler. deprecated: use the 'watch' parameter with a list operation instead.
  watchAutoscalingV2beta2HorizontalPodAutoscalerListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch changes to an object of kind HorizontalPodAutoscaler. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.
  watchAutoscalingV2beta2NamespacedHorizontalPodAutoscaler:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of HorizontalPodAutoscaler. deprecated: use the 'watch' parameter with a list operation instead.
  watchAutoscalingV2beta2NamespacedHorizontalPodAutoscalerList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of Job. deprecated: use the 'watch' parameter with a list operation instead.
  watchBatchV1JobListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch changes to an object of kind Job. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.
  watchBatchV1NamespacedJob:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of Job. deprecated: use the 'watch' parameter with a list operation instead.
  watchBatchV1NamespacedJobList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of CronJob. deprecated: use the 'watch' parameter with a list operation instead.
  watchBatchV1beta1CronJobListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch changes to an object of kind CronJob. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.
  watchBatchV1beta1NamespacedCronJob:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of CronJob. deprecated: use the 'watch' parameter with a list operation instead.
  watchBatchV1beta1NamespacedCronJobList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch changes to an object of kind CertificateSigningRequest. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.
  watchCertificatesV1beta1CertificateSigningRequest:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of CertificateSigningRequest. deprecated: use the 'watch' parameter with a list operation instead.
  watchCertificatesV1beta1CertificateSigningRequestList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of Lease. deprecated: use the 'watch' parameter with a list operation instead.
  watchCoordinationV1LeaseListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch changes to an object of kind Lease. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.
  watchCoordinationV1NamespacedLease:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of Lease. deprecated: use the 'watch' parameter with a list operation instead.
  watchCoordinationV1NamespacedLeaseList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of Lease. deprecated: use the 'watch' parameter with a list operation instead.
  watchCoordinationV1beta1LeaseListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch changes to an object of kind Lease. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.
  watchCoordinationV1beta1NamespacedLease:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of Lease. deprecated: use the 'watch' parameter with a list operation instead.
  watchCoordinationV1beta1NamespacedLeaseList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of ConfigMap. deprecated: use the 'watch' parameter with a list operation instead.
  watchCoreV1ConfigMapListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of Endpoints. deprecated: use the 'watch' parameter with a list operation instead.
  watchCoreV1EndpointsListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of Event. deprecated: use the 'watch' parameter with a list operation instead.
  watchCoreV1EventListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of LimitRange. deprecated: use the 'watch' parameter with a list operation instead.
  watchCoreV1LimitRangeListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch changes to an object of kind Namespace. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.
  watchCoreV1Namespace:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of Namespace. deprecated: use the 'watch' parameter with a list operation instead.
  watchCoreV1NamespaceList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch changes to an object of kind ConfigMap. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.
  watchCoreV1NamespacedConfigMap:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of ConfigMap. deprecated: use the 'watch' parameter with a list operation instead.
  watchCoreV1NamespacedConfigMapList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch changes to an object of kind Endpoints. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.
  watchCoreV1NamespacedEndpoints:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of Endpoints. deprecated: use the 'watch' parameter with a list operation instead.
  watchCoreV1NamespacedEndpointsList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch changes to an object of kind Event. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.
  watchCoreV1NamespacedEvent:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of Event. deprecated: use the 'watch' parameter with a list operation instead.
  watchCoreV1NamespacedEventList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch changes to an object of kind LimitRange. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.
  watchCoreV1NamespacedLimitRange:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of LimitRange. deprecated: use the 'watch' parameter with a list operation instead.
  watchCoreV1NamespacedLimitRangeList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch changes to an object of kind PersistentVolumeClaim. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.
  watchCoreV1NamespacedPersistentVolumeClaim:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of PersistentVolumeClaim. deprecated: use the 'watch' parameter with a list operation instead.
  watchCoreV1NamespacedPersistentVolumeClaimList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch changes to an object of kind Pod. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.
  watchCoreV1NamespacedPod:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of Pod. deprecated: use the 'watch' parameter with a list operation instead.
  watchCoreV1NamespacedPodList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch changes to an object of kind PodTemplate. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.
  watchCoreV1NamespacedPodTemplate:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of PodTemplate. deprecated: use the 'watch' parameter with a list operation instead.
  watchCoreV1NamespacedPodTemplateList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch changes to an object of kind ReplicationController. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.
  watchCoreV1NamespacedReplicationController:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of ReplicationController. deprecated: use the 'watch' parameter with a list operation instead.
  watchCoreV1NamespacedReplicationControllerList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch changes to an object of kind ResourceQuota. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.
  watchCoreV1NamespacedResourceQuota:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of ResourceQuota. deprecated: use the 'watch' parameter with a list operation instead.
  watchCoreV1NamespacedResourceQuotaList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch changes to an object of kind Secret. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.
  watchCoreV1NamespacedSecret:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of Secret. deprecated: use the 'watch' parameter with a list operation instead.
  watchCoreV1NamespacedSecretList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch changes to an object of kind Service. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.
  watchCoreV1NamespacedService:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch changes to an object of kind ServiceAccount. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.
  watchCoreV1NamespacedServiceAccount:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of ServiceAccount. deprecated: use the 'watch' parameter with a list operation instead.
  watchCoreV1NamespacedServiceAccountList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of Service. deprecated: use the 'watch' parameter with a list operation instead.
  watchCoreV1NamespacedServiceList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch changes to an object of kind Node. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.
  watchCoreV1Node:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of Node. deprecated: use the 'watch' parameter with a list operation instead.
  watchCoreV1NodeList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch changes to an object of kind PersistentVolume. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.
  watchCoreV1PersistentVolume:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of PersistentVolumeClaim. deprecated: use the 'watch' parameter with a list operation instead.
  watchCoreV1PersistentVolumeClaimListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of PersistentVolume. deprecated: use the 'watch' parameter with a list operation instead.
  watchCoreV1PersistentVolumeList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of Pod. deprecated: use the 'watch' parameter with a list operation instead.
  watchCoreV1PodListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of PodTemplate. deprecated: use the 'watch' parameter with a list operation instead.
  watchCoreV1PodTemplateListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of ReplicationController. deprecated: use the 'watch' parameter with a list operation instead.
  watchCoreV1ReplicationControllerListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of ResourceQuota. deprecated: use the 'watch' parameter with a list operation instead.
  watchCoreV1ResourceQuotaListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of Secret. deprecated: use the 'watch' parameter with a list operation instead.
  watchCoreV1SecretListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of ServiceAccount. deprecated: use the 'watch' parameter with a list operation instead.
  watchCoreV1ServiceAccountListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of Service. deprecated: use the 'watch' parameter with a list operation instead.
  watchCoreV1ServiceListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of EndpointSlice. deprecated: use the 'watch' parameter with a list operation instead.
  watchDiscoveryV1beta1EndpointSliceListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch changes to an object of kind EndpointSlice. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.
  watchDiscoveryV1beta1NamespacedEndpointSlice:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of EndpointSlice. deprecated: use the 'watch' parameter with a list operation instead.
  watchDiscoveryV1beta1NamespacedEndpointSliceList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of Event. deprecated: use the 'watch' parameter with a list operation instead.
  watchEventsV1beta1EventListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch changes to an object of kind Event. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.
  watchEventsV1beta1NamespacedEvent:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of Event. deprecated: use the 'watch' parameter with a list operation instead.
  watchEventsV1beta1NamespacedEventList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of Ingress. deprecated: use the 'watch' parameter with a list operation instead.
  watchExtensionsV1beta1IngressListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch changes to an object of kind Ingress. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.
  watchExtensionsV1beta1NamespacedIngress:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of Ingress. deprecated: use the 'watch' parameter with a list operation instead.
  watchExtensionsV1beta1NamespacedIngressList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch changes to an object of kind NetworkPolicy. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.
  watchNetworkingV1NamespacedNetworkPolicy:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of NetworkPolicy. deprecated: use the 'watch' parameter with a list operation instead.
  watchNetworkingV1NamespacedNetworkPolicyList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of NetworkPolicy. deprecated: use the 'watch' parameter with a list operation instead.
  watchNetworkingV1NetworkPolicyListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of Ingress. deprecated: use the 'watch' parameter with a list operation instead.
  watchNetworkingV1beta1IngressListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch changes to an object of kind Ingress. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.
  watchNetworkingV1beta1NamespacedIngress:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of Ingress. deprecated: use the 'watch' parameter with a list operation instead.
  watchNetworkingV1beta1NamespacedIngressList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch changes to an object of kind RuntimeClass. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.
  watchNodeV1beta1RuntimeClass:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of RuntimeClass. deprecated: use the 'watch' parameter with a list operation instead.
  watchNodeV1beta1RuntimeClassList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch changes to an object of kind PodDisruptionBudget. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.
  watchPolicyV1beta1NamespacedPodDisruptionBudget:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of PodDisruptionBudget. deprecated: use the 'watch' parameter with a list operation instead.
  watchPolicyV1beta1NamespacedPodDisruptionBudgetList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of PodDisruptionBudget. deprecated: use the 'watch' parameter with a list operation instead.
  watchPolicyV1beta1PodDisruptionBudgetListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch changes to an object of kind PodSecurityPolicy. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.
  watchPolicyV1beta1PodSecurityPolicy:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of PodSecurityPolicy. deprecated: use the 'watch' parameter with a list operation instead.
  watchPolicyV1beta1PodSecurityPolicyList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch changes to an object of kind ClusterRole. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.
  watchRbacAuthorizationV1ClusterRole:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch changes to an object of kind ClusterRoleBinding. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.
  watchRbacAuthorizationV1ClusterRoleBinding:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of ClusterRoleBinding. deprecated: use the 'watch' parameter with a list operation instead.
  watchRbacAuthorizationV1ClusterRoleBindingList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of ClusterRole. deprecated: use the 'watch' parameter with a list operation instead.
  watchRbacAuthorizationV1ClusterRoleList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch changes to an object of kind Role. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.
  watchRbacAuthorizationV1NamespacedRole:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch changes to an object of kind RoleBinding. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.
  watchRbacAuthorizationV1NamespacedRoleBinding:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of RoleBinding. deprecated: use the 'watch' parameter with a list operation instead.
  watchRbacAuthorizationV1NamespacedRoleBindingList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of Role. deprecated: use the 'watch' parameter with a list operation instead.
  watchRbacAuthorizationV1NamespacedRoleList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of RoleBinding. deprecated: use the 'watch' parameter with a list operation instead.
  watchRbacAuthorizationV1RoleBindingListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of Role. deprecated: use the 'watch' parameter with a list operation instead.
  watchRbacAuthorizationV1RoleListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch changes to an object of kind ClusterRole. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.
  watchRbacAuthorizationV1beta1ClusterRole:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch changes to an object of kind ClusterRoleBinding. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.
  watchRbacAuthorizationV1beta1ClusterRoleBinding:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of ClusterRoleBinding. deprecated: use the 'watch' parameter with a list operation instead.
  watchRbacAuthorizationV1beta1ClusterRoleBindingList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of ClusterRole. deprecated: use the 'watch' parameter with a list operation instead.
  watchRbacAuthorizationV1beta1ClusterRoleList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch changes to an object of kind Role. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.
  watchRbacAuthorizationV1beta1NamespacedRole:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch changes to an object of kind RoleBinding. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.
  watchRbacAuthorizationV1beta1NamespacedRoleBinding:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of RoleBinding. deprecated: use the 'watch' parameter with a list operation instead.
  watchRbacAuthorizationV1beta1NamespacedRoleBindingList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of Role. deprecated: use the 'watch' parameter with a list operation instead.
  watchRbacAuthorizationV1beta1NamespacedRoleList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of RoleBinding. deprecated: use the 'watch' parameter with a list operation instead.
  watchRbacAuthorizationV1beta1RoleBindingListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of Role. deprecated: use the 'watch' parameter with a list operation instead.
  watchRbacAuthorizationV1beta1RoleListForAllNamespaces:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch changes to an object of kind PriorityClass. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.
  watchSchedulingV1PriorityClass:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of PriorityClass. deprecated: use the 'watch' parameter with a list operation instead.
  watchSchedulingV1PriorityClassList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch changes to an object of kind PriorityClass. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.
  watchSchedulingV1beta1PriorityClass:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of PriorityClass. deprecated: use the 'watch' parameter with a list operation instead.
  watchSchedulingV1beta1PriorityClassList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch changes to an object of kind CSINode. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.
  watchStorageV1CSINode:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of CSINode. deprecated: use the 'watch' parameter with a list operation instead.
  watchStorageV1CSINodeList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch changes to an object of kind StorageClass. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.
  watchStorageV1StorageClass:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of StorageClass. deprecated: use the 'watch' parameter with a list operation instead.
  watchStorageV1StorageClassList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch changes to an object of kind VolumeAttachment. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.
  watchStorageV1VolumeAttachment:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of VolumeAttachment. deprecated: use the 'watch' parameter with a list operation instead.
  watchStorageV1VolumeAttachmentList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch changes to an object of kind CSIDriver. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.
  watchStorageV1beta1CSIDriver:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of CSIDriver. deprecated: use the 'watch' parameter with a list operation instead.
  watchStorageV1beta1CSIDriverList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch changes to an object of kind CSINode. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.
  watchStorageV1beta1CSINode:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of CSINode. deprecated: use the 'watch' parameter with a list operation instead.
  watchStorageV1beta1CSINodeList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch changes to an object of kind StorageClass. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.
  watchStorageV1beta1StorageClass:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of StorageClass. deprecated: use the 'watch' parameter with a list operation instead.
  watchStorageV1beta1StorageClassList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch changes to an object of kind VolumeAttachment. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.
  watchStorageV1beta1VolumeAttachment:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
  # watch individual changes to a list of VolumeAttachment. deprecated: use the 'watch' parameter with a list operation instead.
  watchStorageV1beta1VolumeAttachmentList:io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult
}
# MutatingWebhookConfiguration describes the configuration of and admission webhook that accept or reject and may change the object.
input io_k8s_api_admissionregistration_v1_MutatingWebhookConfigurationInput {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  # Webhooks is a list of webhooks and the affected resources and operations.
  webhooks:[io_k8s_api_admissionregistration_v1_MutatingWebhookInput]
}
# MutatingWebhookConfigurationList is a list of MutatingWebhookConfiguration.
type io_k8s_api_admissionregistration_v1_MutatingWebhookConfigurationListResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # List of MutatingWebhookConfiguration.
  items:[io_k8s_api_admissionregistration_v1_MutatingWebhookConfigurationResult]
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
# MutatingWebhookConfiguration describes the configuration of and admission webhook that accept or reject and may change the object.
type io_k8s_api_admissionregistration_v1_MutatingWebhookConfigurationResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  # Webhooks is a list of webhooks and the affected resources and operations.
  webhooks:[io_k8s_api_admissionregistration_v1_MutatingWebhookResult]
}
# MutatingWebhook describes an admission webhook and the resources and operations it applies to.
input io_k8s_api_admissionregistration_v1_MutatingWebhookInput {
  # AdmissionReviewVersions is an ordered list of preferred `AdmissionReview` versions the Webhook expects. API server will try to use first version in the list which it supports. If none of the versions specified in this list supported by API server, validation will fail for this object. If a persisted webhook configuration specifies allowed versions and does not include any versions known to the API Server, calls to the webhook will fail and be subject to the failure policy.
  admissionReviewVersions:[String]
  # FailurePolicy defines how unrecognized errors from the admission endpoint are handled - allowed values are Ignore or Fail. Defaults to Fail.
  failurePolicy:String
  # matchPolicy defines how the "rules" list is used to match incoming requests. Allowed values are "Exact" or "Equivalent".
  # - Exact: match a request only if it exactly matches a specified rule. For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1, but "rules" only included `apiGroups:["apps"], apiVersions:["v1"], resources: ["deployments"]`, a request to apps/v1beta1 or extensions/v1beta1 would not be sent to the webhook.
  # - Equivalent: match a request if modifies a resource listed in rules, even via another API group or version. For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1, and "rules" only included `apiGroups:["apps"], apiVersions:["v1"], resources: ["deployments"]`, a request to apps/v1beta1 or extensions/v1beta1 would be converted to apps/v1 and sent to the webhook.
  # Defaults to "Equivalent"
  matchPolicy:String
  # SideEffects states whether this webhook has side effects. Acceptable values are: None, NoneOnDryRun (webhooks created via v1beta1 may also specify Some or Unknown). Webhooks with side effects MUST implement a reconciliation system, since a request may be rejected by a future step in the admission change and the side effects therefore need to be undone. Requests with the dryRun attribute will be auto-rejected if they match a webhook with sideEffects == Unknown or Some.
  sideEffects:String
  # WebhookClientConfig contains the information to make a TLS connection with the webhook
  clientConfig:io_k8s_api_admissionregistration_v1_WebhookClientConfigInput
  # The name of the admission webhook. Name should be fully qualified, e.g., imagepolicy.kubernetes.io, where "imagepolicy" is the name of the webhook, and kubernetes.io is the name of the organization. Required.
  name:String
  # A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
  namespaceSelector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorInput
  # A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
  objectSelector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorInput
  # reinvocationPolicy indicates whether this webhook should be called multiple times as part of a single admission evaluation. Allowed values are "Never" and "IfNeeded".
  # Never: the webhook will not be called more than once in a single admission evaluation.
  # IfNeeded: the webhook will be called at least one additional time as part of the admission evaluation if the object being admitted is modified by other admission plugins after the initial webhook call. Webhooks that specify this option *must* be idempotent, able to process objects they previously admitted. Note: * the number of additional invocations is not guaranteed to be exactly one. * if additional invocations result in further modifications to the object, webhooks are not guaranteed to be invoked again. * webhooks that use this option may be reordered to minimize the number of additional invocations. * to validate an object after all mutations are guaranteed complete, use a validating admission webhook instead.
  # Defaults to "Never".
  reinvocationPolicy:String
  # Rules describes what operations on what resources/subresources the webhook cares about. The webhook cares about an operation if it matches _any_ Rule. However, in order to prevent ValidatingAdmissionWebhooks and MutatingAdmissionWebhooks from putting the cluster in a state which cannot be recovered from without completely disabling the plugin, ValidatingAdmissionWebhooks and MutatingAdmissionWebhooks are never called on admission requests for ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects.
  rules:[io_k8s_api_admissionregistration_v1_RuleWithOperationsInput]
  # TimeoutSeconds specifies the timeout for this webhook. After the timeout passes, the webhook call will be ignored or the API call will fail based on the failure policy. The timeout value must be between 1 and 30 seconds. Default to 10 seconds.
  timeoutSeconds:Int
}
# MutatingWebhook describes an admission webhook and the resources and operations it applies to.
type io_k8s_api_admissionregistration_v1_MutatingWebhookResult {
  # AdmissionReviewVersions is an ordered list of preferred `AdmissionReview` versions the Webhook expects. API server will try to use first version in the list which it supports. If none of the versions specified in this list supported by API server, validation will fail for this object. If a persisted webhook configuration specifies allowed versions and does not include any versions known to the API Server, calls to the webhook will fail and be subject to the failure policy.
  admissionReviewVersions:[String]
  # WebhookClientConfig contains the information to make a TLS connection with the webhook
  clientConfig:io_k8s_api_admissionregistration_v1_WebhookClientConfigResult
  # FailurePolicy defines how unrecognized errors from the admission endpoint are handled - allowed values are Ignore or Fail. Defaults to Fail.
  failurePolicy:String
  # matchPolicy defines how the "rules" list is used to match incoming requests. Allowed values are "Exact" or "Equivalent".
  # - Exact: match a request only if it exactly matches a specified rule. For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1, but "rules" only included `apiGroups:["apps"], apiVersions:["v1"], resources: ["deployments"]`, a request to apps/v1beta1 or extensions/v1beta1 would not be sent to the webhook.
  # - Equivalent: match a request if modifies a resource listed in rules, even via another API group or version. For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1, and "rules" only included `apiGroups:["apps"], apiVersions:["v1"], resources: ["deployments"]`, a request to apps/v1beta1 or extensions/v1beta1 would be converted to apps/v1 and sent to the webhook.
  # Defaults to "Equivalent"
  matchPolicy:String
  # The name of the admission webhook. Name should be fully qualified, e.g., imagepolicy.kubernetes.io, where "imagepolicy" is the name of the webhook, and kubernetes.io is the name of the organization. Required.
  name:String
  # A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
  namespaceSelector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorResult
  # A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
  objectSelector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorResult
  # reinvocationPolicy indicates whether this webhook should be called multiple times as part of a single admission evaluation. Allowed values are "Never" and "IfNeeded".
  # Never: the webhook will not be called more than once in a single admission evaluation.
  # IfNeeded: the webhook will be called at least one additional time as part of the admission evaluation if the object being admitted is modified by other admission plugins after the initial webhook call. Webhooks that specify this option *must* be idempotent, able to process objects they previously admitted. Note: * the number of additional invocations is not guaranteed to be exactly one. * if additional invocations result in further modifications to the object, webhooks are not guaranteed to be invoked again. * webhooks that use this option may be reordered to minimize the number of additional invocations. * to validate an object after all mutations are guaranteed complete, use a validating admission webhook instead.
  # Defaults to "Never".
  reinvocationPolicy:String
  # Rules describes what operations on what resources/subresources the webhook cares about. The webhook cares about an operation if it matches _any_ Rule. However, in order to prevent ValidatingAdmissionWebhooks and MutatingAdmissionWebhooks from putting the cluster in a state which cannot be recovered from without completely disabling the plugin, ValidatingAdmissionWebhooks and MutatingAdmissionWebhooks are never called on admission requests for ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects.
  rules:[io_k8s_api_admissionregistration_v1_RuleWithOperationsResult]
  # SideEffects states whether this webhook has side effects. Acceptable values are: None, NoneOnDryRun (webhooks created via v1beta1 may also specify Some or Unknown). Webhooks with side effects MUST implement a reconciliation system, since a request may be rejected by a future step in the admission change and the side effects therefore need to be undone. Requests with the dryRun attribute will be auto-rejected if they match a webhook with sideEffects == Unknown or Some.
  sideEffects:String
  # TimeoutSeconds specifies the timeout for this webhook. After the timeout passes, the webhook call will be ignored or the API call will fail based on the failure policy. The timeout value must be between 1 and 30 seconds. Default to 10 seconds.
  timeoutSeconds:Int
}
# RuleWithOperations is a tuple of Operations and Resources. It is recommended to make sure that all the tuple expansions are valid.
input io_k8s_api_admissionregistration_v1_RuleWithOperationsInput {
  # Resources is a list of resources this rule applies to.
  # For example: 'pods' means pods. 'pods/log' means the log subresource of pods. '*' means all resources, but not subresources. 'pods/*' means all subresources of pods. '*/scale' means all scale subresources. '*/*' means all resources and their subresources.
  # If wildcard is present, the validation rule will ensure resources do not overlap with each other.
  # Depending on the enclosing object, subresources might not be allowed. Required.
  resources:[String]
  # scope specifies the scope of this rule. Valid values are "Cluster", "Namespaced", and "*" "Cluster" means that only cluster-scoped resources will match this rule. Namespace API objects are cluster-scoped. "Namespaced" means that only namespaced resources will match this rule. "*" means that there are no scope restrictions. Subresources match the scope of their parent resource. Default is "*".
  scope:String
  # APIGroups is the API groups the resources belong to. '*' is all groups. If '*' is present, the length of the slice must be one. Required.
  apiGroups:[String]
  # APIVersions is the API versions the resources belong to. '*' is all versions. If '*' is present, the length of the slice must be one. Required.
  apiVersions:[String]
  # Operations is the operations the admission hook cares about - CREATE, UPDATE, or * for all operations. If '*' is present, the length of the slice must be one. Required.
  operations:[String]
}
# RuleWithOperations is a tuple of Operations and Resources. It is recommended to make sure that all the tuple expansions are valid.
type io_k8s_api_admissionregistration_v1_RuleWithOperationsResult {
  # APIGroups is the API groups the resources belong to. '*' is all groups. If '*' is present, the length of the slice must be one. Required.
  apiGroups:[String]
  # APIVersions is the API versions the resources belong to. '*' is all versions. If '*' is present, the length of the slice must be one. Required.
  apiVersions:[String]
  # Operations is the operations the admission hook cares about - CREATE, UPDATE, or * for all operations. If '*' is present, the length of the slice must be one. Required.
  operations:[String]
  # Resources is a list of resources this rule applies to.
  # For example: 'pods' means pods. 'pods/log' means the log subresource of pods. '*' means all resources, but not subresources. 'pods/*' means all subresources of pods. '*/scale' means all scale subresources. '*/*' means all resources and their subresources.
  # If wildcard is present, the validation rule will ensure resources do not overlap with each other.
  # Depending on the enclosing object, subresources might not be allowed. Required.
  resources:[String]
  # scope specifies the scope of this rule. Valid values are "Cluster", "Namespaced", and "*" "Cluster" means that only cluster-scoped resources will match this rule. Namespace API objects are cluster-scoped. "Namespaced" means that only namespaced resources will match this rule. "*" means that there are no scope restrictions. Subresources match the scope of their parent resource. Default is "*".
  scope:String
}
# ServiceReference holds a reference to Service.legacy.k8s.io
input io_k8s_api_admissionregistration_v1_ServiceReferenceInput {
  # `path` is an optional URL path which will be sent in any request to this service.
  path:String
  # If specified, the port on the service that hosting webhook. Default to 443 for backward compatibility. `port` should be a valid port number (1-65535, inclusive).
  port:Int
  # `name` is the name of the service. Required
  name:String
  # `namespace` is the namespace of the service. Required
  namespace:String
}
# ServiceReference holds a reference to Service.legacy.k8s.io
type io_k8s_api_admissionregistration_v1_ServiceReferenceResult {
  # `name` is the name of the service. Required
  name:String
  # `namespace` is the namespace of the service. Required
  namespace:String
  # `path` is an optional URL path which will be sent in any request to this service.
  path:String
  # If specified, the port on the service that hosting webhook. Default to 443 for backward compatibility. `port` should be a valid port number (1-65535, inclusive).
  port:Int
}
# ValidatingWebhookConfiguration describes the configuration of and admission webhook that accept or reject and object without changing it.
input io_k8s_api_admissionregistration_v1_ValidatingWebhookConfigurationInput {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  # Webhooks is a list of webhooks and the affected resources and operations.
  webhooks:[io_k8s_api_admissionregistration_v1_ValidatingWebhookInput]
}
# ValidatingWebhookConfigurationList is a list of ValidatingWebhookConfiguration.
type io_k8s_api_admissionregistration_v1_ValidatingWebhookConfigurationListResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # List of ValidatingWebhookConfiguration.
  items:[io_k8s_api_admissionregistration_v1_ValidatingWebhookConfigurationResult]
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
# ValidatingWebhookConfiguration describes the configuration of and admission webhook that accept or reject and object without changing it.
type io_k8s_api_admissionregistration_v1_ValidatingWebhookConfigurationResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  # Webhooks is a list of webhooks and the affected resources and operations.
  webhooks:[io_k8s_api_admissionregistration_v1_ValidatingWebhookResult]
}
# ValidatingWebhook describes an admission webhook and the resources and operations it applies to.
input io_k8s_api_admissionregistration_v1_ValidatingWebhookInput {
  # AdmissionReviewVersions is an ordered list of preferred `AdmissionReview` versions the Webhook expects. API server will try to use first version in the list which it supports. If none of the versions specified in this list supported by API server, validation will fail for this object. If a persisted webhook configuration specifies allowed versions and does not include any versions known to the API Server, calls to the webhook will fail and be subject to the failure policy.
  admissionReviewVersions:[String]
  # WebhookClientConfig contains the information to make a TLS connection with the webhook
  clientConfig:io_k8s_api_admissionregistration_v1_WebhookClientConfigInput
  # matchPolicy defines how the "rules" list is used to match incoming requests. Allowed values are "Exact" or "Equivalent".
  # - Exact: match a request only if it exactly matches a specified rule. For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1, but "rules" only included `apiGroups:["apps"], apiVersions:["v1"], resources: ["deployments"]`, a request to apps/v1beta1 or extensions/v1beta1 would not be sent to the webhook.
  # - Equivalent: match a request if modifies a resource listed in rules, even via another API group or version. For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1, and "rules" only included `apiGroups:["apps"], apiVersions:["v1"], resources: ["deployments"]`, a request to apps/v1beta1 or extensions/v1beta1 would be converted to apps/v1 and sent to the webhook.
  # Defaults to "Equivalent"
  matchPolicy:String
  # A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
  objectSelector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorInput
  # Rules describes what operations on what resources/subresources the webhook cares about. The webhook cares about an operation if it matches _any_ Rule. However, in order to prevent ValidatingAdmissionWebhooks and MutatingAdmissionWebhooks from putting the cluster in a state which cannot be recovered from without completely disabling the plugin, ValidatingAdmissionWebhooks and MutatingAdmissionWebhooks are never called on admission requests for ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects.
  rules:[io_k8s_api_admissionregistration_v1_RuleWithOperationsInput]
  # SideEffects states whether this webhook has side effects. Acceptable values are: None, NoneOnDryRun (webhooks created via v1beta1 may also specify Some or Unknown). Webhooks with side effects MUST implement a reconciliation system, since a request may be rejected by a future step in the admission change and the side effects therefore need to be undone. Requests with the dryRun attribute will be auto-rejected if they match a webhook with sideEffects == Unknown or Some.
  sideEffects:String
  # FailurePolicy defines how unrecognized errors from the admission endpoint are handled - allowed values are Ignore or Fail. Defaults to Fail.
  failurePolicy:String
  # The name of the admission webhook. Name should be fully qualified, e.g., imagepolicy.kubernetes.io, where "imagepolicy" is the name of the webhook, and kubernetes.io is the name of the organization. Required.
  name:String
  # A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
  namespaceSelector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorInput
  # TimeoutSeconds specifies the timeout for this webhook. After the timeout passes, the webhook call will be ignored or the API call will fail based on the failure policy. The timeout value must be between 1 and 30 seconds. Default to 10 seconds.
  timeoutSeconds:Int
}
# ValidatingWebhook describes an admission webhook and the resources and operations it applies to.
type io_k8s_api_admissionregistration_v1_ValidatingWebhookResult {
  # AdmissionReviewVersions is an ordered list of preferred `AdmissionReview` versions the Webhook expects. API server will try to use first version in the list which it supports. If none of the versions specified in this list supported by API server, validation will fail for this object. If a persisted webhook configuration specifies allowed versions and does not include any versions known to the API Server, calls to the webhook will fail and be subject to the failure policy.
  admissionReviewVersions:[String]
  # WebhookClientConfig contains the information to make a TLS connection with the webhook
  clientConfig:io_k8s_api_admissionregistration_v1_WebhookClientConfigResult
  # FailurePolicy defines how unrecognized errors from the admission endpoint are handled - allowed values are Ignore or Fail. Defaults to Fail.
  failurePolicy:String
  # matchPolicy defines how the "rules" list is used to match incoming requests. Allowed values are "Exact" or "Equivalent".
  # - Exact: match a request only if it exactly matches a specified rule. For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1, but "rules" only included `apiGroups:["apps"], apiVersions:["v1"], resources: ["deployments"]`, a request to apps/v1beta1 or extensions/v1beta1 would not be sent to the webhook.
  # - Equivalent: match a request if modifies a resource listed in rules, even via another API group or version. For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1, and "rules" only included `apiGroups:["apps"], apiVersions:["v1"], resources: ["deployments"]`, a request to apps/v1beta1 or extensions/v1beta1 would be converted to apps/v1 and sent to the webhook.
  # Defaults to "Equivalent"
  matchPolicy:String
  # The name of the admission webhook. Name should be fully qualified, e.g., imagepolicy.kubernetes.io, where "imagepolicy" is the name of the webhook, and kubernetes.io is the name of the organization. Required.
  name:String
  # A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
  namespaceSelector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorResult
  # A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
  objectSelector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorResult
  # Rules describes what operations on what resources/subresources the webhook cares about. The webhook cares about an operation if it matches _any_ Rule. However, in order to prevent ValidatingAdmissionWebhooks and MutatingAdmissionWebhooks from putting the cluster in a state which cannot be recovered from without completely disabling the plugin, ValidatingAdmissionWebhooks and MutatingAdmissionWebhooks are never called on admission requests for ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects.
  rules:[io_k8s_api_admissionregistration_v1_RuleWithOperationsResult]
  # SideEffects states whether this webhook has side effects. Acceptable values are: None, NoneOnDryRun (webhooks created via v1beta1 may also specify Some or Unknown). Webhooks with side effects MUST implement a reconciliation system, since a request may be rejected by a future step in the admission change and the side effects therefore need to be undone. Requests with the dryRun attribute will be auto-rejected if they match a webhook with sideEffects == Unknown or Some.
  sideEffects:String
  # TimeoutSeconds specifies the timeout for this webhook. After the timeout passes, the webhook call will be ignored or the API call will fail based on the failure policy. The timeout value must be between 1 and 30 seconds. Default to 10 seconds.
  timeoutSeconds:Int
}
# WebhookClientConfig contains the information to make a TLS connection with the webhook
input io_k8s_api_admissionregistration_v1_WebhookClientConfigInput {
  # `caBundle` is a PEM encoded CA bundle which will be used to validate the webhook's server certificate. If unspecified, system trust roots on the apiserver are used.
  caBundle:String
  # ServiceReference holds a reference to Service.legacy.k8s.io
  service:io_k8s_api_admissionregistration_v1_ServiceReferenceInput
  # `url` gives the location of the webhook, in standard URL form (`scheme://host:port/path`). Exactly one of `url` or `service` must be specified.
  # The `host` should not refer to a service running in the cluster; use the `service` field instead. The host might be resolved via external DNS in some apiservers (e.g., `kube-apiserver` cannot resolve in-cluster DNS as that would be a layering violation). `host` may also be an IP address.
  # Please note that using `localhost` or `127.0.0.1` as a `host` is risky unless you take great care to run this webhook on all hosts which run an apiserver which might need to make calls to this webhook. Such installs are likely to be non-portable, i.e., not easy to turn up in a new cluster.
  # The scheme must be "https"; the URL must begin with "https://".
  # A path is optional, and if present may be any string permissible in a URL. You may use the path to pass an arbitrary string to the webhook, for example, a cluster identifier.
  # Attempting to use a user or basic auth e.g. "user:password@" is not allowed. Fragments ("#...") and query parameters ("?...") are not allowed, either.
  url:String
}
# WebhookClientConfig contains the information to make a TLS connection with the webhook
type io_k8s_api_admissionregistration_v1_WebhookClientConfigResult {
  # `caBundle` is a PEM encoded CA bundle which will be used to validate the webhook's server certificate. If unspecified, system trust roots on the apiserver are used.
  caBundle:String
  # ServiceReference holds a reference to Service.legacy.k8s.io
  service:io_k8s_api_admissionregistration_v1_ServiceReferenceResult
  # `url` gives the location of the webhook, in standard URL form (`scheme://host:port/path`). Exactly one of `url` or `service` must be specified.
  # The `host` should not refer to a service running in the cluster; use the `service` field instead. The host might be resolved via external DNS in some apiservers (e.g., `kube-apiserver` cannot resolve in-cluster DNS as that would be a layering violation). `host` may also be an IP address.
  # Please note that using `localhost` or `127.0.0.1` as a `host` is risky unless you take great care to run this webhook on all hosts which run an apiserver which might need to make calls to this webhook. Such installs are likely to be non-portable, i.e., not easy to turn up in a new cluster.
  # The scheme must be "https"; the URL must begin with "https://".
  # A path is optional, and if present may be any string permissible in a URL. You may use the path to pass an arbitrary string to the webhook, for example, a cluster identifier.
  # Attempting to use a user or basic auth e.g. "user:password@" is not allowed. Fragments ("#...") and query parameters ("?...") are not allowed, either.
  url:String
}
# MutatingWebhookConfiguration describes the configuration of and admission webhook that accept or reject and may change the object. Deprecated in v1.16, planned for removal in v1.19. Use admissionregistration.k8s.io/v1 MutatingWebhookConfiguration instead.
input io_k8s_api_admissionregistration_v1beta1_MutatingWebhookConfigurationInput {
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  # Webhooks is a list of webhooks and the affected resources and operations.
  webhooks:[io_k8s_api_admissionregistration_v1beta1_MutatingWebhookInput]
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
}
# MutatingWebhookConfigurationList is a list of MutatingWebhookConfiguration.
type io_k8s_api_admissionregistration_v1beta1_MutatingWebhookConfigurationListResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # List of MutatingWebhookConfiguration.
  items:[io_k8s_api_admissionregistration_v1beta1_MutatingWebhookConfigurationResult]
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
# MutatingWebhookConfiguration describes the configuration of and admission webhook that accept or reject and may change the object. Deprecated in v1.16, planned for removal in v1.19. Use admissionregistration.k8s.io/v1 MutatingWebhookConfiguration instead.
type io_k8s_api_admissionregistration_v1beta1_MutatingWebhookConfigurationResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  # Webhooks is a list of webhooks and the affected resources and operations.
  webhooks:[io_k8s_api_admissionregistration_v1beta1_MutatingWebhookResult]
}
# MutatingWebhook describes an admission webhook and the resources and operations it applies to.
input io_k8s_api_admissionregistration_v1beta1_MutatingWebhookInput {
  # matchPolicy defines how the "rules" list is used to match incoming requests. Allowed values are "Exact" or "Equivalent".
  # - Exact: match a request only if it exactly matches a specified rule. For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1, but "rules" only included `apiGroups:["apps"], apiVersions:["v1"], resources: ["deployments"]`, a request to apps/v1beta1 or extensions/v1beta1 would not be sent to the webhook.
  # - Equivalent: match a request if modifies a resource listed in rules, even via another API group or version. For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1, and "rules" only included `apiGroups:["apps"], apiVersions:["v1"], resources: ["deployments"]`, a request to apps/v1beta1 or extensions/v1beta1 would be converted to apps/v1 and sent to the webhook.
  # Defaults to "Exact"
  matchPolicy:String
  # The name of the admission webhook. Name should be fully qualified, e.g., imagepolicy.kubernetes.io, where "imagepolicy" is the name of the webhook, and kubernetes.io is the name of the organization. Required.
  name:String
  # reinvocationPolicy indicates whether this webhook should be called multiple times as part of a single admission evaluation. Allowed values are "Never" and "IfNeeded".
  # Never: the webhook will not be called more than once in a single admission evaluation.
  # IfNeeded: the webhook will be called at least one additional time as part of the admission evaluation if the object being admitted is modified by other admission plugins after the initial webhook call. Webhooks that specify this option *must* be idempotent, able to process objects they previously admitted. Note: * the number of additional invocations is not guaranteed to be exactly one. * if additional invocations result in further modifications to the object, webhooks are not guaranteed to be invoked again. * webhooks that use this option may be reordered to minimize the number of additional invocations. * to validate an object after all mutations are guaranteed complete, use a validating admission webhook instead.
  # Defaults to "Never".
  reinvocationPolicy:String
  # Rules describes what operations on what resources/subresources the webhook cares about. The webhook cares about an operation if it matches _any_ Rule. However, in order to prevent ValidatingAdmissionWebhooks and MutatingAdmissionWebhooks from putting the cluster in a state which cannot be recovered from without completely disabling the plugin, ValidatingAdmissionWebhooks and MutatingAdmissionWebhooks are never called on admission requests for ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects.
  rules:[io_k8s_api_admissionregistration_v1beta1_RuleWithOperationsInput]
  # A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
  objectSelector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorInput
  # SideEffects states whether this webhook has side effects. Acceptable values are: Unknown, None, Some, NoneOnDryRun Webhooks with side effects MUST implement a reconciliation system, since a request may be rejected by a future step in the admission change and the side effects therefore need to be undone. Requests with the dryRun attribute will be auto-rejected if they match a webhook with sideEffects == Unknown or Some. Defaults to Unknown.
  sideEffects:String
  # TimeoutSeconds specifies the timeout for this webhook. After the timeout passes, the webhook call will be ignored or the API call will fail based on the failure policy. The timeout value must be between 1 and 30 seconds. Default to 30 seconds.
  timeoutSeconds:Int
  # AdmissionReviewVersions is an ordered list of preferred `AdmissionReview` versions the Webhook expects. API server will try to use first version in the list which it supports. If none of the versions specified in this list supported by API server, validation will fail for this object. If a persisted webhook configuration specifies allowed versions and does not include any versions known to the API Server, calls to the webhook will fail and be subject to the failure policy. Default to `['v1beta1']`.
  admissionReviewVersions:[String]
  # WebhookClientConfig contains the information to make a TLS connection with the webhook
  clientConfig:io_k8s_api_admissionregistration_v1beta1_WebhookClientConfigInput
  # FailurePolicy defines how unrecognized errors from the admission endpoint are handled - allowed values are Ignore or Fail. Defaults to Ignore.
  failurePolicy:String
  # A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
  namespaceSelector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorInput
}
# MutatingWebhook describes an admission webhook and the resources and operations it applies to.
type io_k8s_api_admissionregistration_v1beta1_MutatingWebhookResult {
  # AdmissionReviewVersions is an ordered list of preferred `AdmissionReview` versions the Webhook expects. API server will try to use first version in the list which it supports. If none of the versions specified in this list supported by API server, validation will fail for this object. If a persisted webhook configuration specifies allowed versions and does not include any versions known to the API Server, calls to the webhook will fail and be subject to the failure policy. Default to `['v1beta1']`.
  admissionReviewVersions:[String]
  # WebhookClientConfig contains the information to make a TLS connection with the webhook
  clientConfig:io_k8s_api_admissionregistration_v1beta1_WebhookClientConfigResult
  # FailurePolicy defines how unrecognized errors from the admission endpoint are handled - allowed values are Ignore or Fail. Defaults to Ignore.
  failurePolicy:String
  # matchPolicy defines how the "rules" list is used to match incoming requests. Allowed values are "Exact" or "Equivalent".
  # - Exact: match a request only if it exactly matches a specified rule. For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1, but "rules" only included `apiGroups:["apps"], apiVersions:["v1"], resources: ["deployments"]`, a request to apps/v1beta1 or extensions/v1beta1 would not be sent to the webhook.
  # - Equivalent: match a request if modifies a resource listed in rules, even via another API group or version. For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1, and "rules" only included `apiGroups:["apps"], apiVersions:["v1"], resources: ["deployments"]`, a request to apps/v1beta1 or extensions/v1beta1 would be converted to apps/v1 and sent to the webhook.
  # Defaults to "Exact"
  matchPolicy:String
  # The name of the admission webhook. Name should be fully qualified, e.g., imagepolicy.kubernetes.io, where "imagepolicy" is the name of the webhook, and kubernetes.io is the name of the organization. Required.
  name:String
  # A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
  namespaceSelector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorResult
  # A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
  objectSelector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorResult
  # reinvocationPolicy indicates whether this webhook should be called multiple times as part of a single admission evaluation. Allowed values are "Never" and "IfNeeded".
  # Never: the webhook will not be called more than once in a single admission evaluation.
  # IfNeeded: the webhook will be called at least one additional time as part of the admission evaluation if the object being admitted is modified by other admission plugins after the initial webhook call. Webhooks that specify this option *must* be idempotent, able to process objects they previously admitted. Note: * the number of additional invocations is not guaranteed to be exactly one. * if additional invocations result in further modifications to the object, webhooks are not guaranteed to be invoked again. * webhooks that use this option may be reordered to minimize the number of additional invocations. * to validate an object after all mutations are guaranteed complete, use a validating admission webhook instead.
  # Defaults to "Never".
  reinvocationPolicy:String
  # Rules describes what operations on what resources/subresources the webhook cares about. The webhook cares about an operation if it matches _any_ Rule. However, in order to prevent ValidatingAdmissionWebhooks and MutatingAdmissionWebhooks from putting the cluster in a state which cannot be recovered from without completely disabling the plugin, ValidatingAdmissionWebhooks and MutatingAdmissionWebhooks are never called on admission requests for ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects.
  rules:[io_k8s_api_admissionregistration_v1beta1_RuleWithOperationsResult]
  # SideEffects states whether this webhook has side effects. Acceptable values are: Unknown, None, Some, NoneOnDryRun Webhooks with side effects MUST implement a reconciliation system, since a request may be rejected by a future step in the admission change and the side effects therefore need to be undone. Requests with the dryRun attribute will be auto-rejected if they match a webhook with sideEffects == Unknown or Some. Defaults to Unknown.
  sideEffects:String
  # TimeoutSeconds specifies the timeout for this webhook. After the timeout passes, the webhook call will be ignored or the API call will fail based on the failure policy. The timeout value must be between 1 and 30 seconds. Default to 30 seconds.
  timeoutSeconds:Int
}
# RuleWithOperations is a tuple of Operations and Resources. It is recommended to make sure that all the tuple expansions are valid.
input io_k8s_api_admissionregistration_v1beta1_RuleWithOperationsInput {
  # APIGroups is the API groups the resources belong to. '*' is all groups. If '*' is present, the length of the slice must be one. Required.
  apiGroups:[String]
  # APIVersions is the API versions the resources belong to. '*' is all versions. If '*' is present, the length of the slice must be one. Required.
  apiVersions:[String]
  # Operations is the operations the admission hook cares about - CREATE, UPDATE, or * for all operations. If '*' is present, the length of the slice must be one. Required.
  operations:[String]
  # Resources is a list of resources this rule applies to.
  # For example: 'pods' means pods. 'pods/log' means the log subresource of pods. '*' means all resources, but not subresources. 'pods/*' means all subresources of pods. '*/scale' means all scale subresources. '*/*' means all resources and their subresources.
  # If wildcard is present, the validation rule will ensure resources do not overlap with each other.
  # Depending on the enclosing object, subresources might not be allowed. Required.
  resources:[String]
  # scope specifies the scope of this rule. Valid values are "Cluster", "Namespaced", and "*" "Cluster" means that only cluster-scoped resources will match this rule. Namespace API objects are cluster-scoped. "Namespaced" means that only namespaced resources will match this rule. "*" means that there are no scope restrictions. Subresources match the scope of their parent resource. Default is "*".
  scope:String
}
# RuleWithOperations is a tuple of Operations and Resources. It is recommended to make sure that all the tuple expansions are valid.
type io_k8s_api_admissionregistration_v1beta1_RuleWithOperationsResult {
  # APIGroups is the API groups the resources belong to. '*' is all groups. If '*' is present, the length of the slice must be one. Required.
  apiGroups:[String]
  # APIVersions is the API versions the resources belong to. '*' is all versions. If '*' is present, the length of the slice must be one. Required.
  apiVersions:[String]
  # Operations is the operations the admission hook cares about - CREATE, UPDATE, or * for all operations. If '*' is present, the length of the slice must be one. Required.
  operations:[String]
  # Resources is a list of resources this rule applies to.
  # For example: 'pods' means pods. 'pods/log' means the log subresource of pods. '*' means all resources, but not subresources. 'pods/*' means all subresources of pods. '*/scale' means all scale subresources. '*/*' means all resources and their subresources.
  # If wildcard is present, the validation rule will ensure resources do not overlap with each other.
  # Depending on the enclosing object, subresources might not be allowed. Required.
  resources:[String]
  # scope specifies the scope of this rule. Valid values are "Cluster", "Namespaced", and "*" "Cluster" means that only cluster-scoped resources will match this rule. Namespace API objects are cluster-scoped. "Namespaced" means that only namespaced resources will match this rule. "*" means that there are no scope restrictions. Subresources match the scope of their parent resource. Default is "*".
  scope:String
}
# ServiceReference holds a reference to Service.legacy.k8s.io
input io_k8s_api_admissionregistration_v1beta1_ServiceReferenceInput {
  # `path` is an optional URL path which will be sent in any request to this service.
  path:String
  # If specified, the port on the service that hosting webhook. Default to 443 for backward compatibility. `port` should be a valid port number (1-65535, inclusive).
  port:Int
  # `name` is the name of the service. Required
  name:String
  # `namespace` is the namespace of the service. Required
  namespace:String
}
# ServiceReference holds a reference to Service.legacy.k8s.io
type io_k8s_api_admissionregistration_v1beta1_ServiceReferenceResult {
  # `name` is the name of the service. Required
  name:String
  # `namespace` is the namespace of the service. Required
  namespace:String
  # `path` is an optional URL path which will be sent in any request to this service.
  path:String
  # If specified, the port on the service that hosting webhook. Default to 443 for backward compatibility. `port` should be a valid port number (1-65535, inclusive).
  port:Int
}
# ValidatingWebhookConfiguration describes the configuration of and admission webhook that accept or reject and object without changing it. Deprecated in v1.16, planned for removal in v1.19. Use admissionregistration.k8s.io/v1 ValidatingWebhookConfiguration instead.
input io_k8s_api_admissionregistration_v1beta1_ValidatingWebhookConfigurationInput {
  # Webhooks is a list of webhooks and the affected resources and operations.
  webhooks:[io_k8s_api_admissionregistration_v1beta1_ValidatingWebhookInput]
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
}
# ValidatingWebhookConfigurationList is a list of ValidatingWebhookConfiguration.
type io_k8s_api_admissionregistration_v1beta1_ValidatingWebhookConfigurationListResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # List of ValidatingWebhookConfiguration.
  items:[io_k8s_api_admissionregistration_v1beta1_ValidatingWebhookConfigurationResult]
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
# ValidatingWebhookConfiguration describes the configuration of and admission webhook that accept or reject and object without changing it. Deprecated in v1.16, planned for removal in v1.19. Use admissionregistration.k8s.io/v1 ValidatingWebhookConfiguration instead.
type io_k8s_api_admissionregistration_v1beta1_ValidatingWebhookConfigurationResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  # Webhooks is a list of webhooks and the affected resources and operations.
  webhooks:[io_k8s_api_admissionregistration_v1beta1_ValidatingWebhookResult]
}
# ValidatingWebhook describes an admission webhook and the resources and operations it applies to.
input io_k8s_api_admissionregistration_v1beta1_ValidatingWebhookInput {
  # AdmissionReviewVersions is an ordered list of preferred `AdmissionReview` versions the Webhook expects. API server will try to use first version in the list which it supports. If none of the versions specified in this list supported by API server, validation will fail for this object. If a persisted webhook configuration specifies allowed versions and does not include any versions known to the API Server, calls to the webhook will fail and be subject to the failure policy. Default to `['v1beta1']`.
  admissionReviewVersions:[String]
  # WebhookClientConfig contains the information to make a TLS connection with the webhook
  clientConfig:io_k8s_api_admissionregistration_v1beta1_WebhookClientConfigInput
  # The name of the admission webhook. Name should be fully qualified, e.g., imagepolicy.kubernetes.io, where "imagepolicy" is the name of the webhook, and kubernetes.io is the name of the organization. Required.
  name:String
  # A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
  namespaceSelector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorInput
  # A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
  objectSelector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorInput
  # Rules describes what operations on what resources/subresources the webhook cares about. The webhook cares about an operation if it matches _any_ Rule. However, in order to prevent ValidatingAdmissionWebhooks and MutatingAdmissionWebhooks from putting the cluster in a state which cannot be recovered from without completely disabling the plugin, ValidatingAdmissionWebhooks and MutatingAdmissionWebhooks are never called on admission requests for ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects.
  rules:[io_k8s_api_admissionregistration_v1beta1_RuleWithOperationsInput]
  # SideEffects states whether this webhook has side effects. Acceptable values are: Unknown, None, Some, NoneOnDryRun Webhooks with side effects MUST implement a reconciliation system, since a request may be rejected by a future step in the admission change and the side effects therefore need to be undone. Requests with the dryRun attribute will be auto-rejected if they match a webhook with sideEffects == Unknown or Some. Defaults to Unknown.
  sideEffects:String
  # FailurePolicy defines how unrecognized errors from the admission endpoint are handled - allowed values are Ignore or Fail. Defaults to Ignore.
  failurePolicy:String
  # matchPolicy defines how the "rules" list is used to match incoming requests. Allowed values are "Exact" or "Equivalent".
  # - Exact: match a request only if it exactly matches a specified rule. For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1, but "rules" only included `apiGroups:["apps"], apiVersions:["v1"], resources: ["deployments"]`, a request to apps/v1beta1 or extensions/v1beta1 would not be sent to the webhook.
  # - Equivalent: match a request if modifies a resource listed in rules, even via another API group or version. For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1, and "rules" only included `apiGroups:["apps"], apiVersions:["v1"], resources: ["deployments"]`, a request to apps/v1beta1 or extensions/v1beta1 would be converted to apps/v1 and sent to the webhook.
  # Defaults to "Exact"
  matchPolicy:String
  # TimeoutSeconds specifies the timeout for this webhook. After the timeout passes, the webhook call will be ignored or the API call will fail based on the failure policy. The timeout value must be between 1 and 30 seconds. Default to 30 seconds.
  timeoutSeconds:Int
}
# ValidatingWebhook describes an admission webhook and the resources and operations it applies to.
type io_k8s_api_admissionregistration_v1beta1_ValidatingWebhookResult {
  # AdmissionReviewVersions is an ordered list of preferred `AdmissionReview` versions the Webhook expects. API server will try to use first version in the list which it supports. If none of the versions specified in this list supported by API server, validation will fail for this object. If a persisted webhook configuration specifies allowed versions and does not include any versions known to the API Server, calls to the webhook will fail and be subject to the failure policy. Default to `['v1beta1']`.
  admissionReviewVersions:[String]
  # WebhookClientConfig contains the information to make a TLS connection with the webhook
  clientConfig:io_k8s_api_admissionregistration_v1beta1_WebhookClientConfigResult
  # FailurePolicy defines how unrecognized errors from the admission endpoint are handled - allowed values are Ignore or Fail. Defaults to Ignore.
  failurePolicy:String
  # matchPolicy defines how the "rules" list is used to match incoming requests. Allowed values are "Exact" or "Equivalent".
  # - Exact: match a request only if it exactly matches a specified rule. For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1, but "rules" only included `apiGroups:["apps"], apiVersions:["v1"], resources: ["deployments"]`, a request to apps/v1beta1 or extensions/v1beta1 would not be sent to the webhook.
  # - Equivalent: match a request if modifies a resource listed in rules, even via another API group or version. For example, if deployments can be modified via apps/v1, apps/v1beta1, and extensions/v1beta1, and "rules" only included `apiGroups:["apps"], apiVersions:["v1"], resources: ["deployments"]`, a request to apps/v1beta1 or extensions/v1beta1 would be converted to apps/v1 and sent to the webhook.
  # Defaults to "Exact"
  matchPolicy:String
  # The name of the admission webhook. Name should be fully qualified, e.g., imagepolicy.kubernetes.io, where "imagepolicy" is the name of the webhook, and kubernetes.io is the name of the organization. Required.
  name:String
  # A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
  namespaceSelector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorResult
  # A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
  objectSelector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorResult
  # Rules describes what operations on what resources/subresources the webhook cares about. The webhook cares about an operation if it matches _any_ Rule. However, in order to prevent ValidatingAdmissionWebhooks and MutatingAdmissionWebhooks from putting the cluster in a state which cannot be recovered from without completely disabling the plugin, ValidatingAdmissionWebhooks and MutatingAdmissionWebhooks are never called on admission requests for ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects.
  rules:[io_k8s_api_admissionregistration_v1beta1_RuleWithOperationsResult]
  # SideEffects states whether this webhook has side effects. Acceptable values are: Unknown, None, Some, NoneOnDryRun Webhooks with side effects MUST implement a reconciliation system, since a request may be rejected by a future step in the admission change and the side effects therefore need to be undone. Requests with the dryRun attribute will be auto-rejected if they match a webhook with sideEffects == Unknown or Some. Defaults to Unknown.
  sideEffects:String
  # TimeoutSeconds specifies the timeout for this webhook. After the timeout passes, the webhook call will be ignored or the API call will fail based on the failure policy. The timeout value must be between 1 and 30 seconds. Default to 30 seconds.
  timeoutSeconds:Int
}
# WebhookClientConfig contains the information to make a TLS connection with the webhook
input io_k8s_api_admissionregistration_v1beta1_WebhookClientConfigInput {
  # `caBundle` is a PEM encoded CA bundle which will be used to validate the webhook's server certificate. If unspecified, system trust roots on the apiserver are used.
  caBundle:String
  # ServiceReference holds a reference to Service.legacy.k8s.io
  service:io_k8s_api_admissionregistration_v1beta1_ServiceReferenceInput
  # `url` gives the location of the webhook, in standard URL form (`scheme://host:port/path`). Exactly one of `url` or `service` must be specified.
  # The `host` should not refer to a service running in the cluster; use the `service` field instead. The host might be resolved via external DNS in some apiservers (e.g., `kube-apiserver` cannot resolve in-cluster DNS as that would be a layering violation). `host` may also be an IP address.
  # Please note that using `localhost` or `127.0.0.1` as a `host` is risky unless you take great care to run this webhook on all hosts which run an apiserver which might need to make calls to this webhook. Such installs are likely to be non-portable, i.e., not easy to turn up in a new cluster.
  # The scheme must be "https"; the URL must begin with "https://".
  # A path is optional, and if present may be any string permissible in a URL. You may use the path to pass an arbitrary string to the webhook, for example, a cluster identifier.
  # Attempting to use a user or basic auth e.g. "user:password@" is not allowed. Fragments ("#...") and query parameters ("?...") are not allowed, either.
  url:String
}
# WebhookClientConfig contains the information to make a TLS connection with the webhook
type io_k8s_api_admissionregistration_v1beta1_WebhookClientConfigResult {
  # `caBundle` is a PEM encoded CA bundle which will be used to validate the webhook's server certificate. If unspecified, system trust roots on the apiserver are used.
  caBundle:String
  # ServiceReference holds a reference to Service.legacy.k8s.io
  service:io_k8s_api_admissionregistration_v1beta1_ServiceReferenceResult
  # `url` gives the location of the webhook, in standard URL form (`scheme://host:port/path`). Exactly one of `url` or `service` must be specified.
  # The `host` should not refer to a service running in the cluster; use the `service` field instead. The host might be resolved via external DNS in some apiservers (e.g., `kube-apiserver` cannot resolve in-cluster DNS as that would be a layering violation). `host` may also be an IP address.
  # Please note that using `localhost` or `127.0.0.1` as a `host` is risky unless you take great care to run this webhook on all hosts which run an apiserver which might need to make calls to this webhook. Such installs are likely to be non-portable, i.e., not easy to turn up in a new cluster.
  # The scheme must be "https"; the URL must begin with "https://".
  # A path is optional, and if present may be any string permissible in a URL. You may use the path to pass an arbitrary string to the webhook, for example, a cluster identifier.
  # Attempting to use a user or basic auth e.g. "user:password@" is not allowed. Fragments ("#...") and query parameters ("?...") are not allowed, either.
  url:String
}
# ControllerRevision implements an immutable snapshot of state data. Clients are responsible for serializing and deserializing the objects that contain their internal state. Once a ControllerRevision has been successfully created, it can not be updated. The API Server will fail validation of all requests that attempt to mutate the Data field. ControllerRevisions may, however, be deleted. Note that, due to its use by both the DaemonSet and StatefulSet controllers for update and rollback, this object is beta. However, it may be subject to name and representation changes in future releases, and clients should not depend on its stability. It is primarily for internal use by controllers.
input io_k8s_api_apps_v1_ControllerRevisionInput {
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  # Revision indicates the revision of the state represented by Data.
  revision:Int
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
}
# ControllerRevisionList is a resource containing a list of ControllerRevision objects.
type io_k8s_api_apps_v1_ControllerRevisionListResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Items is the list of ControllerRevisions
  items:[io_k8s_api_apps_v1_ControllerRevisionResult]
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
# ControllerRevision implements an immutable snapshot of state data. Clients are responsible for serializing and deserializing the objects that contain their internal state. Once a ControllerRevision has been successfully created, it can not be updated. The API Server will fail validation of all requests that attempt to mutate the Data field. ControllerRevisions may, however, be deleted. Note that, due to its use by both the DaemonSet and StatefulSet controllers for update and rollback, this object is beta. However, it may be subject to name and representation changes in future releases, and clients should not depend on its stability. It is primarily for internal use by controllers.
type io_k8s_api_apps_v1_ControllerRevisionResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  # Revision indicates the revision of the state represented by Data.
  revision:Int
}
# DaemonSetCondition describes the state of a DaemonSet at a certain point.
input io_k8s_api_apps_v1_DaemonSetConditionInput {
  # Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
  lastTransitionTime:String
  # A human readable message indicating details about the transition.
  message:String
  # The reason for the condition's last transition.
  reason:String
  # Status of the condition, one of True, False, Unknown.
  status:String
  # Type of DaemonSet condition.
  type:String
}
# DaemonSetCondition describes the state of a DaemonSet at a certain point.
type io_k8s_api_apps_v1_DaemonSetConditionResult {
  # Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
  lastTransitionTime:String
  # A human readable message indicating details about the transition.
  message:String
  # The reason for the condition's last transition.
  reason:String
  # Status of the condition, one of True, False, Unknown.
  status:String
  # Type of DaemonSet condition.
  type:String
}
# DaemonSet represents the configuration of a daemon set.
input io_k8s_api_apps_v1_DaemonSetInput {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  # DaemonSetSpec is the specification of a daemon set.
  spec:io_k8s_api_apps_v1_DaemonSetSpecInput
  # DaemonSetStatus represents the current status of a daemon set.
  status:io_k8s_api_apps_v1_DaemonSetStatusInput
}
# DaemonSetList is a collection of daemon sets.
type io_k8s_api_apps_v1_DaemonSetListResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # A list of daemon sets.
  items:[io_k8s_api_apps_v1_DaemonSetResult]
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
# DaemonSet represents the configuration of a daemon set.
type io_k8s_api_apps_v1_DaemonSetResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  # DaemonSetSpec is the specification of a daemon set.
  spec:io_k8s_api_apps_v1_DaemonSetSpecResult
  # DaemonSetStatus represents the current status of a daemon set.
  status:io_k8s_api_apps_v1_DaemonSetStatusResult
}
# DaemonSetSpec is the specification of a daemon set.
input io_k8s_api_apps_v1_DaemonSetSpecInput {
  # PodTemplateSpec describes the data a pod should have when created from a template
  template:io_k8s_api_core_v1_PodTemplateSpecInput
  # DaemonSetUpdateStrategy is a struct used to control the update strategy for a DaemonSet.
  updateStrategy:io_k8s_api_apps_v1_DaemonSetUpdateStrategyInput
  # The minimum number of seconds for which a newly created DaemonSet pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready).
  minReadySeconds:Int
  # The number of old history to retain to allow rollback. This is a pointer to distinguish between explicit zero and not specified. Defaults to 10.
  revisionHistoryLimit:Int
  # A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
  selector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorInput
}
# DaemonSetSpec is the specification of a daemon set.
type io_k8s_api_apps_v1_DaemonSetSpecResult {
  # The minimum number of seconds for which a newly created DaemonSet pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready).
  minReadySeconds:Int
  # The number of old history to retain to allow rollback. This is a pointer to distinguish between explicit zero and not specified. Defaults to 10.
  revisionHistoryLimit:Int
  # A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
  selector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorResult
  # PodTemplateSpec describes the data a pod should have when created from a template
  template:io_k8s_api_core_v1_PodTemplateSpecResult
  # DaemonSetUpdateStrategy is a struct used to control the update strategy for a DaemonSet.
  updateStrategy:io_k8s_api_apps_v1_DaemonSetUpdateStrategyResult
}
# DaemonSetStatus represents the current status of a daemon set.
input io_k8s_api_apps_v1_DaemonSetStatusInput {
  # The number of nodes that are running at least 1 daemon pod and are supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
  currentNumberScheduled:Int
  # The total number of nodes that should be running the daemon pod (including nodes correctly running the daemon pod). More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
  desiredNumberScheduled:Int
  # The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and available (ready for at least spec.minReadySeconds)
  numberAvailable:Int
  # The number of nodes that are running the daemon pod, but are not supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
  numberMisscheduled:Int
  # The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and ready.
  numberReady:Int
  # The number of nodes that should be running the daemon pod and have none of the daemon pod running and available (ready for at least spec.minReadySeconds)
  numberUnavailable:Int
  # The most recent generation observed by the daemon set controller.
  observedGeneration:Int
  # Count of hash collisions for the DaemonSet. The DaemonSet controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ControllerRevision.
  collisionCount:Int
  # Represents the latest available observations of a DaemonSet's current state.
  conditions:[io_k8s_api_apps_v1_DaemonSetConditionInput]
  # The total number of nodes that are running updated daemon pod
  updatedNumberScheduled:Int
}
# DaemonSetStatus represents the current status of a daemon set.
type io_k8s_api_apps_v1_DaemonSetStatusResult {
  # Count of hash collisions for the DaemonSet. The DaemonSet controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ControllerRevision.
  collisionCount:Int
  # Represents the latest available observations of a DaemonSet's current state.
  conditions:[io_k8s_api_apps_v1_DaemonSetConditionResult]
  # The number of nodes that are running at least 1 daemon pod and are supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
  currentNumberScheduled:Int
  # The total number of nodes that should be running the daemon pod (including nodes correctly running the daemon pod). More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
  desiredNumberScheduled:Int
  # The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and available (ready for at least spec.minReadySeconds)
  numberAvailable:Int
  # The number of nodes that are running the daemon pod, but are not supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
  numberMisscheduled:Int
  # The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and ready.
  numberReady:Int
  # The number of nodes that should be running the daemon pod and have none of the daemon pod running and available (ready for at least spec.minReadySeconds)
  numberUnavailable:Int
  # The most recent generation observed by the daemon set controller.
  observedGeneration:Int
  # The total number of nodes that are running updated daemon pod
  updatedNumberScheduled:Int
}
# DaemonSetUpdateStrategy is a struct used to control the update strategy for a DaemonSet.
input io_k8s_api_apps_v1_DaemonSetUpdateStrategyInput {
  # Type of daemon set update. Can be "RollingUpdate" or "OnDelete". Default is RollingUpdate.
  type:String
  # Spec to control the desired behavior of daemon set rolling update.
  rollingUpdate:io_k8s_api_apps_v1_RollingUpdateDaemonSetInput
}
# DaemonSetUpdateStrategy is a struct used to control the update strategy for a DaemonSet.
type io_k8s_api_apps_v1_DaemonSetUpdateStrategyResult {
  # Spec to control the desired behavior of daemon set rolling update.
  rollingUpdate:io_k8s_api_apps_v1_RollingUpdateDaemonSetResult
  # Type of daemon set update. Can be "RollingUpdate" or "OnDelete". Default is RollingUpdate.
  type:String
}
# DeploymentCondition describes the state of a deployment at a certain point.
input io_k8s_api_apps_v1_DeploymentConditionInput {
  # Status of the condition, one of True, False, Unknown.
  status:String
  # Type of deployment condition.
  type:String
  # Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
  lastTransitionTime:String
  # Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
  lastUpdateTime:String
  # A human readable message indicating details about the transition.
  message:String
  # The reason for the condition's last transition.
  reason:String
}
# DeploymentCondition describes the state of a deployment at a certain point.
type io_k8s_api_apps_v1_DeploymentConditionResult {
  # Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
  lastTransitionTime:String
  # Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
  lastUpdateTime:String
  # A human readable message indicating details about the transition.
  message:String
  # The reason for the condition's last transition.
  reason:String
  # Status of the condition, one of True, False, Unknown.
  status:String
  # Type of deployment condition.
  type:String
}
# Deployment enables declarative updates for Pods and ReplicaSets.
input io_k8s_api_apps_v1_DeploymentInput {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  # DeploymentSpec is the specification of the desired behavior of the Deployment.
  spec:io_k8s_api_apps_v1_DeploymentSpecInput
  # DeploymentStatus is the most recently observed status of the Deployment.
  status:io_k8s_api_apps_v1_DeploymentStatusInput
}
# DeploymentList is a list of Deployments.
type io_k8s_api_apps_v1_DeploymentListResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Items is the list of Deployments.
  items:[io_k8s_api_apps_v1_DeploymentResult]
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
# Deployment enables declarative updates for Pods and ReplicaSets.
type io_k8s_api_apps_v1_DeploymentResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  # DeploymentSpec is the specification of the desired behavior of the Deployment.
  spec:io_k8s_api_apps_v1_DeploymentSpecResult
  # DeploymentStatus is the most recently observed status of the Deployment.
  status:io_k8s_api_apps_v1_DeploymentStatusResult
}
# DeploymentSpec is the specification of the desired behavior of the Deployment.
input io_k8s_api_apps_v1_DeploymentSpecInput {
  # Number of desired pods. This is a pointer to distinguish between explicit zero and not specified. Defaults to 1.
  replicas:Int
  # The number of old ReplicaSets to retain to allow rollback. This is a pointer to distinguish between explicit zero and not specified. Defaults to 10.
  revisionHistoryLimit:Int
  # A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
  selector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorInput
  # DeploymentStrategy describes how to replace existing pods with new ones.
  strategy:io_k8s_api_apps_v1_DeploymentStrategyInput
  # PodTemplateSpec describes the data a pod should have when created from a template
  template:io_k8s_api_core_v1_PodTemplateSpecInput
  # Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)
  minReadySeconds:Int
  # Indicates that the deployment is paused.
  paused:Boolean
  # The maximum time in seconds for a deployment to make progress before it is considered to be failed. The deployment controller will continue to process failed deployments and a condition with a ProgressDeadlineExceeded reason will be surfaced in the deployment status. Note that progress will not be estimated during the time a deployment is paused. Defaults to 600s.
  progressDeadlineSeconds:Int
}
# DeploymentSpec is the specification of the desired behavior of the Deployment.
type io_k8s_api_apps_v1_DeploymentSpecResult {
  # Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)
  minReadySeconds:Int
  # Indicates that the deployment is paused.
  paused:Boolean
  # The maximum time in seconds for a deployment to make progress before it is considered to be failed. The deployment controller will continue to process failed deployments and a condition with a ProgressDeadlineExceeded reason will be surfaced in the deployment status. Note that progress will not be estimated during the time a deployment is paused. Defaults to 600s.
  progressDeadlineSeconds:Int
  # Number of desired pods. This is a pointer to distinguish between explicit zero and not specified. Defaults to 1.
  replicas:Int
  # The number of old ReplicaSets to retain to allow rollback. This is a pointer to distinguish between explicit zero and not specified. Defaults to 10.
  revisionHistoryLimit:Int
  # A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
  selector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorResult
  # DeploymentStrategy describes how to replace existing pods with new ones.
  strategy:io_k8s_api_apps_v1_DeploymentStrategyResult
  # PodTemplateSpec describes the data a pod should have when created from a template
  template:io_k8s_api_core_v1_PodTemplateSpecResult
}
# DeploymentStatus is the most recently observed status of the Deployment.
input io_k8s_api_apps_v1_DeploymentStatusInput {
  # Count of hash collisions for the Deployment. The Deployment controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ReplicaSet.
  collisionCount:Int
  # Represents the latest available observations of a deployment's current state.
  conditions:[io_k8s_api_apps_v1_DeploymentConditionInput]
  # The generation observed by the deployment controller.
  observedGeneration:Int
  # Total number of ready pods targeted by this deployment.
  readyReplicas:Int
  # Total number of non-terminated pods targeted by this deployment (their labels match the selector).
  replicas:Int
  # Total number of unavailable pods targeted by this deployment. This is the total number of pods that are still required for the deployment to have 100% available capacity. They may either be pods that are running but not yet available or pods that still have not been created.
  unavailableReplicas:Int
  # Total number of non-terminated pods targeted by this deployment that have the desired template spec.
  updatedReplicas:Int
  # Total number of available pods (ready for at least minReadySeconds) targeted by this deployment.
  availableReplicas:Int
}
# DeploymentStatus is the most recently observed status of the Deployment.
type io_k8s_api_apps_v1_DeploymentStatusResult {
  # Total number of available pods (ready for at least minReadySeconds) targeted by this deployment.
  availableReplicas:Int
  # Count of hash collisions for the Deployment. The Deployment controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ReplicaSet.
  collisionCount:Int
  # Represents the latest available observations of a deployment's current state.
  conditions:[io_k8s_api_apps_v1_DeploymentConditionResult]
  # The generation observed by the deployment controller.
  observedGeneration:Int
  # Total number of ready pods targeted by this deployment.
  readyReplicas:Int
  # Total number of non-terminated pods targeted by this deployment (their labels match the selector).
  replicas:Int
  # Total number of unavailable pods targeted by this deployment. This is the total number of pods that are still required for the deployment to have 100% available capacity. They may either be pods that are running but not yet available or pods that still have not been created.
  unavailableReplicas:Int
  # Total number of non-terminated pods targeted by this deployment that have the desired template spec.
  updatedReplicas:Int
}
# DeploymentStrategy describes how to replace existing pods with new ones.
input io_k8s_api_apps_v1_DeploymentStrategyInput {
  # Spec to control the desired behavior of rolling update.
  rollingUpdate:io_k8s_api_apps_v1_RollingUpdateDeploymentInput
  # Type of deployment. Can be "Recreate" or "RollingUpdate". Default is RollingUpdate.
  type:String
}
# DeploymentStrategy describes how to replace existing pods with new ones.
type io_k8s_api_apps_v1_DeploymentStrategyResult {
  # Spec to control the desired behavior of rolling update.
  rollingUpdate:io_k8s_api_apps_v1_RollingUpdateDeploymentResult
  # Type of deployment. Can be "Recreate" or "RollingUpdate". Default is RollingUpdate.
  type:String
}
# ReplicaSetCondition describes the state of a replica set at a certain point.
input io_k8s_api_apps_v1_ReplicaSetConditionInput {
  # Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
  lastTransitionTime:String
  # A human readable message indicating details about the transition.
  message:String
  # The reason for the condition's last transition.
  reason:String
  # Status of the condition, one of True, False, Unknown.
  status:String
  # Type of replica set condition.
  type:String
}
# ReplicaSetCondition describes the state of a replica set at a certain point.
type io_k8s_api_apps_v1_ReplicaSetConditionResult {
  # Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
  lastTransitionTime:String
  # A human readable message indicating details about the transition.
  message:String
  # The reason for the condition's last transition.
  reason:String
  # Status of the condition, one of True, False, Unknown.
  status:String
  # Type of replica set condition.
  type:String
}
# ReplicaSet ensures that a specified number of pod replicas are running at any given time.
input io_k8s_api_apps_v1_ReplicaSetInput {
  # ReplicaSetSpec is the specification of a ReplicaSet.
  spec:io_k8s_api_apps_v1_ReplicaSetSpecInput
  # ReplicaSetStatus represents the current status of a ReplicaSet.
  status:io_k8s_api_apps_v1_ReplicaSetStatusInput
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
}
# ReplicaSetList is a collection of ReplicaSets.
type io_k8s_api_apps_v1_ReplicaSetListResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # List of ReplicaSets. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller
  items:[io_k8s_api_apps_v1_ReplicaSetResult]
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
# ReplicaSet ensures that a specified number of pod replicas are running at any given time.
type io_k8s_api_apps_v1_ReplicaSetResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  # ReplicaSetSpec is the specification of a ReplicaSet.
  spec:io_k8s_api_apps_v1_ReplicaSetSpecResult
  # ReplicaSetStatus represents the current status of a ReplicaSet.
  status:io_k8s_api_apps_v1_ReplicaSetStatusResult
}
# ReplicaSetSpec is the specification of a ReplicaSet.
input io_k8s_api_apps_v1_ReplicaSetSpecInput {
  # Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)
  minReadySeconds:Int
  # Replicas is the number of desired replicas. This is a pointer to distinguish between explicit zero and unspecified. Defaults to 1. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller/#what-is-a-replicationcontroller
  replicas:Int
  # A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
  selector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorInput
  # PodTemplateSpec describes the data a pod should have when created from a template
  template:io_k8s_api_core_v1_PodTemplateSpecInput
}
# ReplicaSetSpec is the specification of a ReplicaSet.
type io_k8s_api_apps_v1_ReplicaSetSpecResult {
  # Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)
  minReadySeconds:Int
  # Replicas is the number of desired replicas. This is a pointer to distinguish between explicit zero and unspecified. Defaults to 1. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller/#what-is-a-replicationcontroller
  replicas:Int
  # A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
  selector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorResult
  # PodTemplateSpec describes the data a pod should have when created from a template
  template:io_k8s_api_core_v1_PodTemplateSpecResult
}
# ReplicaSetStatus represents the current status of a ReplicaSet.
input io_k8s_api_apps_v1_ReplicaSetStatusInput {
  # The number of ready replicas for this replica set.
  readyReplicas:Int
  # Replicas is the most recently oberved number of replicas. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller/#what-is-a-replicationcontroller
  replicas:Int
  # The number of available replicas (ready for at least minReadySeconds) for this replica set.
  availableReplicas:Int
  # Represents the latest available observations of a replica set's current state.
  conditions:[io_k8s_api_apps_v1_ReplicaSetConditionInput]
  # The number of pods that have labels matching the labels of the pod template of the replicaset.
  fullyLabeledReplicas:Int
  # ObservedGeneration reflects the generation of the most recently observed ReplicaSet.
  observedGeneration:Int
}
# ReplicaSetStatus represents the current status of a ReplicaSet.
type io_k8s_api_apps_v1_ReplicaSetStatusResult {
  # The number of available replicas (ready for at least minReadySeconds) for this replica set.
  availableReplicas:Int
  # Represents the latest available observations of a replica set's current state.
  conditions:[io_k8s_api_apps_v1_ReplicaSetConditionResult]
  # The number of pods that have labels matching the labels of the pod template of the replicaset.
  fullyLabeledReplicas:Int
  # ObservedGeneration reflects the generation of the most recently observed ReplicaSet.
  observedGeneration:Int
  # The number of ready replicas for this replica set.
  readyReplicas:Int
  # Replicas is the most recently oberved number of replicas. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller/#what-is-a-replicationcontroller
  replicas:Int
}
# Spec to control the desired behavior of daemon set rolling update.
input io_k8s_api_apps_v1_RollingUpdateDaemonSetInput {
  # IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number.
  maxUnavailable:String
}
# Spec to control the desired behavior of daemon set rolling update.
type io_k8s_api_apps_v1_RollingUpdateDaemonSetResult {
  # IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number.
  maxUnavailable:String
}
# Spec to control the desired behavior of rolling update.
input io_k8s_api_apps_v1_RollingUpdateDeploymentInput {
  # IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number.
  maxSurge:String
  # IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number.
  maxUnavailable:String
}
# Spec to control the desired behavior of rolling update.
type io_k8s_api_apps_v1_RollingUpdateDeploymentResult {
  # IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number.
  maxSurge:String
  # IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number.
  maxUnavailable:String
}
# RollingUpdateStatefulSetStrategy is used to communicate parameter for RollingUpdateStatefulSetStrategyType.
input io_k8s_api_apps_v1_RollingUpdateStatefulSetStrategyInput {
  # Partition indicates the ordinal at which the StatefulSet should be partitioned. Default value is 0.
  partition:Int
}
# RollingUpdateStatefulSetStrategy is used to communicate parameter for RollingUpdateStatefulSetStrategyType.
type io_k8s_api_apps_v1_RollingUpdateStatefulSetStrategyResult {
  # Partition indicates the ordinal at which the StatefulSet should be partitioned. Default value is 0.
  partition:Int
}
# StatefulSetCondition describes the state of a statefulset at a certain point.
input io_k8s_api_apps_v1_StatefulSetConditionInput {
  # The reason for the condition's last transition.
  reason:String
  # Status of the condition, one of True, False, Unknown.
  status:String
  # Type of statefulset condition.
  type:String
  # Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
  lastTransitionTime:String
  # A human readable message indicating details about the transition.
  message:String
}
# StatefulSetCondition describes the state of a statefulset at a certain point.
type io_k8s_api_apps_v1_StatefulSetConditionResult {
  # Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
  lastTransitionTime:String
  # A human readable message indicating details about the transition.
  message:String
  # The reason for the condition's last transition.
  reason:String
  # Status of the condition, one of True, False, Unknown.
  status:String
  # Type of statefulset condition.
  type:String
}
# StatefulSet represents a set of pods with consistent identities. Identities are defined as:
#  - Network: A single stable DNS and hostname.
#  - Storage: As many VolumeClaims as requested.
# The StatefulSet guarantees that a given network identity will always map to the same storage identity.
input io_k8s_api_apps_v1_StatefulSetInput {
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  # A StatefulSetSpec is the specification of a StatefulSet.
  spec:io_k8s_api_apps_v1_StatefulSetSpecInput
  # StatefulSetStatus represents the current state of a StatefulSet.
  status:io_k8s_api_apps_v1_StatefulSetStatusInput
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
}
# StatefulSetList is a collection of StatefulSets.
type io_k8s_api_apps_v1_StatefulSetListResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  items:[io_k8s_api_apps_v1_StatefulSetResult]
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
# StatefulSet represents a set of pods with consistent identities. Identities are defined as:
#  - Network: A single stable DNS and hostname.
#  - Storage: As many VolumeClaims as requested.
# The StatefulSet guarantees that a given network identity will always map to the same storage identity.
type io_k8s_api_apps_v1_StatefulSetResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  # A StatefulSetSpec is the specification of a StatefulSet.
  spec:io_k8s_api_apps_v1_StatefulSetSpecResult
  # StatefulSetStatus represents the current state of a StatefulSet.
  status:io_k8s_api_apps_v1_StatefulSetStatusResult
}
# A StatefulSetSpec is the specification of a StatefulSet.
input io_k8s_api_apps_v1_StatefulSetSpecInput {
  # A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
  selector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorInput
  # serviceName is the name of the service that governs this StatefulSet. This service must exist before the StatefulSet, and is responsible for the network identity of the set. Pods get DNS/hostnames that follow the pattern: pod-specific-string.serviceName.default.svc.cluster.local where "pod-specific-string" is managed by the StatefulSet controller.
  serviceName:String
  # PodTemplateSpec describes the data a pod should have when created from a template
  template:io_k8s_api_core_v1_PodTemplateSpecInput
  # StatefulSetUpdateStrategy indicates the strategy that the StatefulSet controller will use to perform updates. It includes any additional parameters necessary to perform the update for the indicated strategy.
  updateStrategy:io_k8s_api_apps_v1_StatefulSetUpdateStrategyInput
  # volumeClaimTemplates is a list of claims that pods are allowed to reference. The StatefulSet controller is responsible for mapping network identities to claims in a way that maintains the identity of a pod. Every claim in this list must have at least one matching (by name) volumeMount in one container in the template. A claim in this list takes precedence over any volumes in the template, with the same name.
  volumeClaimTemplates:[io_k8s_api_core_v1_PersistentVolumeClaimInput]
  # podManagementPolicy controls how pods are created during initial scale up, when replacing pods on nodes, or when scaling down. The default policy is `OrderedReady`, where pods are created in increasing order (pod-0, then pod-1, etc) and the controller will wait until each pod is ready before continuing. When scaling down, the pods are removed in the opposite order. The alternative policy is `Parallel` which will create pods in parallel to match the desired scale without waiting, and on scale down will delete all pods at once.
  podManagementPolicy:String
  # replicas is the desired number of replicas of the given Template. These are replicas in the sense that they are instantiations of the same Template, but individual replicas also have a consistent identity. If unspecified, defaults to 1.
  replicas:Int
  # revisionHistoryLimit is the maximum number of revisions that will be maintained in the StatefulSet's revision history. The revision history consists of all revisions not represented by a currently applied StatefulSetSpec version. The default value is 10.
  revisionHistoryLimit:Int
}
# A StatefulSetSpec is the specification of a StatefulSet.
type io_k8s_api_apps_v1_StatefulSetSpecResult {
  # podManagementPolicy controls how pods are created during initial scale up, when replacing pods on nodes, or when scaling down. The default policy is `OrderedReady`, where pods are created in increasing order (pod-0, then pod-1, etc) and the controller will wait until each pod is ready before continuing. When scaling down, the pods are removed in the opposite order. The alternative policy is `Parallel` which will create pods in parallel to match the desired scale without waiting, and on scale down will delete all pods at once.
  podManagementPolicy:String
  # replicas is the desired number of replicas of the given Template. These are replicas in the sense that they are instantiations of the same Template, but individual replicas also have a consistent identity. If unspecified, defaults to 1.
  replicas:Int
  # revisionHistoryLimit is the maximum number of revisions that will be maintained in the StatefulSet's revision history. The revision history consists of all revisions not represented by a currently applied StatefulSetSpec version. The default value is 10.
  revisionHistoryLimit:Int
  # A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
  selector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorResult
  # serviceName is the name of the service that governs this StatefulSet. This service must exist before the StatefulSet, and is responsible for the network identity of the set. Pods get DNS/hostnames that follow the pattern: pod-specific-string.serviceName.default.svc.cluster.local where "pod-specific-string" is managed by the StatefulSet controller.
  serviceName:String
  # PodTemplateSpec describes the data a pod should have when created from a template
  template:io_k8s_api_core_v1_PodTemplateSpecResult
  # StatefulSetUpdateStrategy indicates the strategy that the StatefulSet controller will use to perform updates. It includes any additional parameters necessary to perform the update for the indicated strategy.
  updateStrategy:io_k8s_api_apps_v1_StatefulSetUpdateStrategyResult
  # volumeClaimTemplates is a list of claims that pods are allowed to reference. The StatefulSet controller is responsible for mapping network identities to claims in a way that maintains the identity of a pod. Every claim in this list must have at least one matching (by name) volumeMount in one container in the template. A claim in this list takes precedence over any volumes in the template, with the same name.
  volumeClaimTemplates:[io_k8s_api_core_v1_PersistentVolumeClaimResult]
}
# StatefulSetStatus represents the current state of a StatefulSet.
input io_k8s_api_apps_v1_StatefulSetStatusInput {
  # currentReplicas is the number of Pods created by the StatefulSet controller from the StatefulSet version indicated by currentRevision.
  currentReplicas:Int
  # observedGeneration is the most recent generation observed for this StatefulSet. It corresponds to the StatefulSet's generation, which is updated on mutation by the API Server.
  observedGeneration:Int
  # replicas is the number of Pods created by the StatefulSet controller.
  replicas:Int
  # collisionCount is the count of hash collisions for the StatefulSet. The StatefulSet controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ControllerRevision.
  collisionCount:Int
  # Represents the latest available observations of a statefulset's current state.
  conditions:[io_k8s_api_apps_v1_StatefulSetConditionInput]
  # currentRevision, if not empty, indicates the version of the StatefulSet used to generate Pods in the sequence [0,currentReplicas).
  currentRevision:String
  # readyReplicas is the number of Pods created by the StatefulSet controller that have a Ready Condition.
  readyReplicas:Int
  # updateRevision, if not empty, indicates the version of the StatefulSet used to generate Pods in the sequence [replicas-updatedReplicas,replicas)
  updateRevision:String
  # updatedReplicas is the number of Pods created by the StatefulSet controller from the StatefulSet version indicated by updateRevision.
  updatedReplicas:Int
}
# StatefulSetStatus represents the current state of a StatefulSet.
type io_k8s_api_apps_v1_StatefulSetStatusResult {
  # collisionCount is the count of hash collisions for the StatefulSet. The StatefulSet controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ControllerRevision.
  collisionCount:Int
  # Represents the latest available observations of a statefulset's current state.
  conditions:[io_k8s_api_apps_v1_StatefulSetConditionResult]
  # currentReplicas is the number of Pods created by the StatefulSet controller from the StatefulSet version indicated by currentRevision.
  currentReplicas:Int
  # currentRevision, if not empty, indicates the version of the StatefulSet used to generate Pods in the sequence [0,currentReplicas).
  currentRevision:String
  # observedGeneration is the most recent generation observed for this StatefulSet. It corresponds to the StatefulSet's generation, which is updated on mutation by the API Server.
  observedGeneration:Int
  # readyReplicas is the number of Pods created by the StatefulSet controller that have a Ready Condition.
  readyReplicas:Int
  # replicas is the number of Pods created by the StatefulSet controller.
  replicas:Int
  # updateRevision, if not empty, indicates the version of the StatefulSet used to generate Pods in the sequence [replicas-updatedReplicas,replicas)
  updateRevision:String
  # updatedReplicas is the number of Pods created by the StatefulSet controller from the StatefulSet version indicated by updateRevision.
  updatedReplicas:Int
}
# StatefulSetUpdateStrategy indicates the strategy that the StatefulSet controller will use to perform updates. It includes any additional parameters necessary to perform the update for the indicated strategy.
input io_k8s_api_apps_v1_StatefulSetUpdateStrategyInput {
  # RollingUpdateStatefulSetStrategy is used to communicate parameter for RollingUpdateStatefulSetStrategyType.
  rollingUpdate:io_k8s_api_apps_v1_RollingUpdateStatefulSetStrategyInput
  # Type indicates the type of the StatefulSetUpdateStrategy. Default is RollingUpdate.
  type:String
}
# StatefulSetUpdateStrategy indicates the strategy that the StatefulSet controller will use to perform updates. It includes any additional parameters necessary to perform the update for the indicated strategy.
type io_k8s_api_apps_v1_StatefulSetUpdateStrategyResult {
  # RollingUpdateStatefulSetStrategy is used to communicate parameter for RollingUpdateStatefulSetStrategyType.
  rollingUpdate:io_k8s_api_apps_v1_RollingUpdateStatefulSetStrategyResult
  # Type indicates the type of the StatefulSetUpdateStrategy. Default is RollingUpdate.
  type:String
}
# TokenReview attempts to authenticate a token to a known user. Note: TokenReview requests may be cached by the webhook token authenticator plugin in the kube-apiserver.
input io_k8s_api_authentication_v1_TokenReviewInput {
  # TokenReviewSpec is a description of the token authentication request.
  spec:io_k8s_api_authentication_v1_TokenReviewSpecInput
  # TokenReviewStatus is the result of the token authentication request.
  status:io_k8s_api_authentication_v1_TokenReviewStatusInput
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
}
# TokenReview attempts to authenticate a token to a known user. Note: TokenReview requests may be cached by the webhook token authenticator plugin in the kube-apiserver.
type io_k8s_api_authentication_v1_TokenReviewResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  # TokenReviewSpec is a description of the token authentication request.
  spec:io_k8s_api_authentication_v1_TokenReviewSpecResult
  # TokenReviewStatus is the result of the token authentication request.
  status:io_k8s_api_authentication_v1_TokenReviewStatusResult
}
# TokenReviewSpec is a description of the token authentication request.
input io_k8s_api_authentication_v1_TokenReviewSpecInput {
  # Audiences is a list of the identifiers that the resource server presented with the token identifies as. Audience-aware token authenticators will verify that the token was intended for at least one of the audiences in this list. If no audiences are provided, the audience will default to the audience of the Kubernetes apiserver.
  audiences:[String]
  # Token is the opaque bearer token.
  token:String
}
# TokenReviewSpec is a description of the token authentication request.
type io_k8s_api_authentication_v1_TokenReviewSpecResult {
  # Audiences is a list of the identifiers that the resource server presented with the token identifies as. Audience-aware token authenticators will verify that the token was intended for at least one of the audiences in this list. If no audiences are provided, the audience will default to the audience of the Kubernetes apiserver.
  audiences:[String]
  # Token is the opaque bearer token.
  token:String
}
# TokenReviewStatus is the result of the token authentication request.
input io_k8s_api_authentication_v1_TokenReviewStatusInput {
  # Audiences are audience identifiers chosen by the authenticator that are compatible with both the TokenReview and token. An identifier is any identifier in the intersection of the TokenReviewSpec audiences and the token's audiences. A client of the TokenReview API that sets the spec.audiences field should validate that a compatible audience identifier is returned in the status.audiences field to ensure that the TokenReview server is audience aware. If a TokenReview returns an empty status.audience field where status.authenticated is "true", the token is valid against the audience of the Kubernetes API server.
  audiences:[String]
  # Authenticated indicates that the token was associated with a known user.
  authenticated:Boolean
  # Error indicates that the token couldn't be checked
  error:String
  # UserInfo holds the information about the user needed to implement the user.Info interface.
  user:io_k8s_api_authentication_v1_UserInfoInput
}
# TokenReviewStatus is the result of the token authentication request.
type io_k8s_api_authentication_v1_TokenReviewStatusResult {
  # Audiences are audience identifiers chosen by the authenticator that are compatible with both the TokenReview and token. An identifier is any identifier in the intersection of the TokenReviewSpec audiences and the token's audiences. A client of the TokenReview API that sets the spec.audiences field should validate that a compatible audience identifier is returned in the status.audiences field to ensure that the TokenReview server is audience aware. If a TokenReview returns an empty status.audience field where status.authenticated is "true", the token is valid against the audience of the Kubernetes API server.
  audiences:[String]
  # Authenticated indicates that the token was associated with a known user.
  authenticated:Boolean
  # Error indicates that the token couldn't be checked
  error:String
  # UserInfo holds the information about the user needed to implement the user.Info interface.
  user:io_k8s_api_authentication_v1_UserInfoResult
}
# UserInfo holds the information about the user needed to implement the user.Info interface.
input io_k8s_api_authentication_v1_UserInfoInput {
  # The name that uniquely identifies this user among all active users.
  username:String
  # The names of groups this user is a part of.
  groups:[String]
  # A unique value that identifies this user across time. If this user is deleted and another user by the same name is added, they will have different UIDs.
  uid:String
}
# UserInfo holds the information about the user needed to implement the user.Info interface.
type io_k8s_api_authentication_v1_UserInfoResult {
  # The names of groups this user is a part of.
  groups:[String]
  # A unique value that identifies this user across time. If this user is deleted and another user by the same name is added, they will have different UIDs.
  uid:String
  # The name that uniquely identifies this user among all active users.
  username:String
}
# TokenReview attempts to authenticate a token to a known user. Note: TokenReview requests may be cached by the webhook token authenticator plugin in the kube-apiserver.
input io_k8s_api_authentication_v1beta1_TokenReviewInput {
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  # TokenReviewSpec is a description of the token authentication request.
  spec:io_k8s_api_authentication_v1beta1_TokenReviewSpecInput
  # TokenReviewStatus is the result of the token authentication request.
  status:io_k8s_api_authentication_v1beta1_TokenReviewStatusInput
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
}
# TokenReview attempts to authenticate a token to a known user. Note: TokenReview requests may be cached by the webhook token authenticator plugin in the kube-apiserver.
type io_k8s_api_authentication_v1beta1_TokenReviewResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  # TokenReviewSpec is a description of the token authentication request.
  spec:io_k8s_api_authentication_v1beta1_TokenReviewSpecResult
  # TokenReviewStatus is the result of the token authentication request.
  status:io_k8s_api_authentication_v1beta1_TokenReviewStatusResult
}
# TokenReviewSpec is a description of the token authentication request.
input io_k8s_api_authentication_v1beta1_TokenReviewSpecInput {
  # Audiences is a list of the identifiers that the resource server presented with the token identifies as. Audience-aware token authenticators will verify that the token was intended for at least one of the audiences in this list. If no audiences are provided, the audience will default to the audience of the Kubernetes apiserver.
  audiences:[String]
  # Token is the opaque bearer token.
  token:String
}
# TokenReviewSpec is a description of the token authentication request.
type io_k8s_api_authentication_v1beta1_TokenReviewSpecResult {
  # Audiences is a list of the identifiers that the resource server presented with the token identifies as. Audience-aware token authenticators will verify that the token was intended for at least one of the audiences in this list. If no audiences are provided, the audience will default to the audience of the Kubernetes apiserver.
  audiences:[String]
  # Token is the opaque bearer token.
  token:String
}
# TokenReviewStatus is the result of the token authentication request.
input io_k8s_api_authentication_v1beta1_TokenReviewStatusInput {
  # Error indicates that the token couldn't be checked
  error:String
  # UserInfo holds the information about the user needed to implement the user.Info interface.
  user:io_k8s_api_authentication_v1beta1_UserInfoInput
  # Audiences are audience identifiers chosen by the authenticator that are compatible with both the TokenReview and token. An identifier is any identifier in the intersection of the TokenReviewSpec audiences and the token's audiences. A client of the TokenReview API that sets the spec.audiences field should validate that a compatible audience identifier is returned in the status.audiences field to ensure that the TokenReview server is audience aware. If a TokenReview returns an empty status.audience field where status.authenticated is "true", the token is valid against the audience of the Kubernetes API server.
  audiences:[String]
  # Authenticated indicates that the token was associated with a known user.
  authenticated:Boolean
}
# TokenReviewStatus is the result of the token authentication request.
type io_k8s_api_authentication_v1beta1_TokenReviewStatusResult {
  # Audiences are audience identifiers chosen by the authenticator that are compatible with both the TokenReview and token. An identifier is any identifier in the intersection of the TokenReviewSpec audiences and the token's audiences. A client of the TokenReview API that sets the spec.audiences field should validate that a compatible audience identifier is returned in the status.audiences field to ensure that the TokenReview server is audience aware. If a TokenReview returns an empty status.audience field where status.authenticated is "true", the token is valid against the audience of the Kubernetes API server.
  audiences:[String]
  # Authenticated indicates that the token was associated with a known user.
  authenticated:Boolean
  # Error indicates that the token couldn't be checked
  error:String
  # UserInfo holds the information about the user needed to implement the user.Info interface.
  user:io_k8s_api_authentication_v1beta1_UserInfoResult
}
# UserInfo holds the information about the user needed to implement the user.Info interface.
input io_k8s_api_authentication_v1beta1_UserInfoInput {
  # The names of groups this user is a part of.
  groups:[String]
  # A unique value that identifies this user across time. If this user is deleted and another user by the same name is added, they will have different UIDs.
  uid:String
  # The name that uniquely identifies this user among all active users.
  username:String
}
# UserInfo holds the information about the user needed to implement the user.Info interface.
type io_k8s_api_authentication_v1beta1_UserInfoResult {
  # The names of groups this user is a part of.
  groups:[String]
  # A unique value that identifies this user across time. If this user is deleted and another user by the same name is added, they will have different UIDs.
  uid:String
  # The name that uniquely identifies this user among all active users.
  username:String
}
# LocalSubjectAccessReview checks whether or not a user or group can perform an action in a given namespace. Having a namespace scoped resource makes it much easier to grant namespace scoped policy that includes permissions checking.
input io_k8s_api_authorization_v1_LocalSubjectAccessReviewInput {
  # SubjectAccessReviewSpec is a description of the access request.  Exactly one of ResourceAuthorizationAttributes and NonResourceAuthorizationAttributes must be set
  spec:io_k8s_api_authorization_v1_SubjectAccessReviewSpecInput
  # SubjectAccessReviewStatus
  status:io_k8s_api_authorization_v1_SubjectAccessReviewStatusInput
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
}
# LocalSubjectAccessReview checks whether or not a user or group can perform an action in a given namespace. Having a namespace scoped resource makes it much easier to grant namespace scoped policy that includes permissions checking.
type io_k8s_api_authorization_v1_LocalSubjectAccessReviewResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  # SubjectAccessReviewSpec is a description of the access request.  Exactly one of ResourceAuthorizationAttributes and NonResourceAuthorizationAttributes must be set
  spec:io_k8s_api_authorization_v1_SubjectAccessReviewSpecResult
  # SubjectAccessReviewStatus
  status:io_k8s_api_authorization_v1_SubjectAccessReviewStatusResult
}
# NonResourceAttributes includes the authorization attributes available for non-resource requests to the Authorizer interface
input io_k8s_api_authorization_v1_NonResourceAttributesInput {
  # Verb is the standard HTTP verb
  verb:String
  # Path is the URL path of the request
  path:String
}
# NonResourceAttributes includes the authorization attributes available for non-resource requests to the Authorizer interface
type io_k8s_api_authorization_v1_NonResourceAttributesResult {
  # Path is the URL path of the request
  path:String
  # Verb is the standard HTTP verb
  verb:String
}
# NonResourceRule holds information that describes a rule for the non-resource
input io_k8s_api_authorization_v1_NonResourceRuleInput {
  # NonResourceURLs is a set of partial urls that a user should have access to.  *s are allowed, but only as the full, final step in the path.  "*" means all.
  nonResourceURLs:[String]
  # Verb is a list of kubernetes non-resource API verbs, like: get, post, put, delete, patch, head, options.  "*" means all.
  verbs:[String]
}
# NonResourceRule holds information that describes a rule for the non-resource
type io_k8s_api_authorization_v1_NonResourceRuleResult {
  # NonResourceURLs is a set of partial urls that a user should have access to.  *s are allowed, but only as the full, final step in the path.  "*" means all.
  nonResourceURLs:[String]
  # Verb is a list of kubernetes non-resource API verbs, like: get, post, put, delete, patch, head, options.  "*" means all.
  verbs:[String]
}
# ResourceAttributes includes the authorization attributes available for resource requests to the Authorizer interface
input io_k8s_api_authorization_v1_ResourceAttributesInput {
  # Namespace is the namespace of the action being requested.  Currently, there is no distinction between no namespace and all namespaces "" (empty) is defaulted for LocalSubjectAccessReviews "" (empty) is empty for cluster-scoped resources "" (empty) means "all" for namespace scoped resources from a SubjectAccessReview or SelfSubjectAccessReview
  namespace:String
  # Resource is one of the existing resource types.  "*" means all.
  resource:String
  # Subresource is one of the existing resource types.  "" means none.
  subresource:String
  # Verb is a kubernetes resource API verb, like: get, list, watch, create, update, delete, proxy.  "*" means all.
  verb:String
  # Version is the API Version of the Resource.  "*" means all.
  version:String
  # Group is the API Group of the Resource.  "*" means all.
  group:String
  # Name is the name of the resource being requested for a "get" or deleted for a "delete". "" (empty) means all.
  name:String
}
# ResourceAttributes includes the authorization attributes available for resource requests to the Authorizer interface
type io_k8s_api_authorization_v1_ResourceAttributesResult {
  # Group is the API Group of the Resource.  "*" means all.
  group:String
  # Name is the name of the resource being requested for a "get" or deleted for a "delete". "" (empty) means all.
  name:String
  # Namespace is the namespace of the action being requested.  Currently, there is no distinction between no namespace and all namespaces "" (empty) is defaulted for LocalSubjectAccessReviews "" (empty) is empty for cluster-scoped resources "" (empty) means "all" for namespace scoped resources from a SubjectAccessReview or SelfSubjectAccessReview
  namespace:String
  # Resource is one of the existing resource types.  "*" means all.
  resource:String
  # Subresource is one of the existing resource types.  "" means none.
  subresource:String
  # Verb is a kubernetes resource API verb, like: get, list, watch, create, update, delete, proxy.  "*" means all.
  verb:String
  # Version is the API Version of the Resource.  "*" means all.
  version:String
}
# ResourceRule is the list of actions the subject is allowed to perform on resources. The list ordering isn't significant, may contain duplicates, and possibly be incomplete.
input io_k8s_api_authorization_v1_ResourceRuleInput {
  # APIGroups is the name of the APIGroup that contains the resources.  If multiple API groups are specified, any action requested against one of the enumerated resources in any API group will be allowed.  "*" means all.
  apiGroups:[String]
  # ResourceNames is an optional white list of names that the rule applies to.  An empty set means that everything is allowed.  "*" means all.
  resourceNames:[String]
  # Resources is a list of resources this rule applies to.  "*" means all in the specified apiGroups.
  #  "*/foo" represents the subresource 'foo' for all resources in the specified apiGroups.
  resources:[String]
  # Verb is a list of kubernetes resource API verbs, like: get, list, watch, create, update, delete, proxy.  "*" means all.
  verbs:[String]
}
# ResourceRule is the list of actions the subject is allowed to perform on resources. The list ordering isn't significant, may contain duplicates, and possibly be incomplete.
type io_k8s_api_authorization_v1_ResourceRuleResult {
  # APIGroups is the name of the APIGroup that contains the resources.  If multiple API groups are specified, any action requested against one of the enumerated resources in any API group will be allowed.  "*" means all.
  apiGroups:[String]
  # ResourceNames is an optional white list of names that the rule applies to.  An empty set means that everything is allowed.  "*" means all.
  resourceNames:[String]
  # Resources is a list of resources this rule applies to.  "*" means all in the specified apiGroups.
  #  "*/foo" represents the subresource 'foo' for all resources in the specified apiGroups.
  resources:[String]
  # Verb is a list of kubernetes resource API verbs, like: get, list, watch, create, update, delete, proxy.  "*" means all.
  verbs:[String]
}
# SelfSubjectAccessReview checks whether or the current user can perform an action.  Not filling in a spec.namespace means "in all namespaces".  Self is a special case, because users should always be able to check whether they can perform an action
input io_k8s_api_authorization_v1_SelfSubjectAccessReviewInput {
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  # SelfSubjectAccessReviewSpec is a description of the access request.  Exactly one of ResourceAuthorizationAttributes and NonResourceAuthorizationAttributes must be set
  spec:io_k8s_api_authorization_v1_SelfSubjectAccessReviewSpecInput
  # SubjectAccessReviewStatus
  status:io_k8s_api_authorization_v1_SubjectAccessReviewStatusInput
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
}
# SelfSubjectAccessReview checks whether or the current user can perform an action.  Not filling in a spec.namespace means "in all namespaces".  Self is a special case, because users should always be able to check whether they can perform an action
type io_k8s_api_authorization_v1_SelfSubjectAccessReviewResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  # SelfSubjectAccessReviewSpec is a description of the access request.  Exactly one of ResourceAuthorizationAttributes and NonResourceAuthorizationAttributes must be set
  spec:io_k8s_api_authorization_v1_SelfSubjectAccessReviewSpecResult
  # SubjectAccessReviewStatus
  status:io_k8s_api_authorization_v1_SubjectAccessReviewStatusResult
}
# SelfSubjectAccessReviewSpec is a description of the access request.  Exactly one of ResourceAuthorizationAttributes and NonResourceAuthorizationAttributes must be set
input io_k8s_api_authorization_v1_SelfSubjectAccessReviewSpecInput {
  # NonResourceAttributes includes the authorization attributes available for non-resource requests to the Authorizer interface
  nonResourceAttributes:io_k8s_api_authorization_v1_NonResourceAttributesInput
  # ResourceAttributes includes the authorization attributes available for resource requests to the Authorizer interface
  resourceAttributes:io_k8s_api_authorization_v1_ResourceAttributesInput
}
# SelfSubjectAccessReviewSpec is a description of the access request.  Exactly one of ResourceAuthorizationAttributes and NonResourceAuthorizationAttributes must be set
type io_k8s_api_authorization_v1_SelfSubjectAccessReviewSpecResult {
  # NonResourceAttributes includes the authorization attributes available for non-resource requests to the Authorizer interface
  nonResourceAttributes:io_k8s_api_authorization_v1_NonResourceAttributesResult
  # ResourceAttributes includes the authorization attributes available for resource requests to the Authorizer interface
  resourceAttributes:io_k8s_api_authorization_v1_ResourceAttributesResult
}
# SelfSubjectRulesReview enumerates the set of actions the current user can perform within a namespace. The returned list of actions may be incomplete depending on the server's authorization mode, and any errors experienced during the evaluation. SelfSubjectRulesReview should be used by UIs to show/hide actions, or to quickly let an end user reason about their permissions. It should NOT Be used by external systems to drive authorization decisions as this raises confused deputy, cache lifetime/revocation, and correctness concerns. SubjectAccessReview, and LocalAccessReview are the correct way to defer authorization decisions to the API server.
input io_k8s_api_authorization_v1_SelfSubjectRulesReviewInput {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  spec:io_k8s_api_authorization_v1_SelfSubjectRulesReviewSpecInput
  # SubjectRulesReviewStatus contains the result of a rules check. This check can be incomplete depending on the set of authorizers the server is configured with and any errors experienced during evaluation. Because authorization rules are additive, if a rule appears in a list it's safe to assume the subject has that permission, even if that list is incomplete.
  status:io_k8s_api_authorization_v1_SubjectRulesReviewStatusInput
}
# SelfSubjectRulesReview enumerates the set of actions the current user can perform within a namespace. The returned list of actions may be incomplete depending on the server's authorization mode, and any errors experienced during the evaluation. SelfSubjectRulesReview should be used by UIs to show/hide actions, or to quickly let an end user reason about their permissions. It should NOT Be used by external systems to drive authorization decisions as this raises confused deputy, cache lifetime/revocation, and correctness concerns. SubjectAccessReview, and LocalAccessReview are the correct way to defer authorization decisions to the API server.
type io_k8s_api_authorization_v1_SelfSubjectRulesReviewResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  spec:io_k8s_api_authorization_v1_SelfSubjectRulesReviewSpecResult
  # SubjectRulesReviewStatus contains the result of a rules check. This check can be incomplete depending on the set of authorizers the server is configured with and any errors experienced during evaluation. Because authorization rules are additive, if a rule appears in a list it's safe to assume the subject has that permission, even if that list is incomplete.
  status:io_k8s_api_authorization_v1_SubjectRulesReviewStatusResult
}
input io_k8s_api_authorization_v1_SelfSubjectRulesReviewSpecInput {
  # Namespace to evaluate rules for. Required.
  namespace:String
}
type io_k8s_api_authorization_v1_SelfSubjectRulesReviewSpecResult {
  # Namespace to evaluate rules for. Required.
  namespace:String
}
# SubjectAccessReview checks whether or not a user or group can perform an action.
input io_k8s_api_authorization_v1_SubjectAccessReviewInput {
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  # SubjectAccessReviewSpec is a description of the access request.  Exactly one of ResourceAuthorizationAttributes and NonResourceAuthorizationAttributes must be set
  spec:io_k8s_api_authorization_v1_SubjectAccessReviewSpecInput
  # SubjectAccessReviewStatus
  status:io_k8s_api_authorization_v1_SubjectAccessReviewStatusInput
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
}
# SubjectAccessReview checks whether or not a user or group can perform an action.
type io_k8s_api_authorization_v1_SubjectAccessReviewResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  # SubjectAccessReviewSpec is a description of the access request.  Exactly one of ResourceAuthorizationAttributes and NonResourceAuthorizationAttributes must be set
  spec:io_k8s_api_authorization_v1_SubjectAccessReviewSpecResult
  # SubjectAccessReviewStatus
  status:io_k8s_api_authorization_v1_SubjectAccessReviewStatusResult
}
# SubjectAccessReviewSpec is a description of the access request.  Exactly one of ResourceAuthorizationAttributes and NonResourceAuthorizationAttributes must be set
input io_k8s_api_authorization_v1_SubjectAccessReviewSpecInput {
  # Groups is the groups you're testing for.
  groups:[String]
  # NonResourceAttributes includes the authorization attributes available for non-resource requests to the Authorizer interface
  nonResourceAttributes:io_k8s_api_authorization_v1_NonResourceAttributesInput
  # ResourceAttributes includes the authorization attributes available for resource requests to the Authorizer interface
  resourceAttributes:io_k8s_api_authorization_v1_ResourceAttributesInput
  # UID information about the requesting user.
  uid:String
  # User is the user you're testing for. If you specify "User" but not "Groups", then is it interpreted as "What if User were not a member of any groups
  user:String
}
# SubjectAccessReviewSpec is a description of the access request.  Exactly one of ResourceAuthorizationAttributes and NonResourceAuthorizationAttributes must be set
type io_k8s_api_authorization_v1_SubjectAccessReviewSpecResult {
  # Groups is the groups you're testing for.
  groups:[String]
  # NonResourceAttributes includes the authorization attributes available for non-resource requests to the Authorizer interface
  nonResourceAttributes:io_k8s_api_authorization_v1_NonResourceAttributesResult
  # ResourceAttributes includes the authorization attributes available for resource requests to the Authorizer interface
  resourceAttributes:io_k8s_api_authorization_v1_ResourceAttributesResult
  # UID information about the requesting user.
  uid:String
  # User is the user you're testing for. If you specify "User" but not "Groups", then is it interpreted as "What if User were not a member of any groups
  user:String
}
# SubjectAccessReviewStatus
input io_k8s_api_authorization_v1_SubjectAccessReviewStatusInput {
  # Allowed is required. True if the action would be allowed, false otherwise.
  allowed:Boolean
  # Denied is optional. True if the action would be denied, otherwise false. If both allowed is false and denied is false, then the authorizer has no opinion on whether to authorize the action. Denied may not be true if Allowed is true.
  denied:Boolean
  # EvaluationError is an indication that some error occurred during the authorization check. It is entirely possible to get an error and be able to continue determine authorization status in spite of it. For instance, RBAC can be missing a role, but enough roles are still present and bound to reason about the request.
  evaluationError:String
  # Reason is optional.  It indicates why a request was allowed or denied.
  reason:String
}
# SubjectAccessReviewStatus
type io_k8s_api_authorization_v1_SubjectAccessReviewStatusResult {
  # Allowed is required. True if the action would be allowed, false otherwise.
  allowed:Boolean
  # Denied is optional. True if the action would be denied, otherwise false. If both allowed is false and denied is false, then the authorizer has no opinion on whether to authorize the action. Denied may not be true if Allowed is true.
  denied:Boolean
  # EvaluationError is an indication that some error occurred during the authorization check. It is entirely possible to get an error and be able to continue determine authorization status in spite of it. For instance, RBAC can be missing a role, but enough roles are still present and bound to reason about the request.
  evaluationError:String
  # Reason is optional.  It indicates why a request was allowed or denied.
  reason:String
}
# SubjectRulesReviewStatus contains the result of a rules check. This check can be incomplete depending on the set of authorizers the server is configured with and any errors experienced during evaluation. Because authorization rules are additive, if a rule appears in a list it's safe to assume the subject has that permission, even if that list is incomplete.
input io_k8s_api_authorization_v1_SubjectRulesReviewStatusInput {
  # NonResourceRules is the list of actions the subject is allowed to perform on non-resources. The list ordering isn't significant, may contain duplicates, and possibly be incomplete.
  nonResourceRules:[io_k8s_api_authorization_v1_NonResourceRuleInput]
  # ResourceRules is the list of actions the subject is allowed to perform on resources. The list ordering isn't significant, may contain duplicates, and possibly be incomplete.
  resourceRules:[io_k8s_api_authorization_v1_ResourceRuleInput]
  # EvaluationError can appear in combination with Rules. It indicates an error occurred during rule evaluation, such as an authorizer that doesn't support rule evaluation, and that ResourceRules and/or NonResourceRules may be incomplete.
  evaluationError:String
  # Incomplete is true when the rules returned by this call are incomplete. This is most commonly encountered when an authorizer, such as an external authorizer, doesn't support rules evaluation.
  incomplete:Boolean
}
# SubjectRulesReviewStatus contains the result of a rules check. This check can be incomplete depending on the set of authorizers the server is configured with and any errors experienced during evaluation. Because authorization rules are additive, if a rule appears in a list it's safe to assume the subject has that permission, even if that list is incomplete.
type io_k8s_api_authorization_v1_SubjectRulesReviewStatusResult {
  # EvaluationError can appear in combination with Rules. It indicates an error occurred during rule evaluation, such as an authorizer that doesn't support rule evaluation, and that ResourceRules and/or NonResourceRules may be incomplete.
  evaluationError:String
  # Incomplete is true when the rules returned by this call are incomplete. This is most commonly encountered when an authorizer, such as an external authorizer, doesn't support rules evaluation.
  incomplete:Boolean
  # NonResourceRules is the list of actions the subject is allowed to perform on non-resources. The list ordering isn't significant, may contain duplicates, and possibly be incomplete.
  nonResourceRules:[io_k8s_api_authorization_v1_NonResourceRuleResult]
  # ResourceRules is the list of actions the subject is allowed to perform on resources. The list ordering isn't significant, may contain duplicates, and possibly be incomplete.
  resourceRules:[io_k8s_api_authorization_v1_ResourceRuleResult]
}
# LocalSubjectAccessReview checks whether or not a user or group can perform an action in a given namespace. Having a namespace scoped resource makes it much easier to grant namespace scoped policy that includes permissions checking.
input io_k8s_api_authorization_v1beta1_LocalSubjectAccessReviewInput {
  # SubjectAccessReviewStatus
  status:io_k8s_api_authorization_v1beta1_SubjectAccessReviewStatusInput
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  # SubjectAccessReviewSpec is a description of the access request.  Exactly one of ResourceAuthorizationAttributes and NonResourceAuthorizationAttributes must be set
  spec:io_k8s_api_authorization_v1beta1_SubjectAccessReviewSpecInput
}
# LocalSubjectAccessReview checks whether or not a user or group can perform an action in a given namespace. Having a namespace scoped resource makes it much easier to grant namespace scoped policy that includes permissions checking.
type io_k8s_api_authorization_v1beta1_LocalSubjectAccessReviewResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  # SubjectAccessReviewSpec is a description of the access request.  Exactly one of ResourceAuthorizationAttributes and NonResourceAuthorizationAttributes must be set
  spec:io_k8s_api_authorization_v1beta1_SubjectAccessReviewSpecResult
  # SubjectAccessReviewStatus
  status:io_k8s_api_authorization_v1beta1_SubjectAccessReviewStatusResult
}
# NonResourceAttributes includes the authorization attributes available for non-resource requests to the Authorizer interface
input io_k8s_api_authorization_v1beta1_NonResourceAttributesInput {
  # Path is the URL path of the request
  path:String
  # Verb is the standard HTTP verb
  verb:String
}
# NonResourceAttributes includes the authorization attributes available for non-resource requests to the Authorizer interface
type io_k8s_api_authorization_v1beta1_NonResourceAttributesResult {
  # Path is the URL path of the request
  path:String
  # Verb is the standard HTTP verb
  verb:String
}
# NonResourceRule holds information that describes a rule for the non-resource
input io_k8s_api_authorization_v1beta1_NonResourceRuleInput {
  # NonResourceURLs is a set of partial urls that a user should have access to.  *s are allowed, but only as the full, final step in the path.  "*" means all.
  nonResourceURLs:[String]
  # Verb is a list of kubernetes non-resource API verbs, like: get, post, put, delete, patch, head, options.  "*" means all.
  verbs:[String]
}
# NonResourceRule holds information that describes a rule for the non-resource
type io_k8s_api_authorization_v1beta1_NonResourceRuleResult {
  # NonResourceURLs is a set of partial urls that a user should have access to.  *s are allowed, but only as the full, final step in the path.  "*" means all.
  nonResourceURLs:[String]
  # Verb is a list of kubernetes non-resource API verbs, like: get, post, put, delete, patch, head, options.  "*" means all.
  verbs:[String]
}
# ResourceAttributes includes the authorization attributes available for resource requests to the Authorizer interface
input io_k8s_api_authorization_v1beta1_ResourceAttributesInput {
  # Namespace is the namespace of the action being requested.  Currently, there is no distinction between no namespace and all namespaces "" (empty) is defaulted for LocalSubjectAccessReviews "" (empty) is empty for cluster-scoped resources "" (empty) means "all" for namespace scoped resources from a SubjectAccessReview or SelfSubjectAccessReview
  namespace:String
  # Resource is one of the existing resource types.  "*" means all.
  resource:String
  # Subresource is one of the existing resource types.  "" means none.
  subresource:String
  # Verb is a kubernetes resource API verb, like: get, list, watch, create, update, delete, proxy.  "*" means all.
  verb:String
  # Version is the API Version of the Resource.  "*" means all.
  version:String
  # Group is the API Group of the Resource.  "*" means all.
  group:String
  # Name is the name of the resource being requested for a "get" or deleted for a "delete". "" (empty) means all.
  name:String
}
# ResourceAttributes includes the authorization attributes available for resource requests to the Authorizer interface
type io_k8s_api_authorization_v1beta1_ResourceAttributesResult {
  # Group is the API Group of the Resource.  "*" means all.
  group:String
  # Name is the name of the resource being requested for a "get" or deleted for a "delete". "" (empty) means all.
  name:String
  # Namespace is the namespace of the action being requested.  Currently, there is no distinction between no namespace and all namespaces "" (empty) is defaulted for LocalSubjectAccessReviews "" (empty) is empty for cluster-scoped resources "" (empty) means "all" for namespace scoped resources from a SubjectAccessReview or SelfSubjectAccessReview
  namespace:String
  # Resource is one of the existing resource types.  "*" means all.
  resource:String
  # Subresource is one of the existing resource types.  "" means none.
  subresource:String
  # Verb is a kubernetes resource API verb, like: get, list, watch, create, update, delete, proxy.  "*" means all.
  verb:String
  # Version is the API Version of the Resource.  "*" means all.
  version:String
}
# ResourceRule is the list of actions the subject is allowed to perform on resources. The list ordering isn't significant, may contain duplicates, and possibly be incomplete.
input io_k8s_api_authorization_v1beta1_ResourceRuleInput {
  # APIGroups is the name of the APIGroup that contains the resources.  If multiple API groups are specified, any action requested against one of the enumerated resources in any API group will be allowed.  "*" means all.
  apiGroups:[String]
  # ResourceNames is an optional white list of names that the rule applies to.  An empty set means that everything is allowed.  "*" means all.
  resourceNames:[String]
  # Resources is a list of resources this rule applies to.  "*" means all in the specified apiGroups.
  #  "*/foo" represents the subresource 'foo' for all resources in the specified apiGroups.
  resources:[String]
  # Verb is a list of kubernetes resource API verbs, like: get, list, watch, create, update, delete, proxy.  "*" means all.
  verbs:[String]
}
# ResourceRule is the list of actions the subject is allowed to perform on resources. The list ordering isn't significant, may contain duplicates, and possibly be incomplete.
type io_k8s_api_authorization_v1beta1_ResourceRuleResult {
  # APIGroups is the name of the APIGroup that contains the resources.  If multiple API groups are specified, any action requested against one of the enumerated resources in any API group will be allowed.  "*" means all.
  apiGroups:[String]
  # ResourceNames is an optional white list of names that the rule applies to.  An empty set means that everything is allowed.  "*" means all.
  resourceNames:[String]
  # Resources is a list of resources this rule applies to.  "*" means all in the specified apiGroups.
  #  "*/foo" represents the subresource 'foo' for all resources in the specified apiGroups.
  resources:[String]
  # Verb is a list of kubernetes resource API verbs, like: get, list, watch, create, update, delete, proxy.  "*" means all.
  verbs:[String]
}
# SelfSubjectAccessReview checks whether or the current user can perform an action.  Not filling in a spec.namespace means "in all namespaces".  Self is a special case, because users should always be able to check whether they can perform an action
input io_k8s_api_authorization_v1beta1_SelfSubjectAccessReviewInput {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  # SelfSubjectAccessReviewSpec is a description of the access request.  Exactly one of ResourceAuthorizationAttributes and NonResourceAuthorizationAttributes must be set
  spec:io_k8s_api_authorization_v1beta1_SelfSubjectAccessReviewSpecInput
  # SubjectAccessReviewStatus
  status:io_k8s_api_authorization_v1beta1_SubjectAccessReviewStatusInput
}
# SelfSubjectAccessReview checks whether or the current user can perform an action.  Not filling in a spec.namespace means "in all namespaces".  Self is a special case, because users should always be able to check whether they can perform an action
type io_k8s_api_authorization_v1beta1_SelfSubjectAccessReviewResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  # SelfSubjectAccessReviewSpec is a description of the access request.  Exactly one of ResourceAuthorizationAttributes and NonResourceAuthorizationAttributes must be set
  spec:io_k8s_api_authorization_v1beta1_SelfSubjectAccessReviewSpecResult
  # SubjectAccessReviewStatus
  status:io_k8s_api_authorization_v1beta1_SubjectAccessReviewStatusResult
}
# SelfSubjectAccessReviewSpec is a description of the access request.  Exactly one of ResourceAuthorizationAttributes and NonResourceAuthorizationAttributes must be set
input io_k8s_api_authorization_v1beta1_SelfSubjectAccessReviewSpecInput {
  # NonResourceAttributes includes the authorization attributes available for non-resource requests to the Authorizer interface
  nonResourceAttributes:io_k8s_api_authorization_v1beta1_NonResourceAttributesInput
  # ResourceAttributes includes the authorization attributes available for resource requests to the Authorizer interface
  resourceAttributes:io_k8s_api_authorization_v1beta1_ResourceAttributesInput
}
# SelfSubjectAccessReviewSpec is a description of the access request.  Exactly one of ResourceAuthorizationAttributes and NonResourceAuthorizationAttributes must be set
type io_k8s_api_authorization_v1beta1_SelfSubjectAccessReviewSpecResult {
  # NonResourceAttributes includes the authorization attributes available for non-resource requests to the Authorizer interface
  nonResourceAttributes:io_k8s_api_authorization_v1beta1_NonResourceAttributesResult
  # ResourceAttributes includes the authorization attributes available for resource requests to the Authorizer interface
  resourceAttributes:io_k8s_api_authorization_v1beta1_ResourceAttributesResult
}
# SelfSubjectRulesReview enumerates the set of actions the current user can perform within a namespace. The returned list of actions may be incomplete depending on the server's authorization mode, and any errors experienced during the evaluation. SelfSubjectRulesReview should be used by UIs to show/hide actions, or to quickly let an end user reason about their permissions. It should NOT Be used by external systems to drive authorization decisions as this raises confused deputy, cache lifetime/revocation, and correctness concerns. SubjectAccessReview, and LocalAccessReview are the correct way to defer authorization decisions to the API server.
input io_k8s_api_authorization_v1beta1_SelfSubjectRulesReviewInput {
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  spec:io_k8s_api_authorization_v1beta1_SelfSubjectRulesReviewSpecInput
  # SubjectRulesReviewStatus contains the result of a rules check. This check can be incomplete depending on the set of authorizers the server is configured with and any errors experienced during evaluation. Because authorization rules are additive, if a rule appears in a list it's safe to assume the subject has that permission, even if that list is incomplete.
  status:io_k8s_api_authorization_v1beta1_SubjectRulesReviewStatusInput
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
}
# SelfSubjectRulesReview enumerates the set of actions the current user can perform within a namespace. The returned list of actions may be incomplete depending on the server's authorization mode, and any errors experienced during the evaluation. SelfSubjectRulesReview should be used by UIs to show/hide actions, or to quickly let an end user reason about their permissions. It should NOT Be used by external systems to drive authorization decisions as this raises confused deputy, cache lifetime/revocation, and correctness concerns. SubjectAccessReview, and LocalAccessReview are the correct way to defer authorization decisions to the API server.
type io_k8s_api_authorization_v1beta1_SelfSubjectRulesReviewResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  spec:io_k8s_api_authorization_v1beta1_SelfSubjectRulesReviewSpecResult
  # SubjectRulesReviewStatus contains the result of a rules check. This check can be incomplete depending on the set of authorizers the server is configured with and any errors experienced during evaluation. Because authorization rules are additive, if a rule appears in a list it's safe to assume the subject has that permission, even if that list is incomplete.
  status:io_k8s_api_authorization_v1beta1_SubjectRulesReviewStatusResult
}
input io_k8s_api_authorization_v1beta1_SelfSubjectRulesReviewSpecInput {
  # Namespace to evaluate rules for. Required.
  namespace:String
}
type io_k8s_api_authorization_v1beta1_SelfSubjectRulesReviewSpecResult {
  # Namespace to evaluate rules for. Required.
  namespace:String
}
# SubjectAccessReview checks whether or not a user or group can perform an action.
input io_k8s_api_authorization_v1beta1_SubjectAccessReviewInput {
  # SubjectAccessReviewStatus
  status:io_k8s_api_authorization_v1beta1_SubjectAccessReviewStatusInput
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  # SubjectAccessReviewSpec is a description of the access request.  Exactly one of ResourceAuthorizationAttributes and NonResourceAuthorizationAttributes must be set
  spec:io_k8s_api_authorization_v1beta1_SubjectAccessReviewSpecInput
}
# SubjectAccessReview checks whether or not a user or group can perform an action.
type io_k8s_api_authorization_v1beta1_SubjectAccessReviewResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  # SubjectAccessReviewSpec is a description of the access request.  Exactly one of ResourceAuthorizationAttributes and NonResourceAuthorizationAttributes must be set
  spec:io_k8s_api_authorization_v1beta1_SubjectAccessReviewSpecResult
  # SubjectAccessReviewStatus
  status:io_k8s_api_authorization_v1beta1_SubjectAccessReviewStatusResult
}
# SubjectAccessReviewSpec is a description of the access request.  Exactly one of ResourceAuthorizationAttributes and NonResourceAuthorizationAttributes must be set
input io_k8s_api_authorization_v1beta1_SubjectAccessReviewSpecInput {
  # User is the user you're testing for. If you specify "User" but not "Group", then is it interpreted as "What if User were not a member of any groups
  user:String
  # Groups is the groups you're testing for.
  group:[String]
  # NonResourceAttributes includes the authorization attributes available for non-resource requests to the Authorizer interface
  nonResourceAttributes:io_k8s_api_authorization_v1beta1_NonResourceAttributesInput
  # ResourceAttributes includes the authorization attributes available for resource requests to the Authorizer interface
  resourceAttributes:io_k8s_api_authorization_v1beta1_ResourceAttributesInput
  # UID information about the requesting user.
  uid:String
}
# SubjectAccessReviewSpec is a description of the access request.  Exactly one of ResourceAuthorizationAttributes and NonResourceAuthorizationAttributes must be set
type io_k8s_api_authorization_v1beta1_SubjectAccessReviewSpecResult {
  # Groups is the groups you're testing for.
  group:[String]
  # NonResourceAttributes includes the authorization attributes available for non-resource requests to the Authorizer interface
  nonResourceAttributes:io_k8s_api_authorization_v1beta1_NonResourceAttributesResult
  # ResourceAttributes includes the authorization attributes available for resource requests to the Authorizer interface
  resourceAttributes:io_k8s_api_authorization_v1beta1_ResourceAttributesResult
  # UID information about the requesting user.
  uid:String
  # User is the user you're testing for. If you specify "User" but not "Group", then is it interpreted as "What if User were not a member of any groups
  user:String
}
# SubjectAccessReviewStatus
input io_k8s_api_authorization_v1beta1_SubjectAccessReviewStatusInput {
  # Allowed is required. True if the action would be allowed, false otherwise.
  allowed:Boolean
  # Denied is optional. True if the action would be denied, otherwise false. If both allowed is false and denied is false, then the authorizer has no opinion on whether to authorize the action. Denied may not be true if Allowed is true.
  denied:Boolean
  # EvaluationError is an indication that some error occurred during the authorization check. It is entirely possible to get an error and be able to continue determine authorization status in spite of it. For instance, RBAC can be missing a role, but enough roles are still present and bound to reason about the request.
  evaluationError:String
  # Reason is optional.  It indicates why a request was allowed or denied.
  reason:String
}
# SubjectAccessReviewStatus
type io_k8s_api_authorization_v1beta1_SubjectAccessReviewStatusResult {
  # Allowed is required. True if the action would be allowed, false otherwise.
  allowed:Boolean
  # Denied is optional. True if the action would be denied, otherwise false. If both allowed is false and denied is false, then the authorizer has no opinion on whether to authorize the action. Denied may not be true if Allowed is true.
  denied:Boolean
  # EvaluationError is an indication that some error occurred during the authorization check. It is entirely possible to get an error and be able to continue determine authorization status in spite of it. For instance, RBAC can be missing a role, but enough roles are still present and bound to reason about the request.
  evaluationError:String
  # Reason is optional.  It indicates why a request was allowed or denied.
  reason:String
}
# SubjectRulesReviewStatus contains the result of a rules check. This check can be incomplete depending on the set of authorizers the server is configured with and any errors experienced during evaluation. Because authorization rules are additive, if a rule appears in a list it's safe to assume the subject has that permission, even if that list is incomplete.
input io_k8s_api_authorization_v1beta1_SubjectRulesReviewStatusInput {
  # EvaluationError can appear in combination with Rules. It indicates an error occurred during rule evaluation, such as an authorizer that doesn't support rule evaluation, and that ResourceRules and/or NonResourceRules may be incomplete.
  evaluationError:String
  # Incomplete is true when the rules returned by this call are incomplete. This is most commonly encountered when an authorizer, such as an external authorizer, doesn't support rules evaluation.
  incomplete:Boolean
  # NonResourceRules is the list of actions the subject is allowed to perform on non-resources. The list ordering isn't significant, may contain duplicates, and possibly be incomplete.
  nonResourceRules:[io_k8s_api_authorization_v1beta1_NonResourceRuleInput]
  # ResourceRules is the list of actions the subject is allowed to perform on resources. The list ordering isn't significant, may contain duplicates, and possibly be incomplete.
  resourceRules:[io_k8s_api_authorization_v1beta1_ResourceRuleInput]
}
# SubjectRulesReviewStatus contains the result of a rules check. This check can be incomplete depending on the set of authorizers the server is configured with and any errors experienced during evaluation. Because authorization rules are additive, if a rule appears in a list it's safe to assume the subject has that permission, even if that list is incomplete.
type io_k8s_api_authorization_v1beta1_SubjectRulesReviewStatusResult {
  # EvaluationError can appear in combination with Rules. It indicates an error occurred during rule evaluation, such as an authorizer that doesn't support rule evaluation, and that ResourceRules and/or NonResourceRules may be incomplete.
  evaluationError:String
  # Incomplete is true when the rules returned by this call are incomplete. This is most commonly encountered when an authorizer, such as an external authorizer, doesn't support rules evaluation.
  incomplete:Boolean
  # NonResourceRules is the list of actions the subject is allowed to perform on non-resources. The list ordering isn't significant, may contain duplicates, and possibly be incomplete.
  nonResourceRules:[io_k8s_api_authorization_v1beta1_NonResourceRuleResult]
  # ResourceRules is the list of actions the subject is allowed to perform on resources. The list ordering isn't significant, may contain duplicates, and possibly be incomplete.
  resourceRules:[io_k8s_api_authorization_v1beta1_ResourceRuleResult]
}
# CrossVersionObjectReference contains enough information to let you identify the referred resource.
input io_k8s_api_autoscaling_v1_CrossVersionObjectReferenceInput {
  # API version of the referent
  apiVersion:String
  # Kind of the referent; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
  kind:String
  # Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names
  name:String
}
# CrossVersionObjectReference contains enough information to let you identify the referred resource.
type io_k8s_api_autoscaling_v1_CrossVersionObjectReferenceResult {
  # API version of the referent
  apiVersion:String
  # Kind of the referent; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
  kind:String
  # Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names
  name:String
}
# configuration of a horizontal pod autoscaler.
input io_k8s_api_autoscaling_v1_HorizontalPodAutoscalerInput {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  # specification of a horizontal pod autoscaler.
  spec:io_k8s_api_autoscaling_v1_HorizontalPodAutoscalerSpecInput
  # current status of a horizontal pod autoscaler
  status:io_k8s_api_autoscaling_v1_HorizontalPodAutoscalerStatusInput
}
# list of horizontal pod autoscaler objects.
type io_k8s_api_autoscaling_v1_HorizontalPodAutoscalerListResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # list of horizontal pod autoscaler objects.
  items:[io_k8s_api_autoscaling_v1_HorizontalPodAutoscalerResult]
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
# configuration of a horizontal pod autoscaler.
type io_k8s_api_autoscaling_v1_HorizontalPodAutoscalerResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  # specification of a horizontal pod autoscaler.
  spec:io_k8s_api_autoscaling_v1_HorizontalPodAutoscalerSpecResult
  # current status of a horizontal pod autoscaler
  status:io_k8s_api_autoscaling_v1_HorizontalPodAutoscalerStatusResult
}
# specification of a horizontal pod autoscaler.
input io_k8s_api_autoscaling_v1_HorizontalPodAutoscalerSpecInput {
  # upper limit for the number of pods that can be set by the autoscaler; cannot be smaller than MinReplicas.
  maxReplicas:Int
  # minReplicas is the lower limit for the number of replicas to which the autoscaler can scale down.  It defaults to 1 pod.  minReplicas is allowed to be 0 if the alpha feature gate HPAScaleToZero is enabled and at least one Object or External metric is configured.  Scaling is active as long as at least one metric value is available.
  minReplicas:Int
  # CrossVersionObjectReference contains enough information to let you identify the referred resource.
  scaleTargetRef:io_k8s_api_autoscaling_v1_CrossVersionObjectReferenceInput
  # target average CPU utilization (represented as a percentage of requested CPU) over all the pods; if not specified the default autoscaling policy will be used.
  targetCPUUtilizationPercentage:Int
}
# specification of a horizontal pod autoscaler.
type io_k8s_api_autoscaling_v1_HorizontalPodAutoscalerSpecResult {
  # upper limit for the number of pods that can be set by the autoscaler; cannot be smaller than MinReplicas.
  maxReplicas:Int
  # minReplicas is the lower limit for the number of replicas to which the autoscaler can scale down.  It defaults to 1 pod.  minReplicas is allowed to be 0 if the alpha feature gate HPAScaleToZero is enabled and at least one Object or External metric is configured.  Scaling is active as long as at least one metric value is available.
  minReplicas:Int
  # CrossVersionObjectReference contains enough information to let you identify the referred resource.
  scaleTargetRef:io_k8s_api_autoscaling_v1_CrossVersionObjectReferenceResult
  # target average CPU utilization (represented as a percentage of requested CPU) over all the pods; if not specified the default autoscaling policy will be used.
  targetCPUUtilizationPercentage:Int
}
# current status of a horizontal pod autoscaler
input io_k8s_api_autoscaling_v1_HorizontalPodAutoscalerStatusInput {
  # most recent generation observed by this autoscaler.
  observedGeneration:Int
  # current average CPU utilization over all pods, represented as a percentage of requested CPU, e.g. 70 means that an average pod is using now 70% of its requested CPU.
  currentCPUUtilizationPercentage:Int
  # current number of replicas of pods managed by this autoscaler.
  currentReplicas:Int
  # desired number of replicas of pods managed by this autoscaler.
  desiredReplicas:Int
  # Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
  lastScaleTime:String
}
# current status of a horizontal pod autoscaler
type io_k8s_api_autoscaling_v1_HorizontalPodAutoscalerStatusResult {
  # current average CPU utilization over all pods, represented as a percentage of requested CPU, e.g. 70 means that an average pod is using now 70% of its requested CPU.
  currentCPUUtilizationPercentage:Int
  # current number of replicas of pods managed by this autoscaler.
  currentReplicas:Int
  # desired number of replicas of pods managed by this autoscaler.
  desiredReplicas:Int
  # Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
  lastScaleTime:String
  # most recent generation observed by this autoscaler.
  observedGeneration:Int
}
# Scale represents a scaling request for a resource.
input io_k8s_api_autoscaling_v1_ScaleInput {
  # ScaleStatus represents the current status of a scale subresource.
  status:io_k8s_api_autoscaling_v1_ScaleStatusInput
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  # ScaleSpec describes the attributes of a scale subresource.
  spec:io_k8s_api_autoscaling_v1_ScaleSpecInput
}
# Scale represents a scaling request for a resource.
type io_k8s_api_autoscaling_v1_ScaleResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  # ScaleSpec describes the attributes of a scale subresource.
  spec:io_k8s_api_autoscaling_v1_ScaleSpecResult
  # ScaleStatus represents the current status of a scale subresource.
  status:io_k8s_api_autoscaling_v1_ScaleStatusResult
}
# ScaleSpec describes the attributes of a scale subresource.
input io_k8s_api_autoscaling_v1_ScaleSpecInput {
  # desired number of instances for the scaled object.
  replicas:Int
}
# ScaleSpec describes the attributes of a scale subresource.
type io_k8s_api_autoscaling_v1_ScaleSpecResult {
  # desired number of instances for the scaled object.
  replicas:Int
}
# ScaleStatus represents the current status of a scale subresource.
input io_k8s_api_autoscaling_v1_ScaleStatusInput {
  # actual number of observed instances of the scaled object.
  replicas:Int
  # label query over pods that should match the replicas count. This is same as the label selector but in the string format to avoid introspection by clients. The string will be in the same format as the query-param syntax. More info about label selectors: http://kubernetes.io/docs/user-guide/labels#label-selectors
  selector:String
}
# ScaleStatus represents the current status of a scale subresource.
type io_k8s_api_autoscaling_v1_ScaleStatusResult {
  # actual number of observed instances of the scaled object.
  replicas:Int
  # label query over pods that should match the replicas count. This is same as the label selector but in the string format to avoid introspection by clients. The string will be in the same format as the query-param syntax. More info about label selectors: http://kubernetes.io/docs/user-guide/labels#label-selectors
  selector:String
}
# CrossVersionObjectReference contains enough information to let you identify the referred resource.
input io_k8s_api_autoscaling_v2beta1_CrossVersionObjectReferenceInput {
  # API version of the referent
  apiVersion:String
  # Kind of the referent; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
  kind:String
  # Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names
  name:String
}
# CrossVersionObjectReference contains enough information to let you identify the referred resource.
type io_k8s_api_autoscaling_v2beta1_CrossVersionObjectReferenceResult {
  # API version of the referent
  apiVersion:String
  # Kind of the referent; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
  kind:String
  # Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names
  name:String
}
# ExternalMetricSource indicates how to scale on a metric not associated with any Kubernetes object (for example length of queue in cloud messaging service, or QPS from loadbalancer running outside of cluster). Exactly one "target" type should be set.
input io_k8s_api_autoscaling_v2beta1_ExternalMetricSourceInput {
  # metricName is the name of the metric in question.
  metricName:String
  # A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
  metricSelector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorInput
  # Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.
  # The serialization format is:
  # <quantity>        ::= <signedNumber><suffix>
  #   (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
  # <digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
  #   (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
  # <decimalSI>       ::= m | "" | k | M | G | T | P | E
  #   (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
  # <decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>
  # No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.
  # When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.
  # Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
  #   a. No precision is lost
  #   b. No fractional digits will be emitted
  #   c. The exponent (or suffix) is as large as possible.
  # The sign will be omitted unless the number is negative.
  # Examples:
  #   1.5 will be serialized as "1500m"
  #   1.5Gi will be serialized as "1536Mi"
  # Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.
  # Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)
  # This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
  targetAverageValue:String
  # Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.
  # The serialization format is:
  # <quantity>        ::= <signedNumber><suffix>
  #   (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
  # <digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
  #   (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
  # <decimalSI>       ::= m | "" | k | M | G | T | P | E
  #   (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
  # <decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>
  # No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.
  # When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.
  # Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
  #   a. No precision is lost
  #   b. No fractional digits will be emitted
  #   c. The exponent (or suffix) is as large as possible.
  # The sign will be omitted unless the number is negative.
  # Examples:
  #   1.5 will be serialized as "1500m"
  #   1.5Gi will be serialized as "1536Mi"
  # Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.
  # Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)
  # This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
  targetValue:String
}
# ExternalMetricSource indicates how to scale on a metric not associated with any Kubernetes object (for example length of queue in cloud messaging service, or QPS from loadbalancer running outside of cluster). Exactly one "target" type should be set.
type io_k8s_api_autoscaling_v2beta1_ExternalMetricSourceResult {
  # metricName is the name of the metric in question.
  metricName:String
  # A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
  metricSelector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorResult
  # Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.
  # The serialization format is:
  # <quantity>        ::= <signedNumber><suffix>
  #   (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
  # <digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
  #   (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
  # <decimalSI>       ::= m | "" | k | M | G | T | P | E
  #   (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
  # <decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>
  # No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.
  # When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.
  # Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
  #   a. No precision is lost
  #   b. No fractional digits will be emitted
  #   c. The exponent (or suffix) is as large as possible.
  # The sign will be omitted unless the number is negative.
  # Examples:
  #   1.5 will be serialized as "1500m"
  #   1.5Gi will be serialized as "1536Mi"
  # Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.
  # Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)
  # This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
  targetAverageValue:String
  # Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.
  # The serialization format is:
  # <quantity>        ::= <signedNumber><suffix>
  #   (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
  # <digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
  #   (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
  # <decimalSI>       ::= m | "" | k | M | G | T | P | E
  #   (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
  # <decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>
  # No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.
  # When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.
  # Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
  #   a. No precision is lost
  #   b. No fractional digits will be emitted
  #   c. The exponent (or suffix) is as large as possible.
  # The sign will be omitted unless the number is negative.
  # Examples:
  #   1.5 will be serialized as "1500m"
  #   1.5Gi will be serialized as "1536Mi"
  # Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.
  # Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)
  # This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
  targetValue:String
}
# ExternalMetricStatus indicates the current value of a global metric not associated with any Kubernetes object.
input io_k8s_api_autoscaling_v2beta1_ExternalMetricStatusInput {
  # Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.
  # The serialization format is:
  # <quantity>        ::= <signedNumber><suffix>
  #   (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
  # <digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
  #   (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
  # <decimalSI>       ::= m | "" | k | M | G | T | P | E
  #   (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
  # <decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>
  # No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.
  # When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.
  # Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
  #   a. No precision is lost
  #   b. No fractional digits will be emitted
  #   c. The exponent (or suffix) is as large as possible.
  # The sign will be omitted unless the number is negative.
  # Examples:
  #   1.5 will be serialized as "1500m"
  #   1.5Gi will be serialized as "1536Mi"
  # Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.
  # Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)
  # This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
  currentAverageValue:String
  # Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.
  # The serialization format is:
  # <quantity>        ::= <signedNumber><suffix>
  #   (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
  # <digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
  #   (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
  # <decimalSI>       ::= m | "" | k | M | G | T | P | E
  #   (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
  # <decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>
  # No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.
  # When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.
  # Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
  #   a. No precision is lost
  #   b. No fractional digits will be emitted
  #   c. The exponent (or suffix) is as large as possible.
  # The sign will be omitted unless the number is negative.
  # Examples:
  #   1.5 will be serialized as "1500m"
  #   1.5Gi will be serialized as "1536Mi"
  # Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.
  # Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)
  # This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
  currentValue:String
  # metricName is the name of a metric used for autoscaling in metric system.
  metricName:String
  # A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
  metricSelector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorInput
}
# ExternalMetricStatus indicates the current value of a global metric not associated with any Kubernetes object.
type io_k8s_api_autoscaling_v2beta1_ExternalMetricStatusResult {
  # Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.
  # The serialization format is:
  # <quantity>        ::= <signedNumber><suffix>
  #   (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
  # <digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
  #   (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
  # <decimalSI>       ::= m | "" | k | M | G | T | P | E
  #   (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
  # <decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>
  # No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.
  # When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.
  # Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
  #   a. No precision is lost
  #   b. No fractional digits will be emitted
  #   c. The exponent (or suffix) is as large as possible.
  # The sign will be omitted unless the number is negative.
  # Examples:
  #   1.5 will be serialized as "1500m"
  #   1.5Gi will be serialized as "1536Mi"
  # Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.
  # Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)
  # This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
  currentAverageValue:String
  # Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.
  # The serialization format is:
  # <quantity>        ::= <signedNumber><suffix>
  #   (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
  # <digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
  #   (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
  # <decimalSI>       ::= m | "" | k | M | G | T | P | E
  #   (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
  # <decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>
  # No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.
  # When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.
  # Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
  #   a. No precision is lost
  #   b. No fractional digits will be emitted
  #   c. The exponent (or suffix) is as large as possible.
  # The sign will be omitted unless the number is negative.
  # Examples:
  #   1.5 will be serialized as "1500m"
  #   1.5Gi will be serialized as "1536Mi"
  # Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.
  # Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)
  # This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
  currentValue:String
  # metricName is the name of a metric used for autoscaling in metric system.
  metricName:String
  # A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
  metricSelector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorResult
}
# HorizontalPodAutoscalerCondition describes the state of a HorizontalPodAutoscaler at a certain point.
input io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscalerConditionInput {
  # Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
  lastTransitionTime:String
  # message is a human-readable explanation containing details about the transition
  message:String
  # reason is the reason for the condition's last transition.
  reason:String
  # status is the status of the condition (True, False, Unknown)
  status:String
  # type describes the current condition
  type:String
}
# HorizontalPodAutoscalerCondition describes the state of a HorizontalPodAutoscaler at a certain point.
type io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscalerConditionResult {
  # Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
  lastTransitionTime:String
  # message is a human-readable explanation containing details about the transition
  message:String
  # reason is the reason for the condition's last transition.
  reason:String
  # status is the status of the condition (True, False, Unknown)
  status:String
  # type describes the current condition
  type:String
}
# HorizontalPodAutoscaler is the configuration for a horizontal pod autoscaler, which automatically manages the replica count of any resource implementing the scale subresource based on the metrics specified.
input io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscalerInput {
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  # HorizontalPodAutoscalerSpec describes the desired functionality of the HorizontalPodAutoscaler.
  spec:io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscalerSpecInput
  # HorizontalPodAutoscalerStatus describes the current status of a horizontal pod autoscaler.
  status:io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscalerStatusInput
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
}
# HorizontalPodAutoscaler is a list of horizontal pod autoscaler objects.
type io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscalerListResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # items is the list of horizontal pod autoscaler objects.
  items:[io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscalerResult]
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
# HorizontalPodAutoscaler is the configuration for a horizontal pod autoscaler, which automatically manages the replica count of any resource implementing the scale subresource based on the metrics specified.
type io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscalerResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  # HorizontalPodAutoscalerSpec describes the desired functionality of the HorizontalPodAutoscaler.
  spec:io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscalerSpecResult
  # HorizontalPodAutoscalerStatus describes the current status of a horizontal pod autoscaler.
  status:io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscalerStatusResult
}
# HorizontalPodAutoscalerSpec describes the desired functionality of the HorizontalPodAutoscaler.
input io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscalerSpecInput {
  # maxReplicas is the upper limit for the number of replicas to which the autoscaler can scale up. It cannot be less that minReplicas.
  maxReplicas:Int
  # metrics contains the specifications for which to use to calculate the desired replica count (the maximum replica count across all metrics will be used).  The desired replica count is calculated multiplying the ratio between the target value and the current value by the current number of pods.  Ergo, metrics used must decrease as the pod count is increased, and vice-versa.  See the individual metric source types for more information about how each type of metric must respond.
  metrics:[io_k8s_api_autoscaling_v2beta1_MetricSpecInput]
  # minReplicas is the lower limit for the number of replicas to which the autoscaler can scale down.  It defaults to 1 pod.  minReplicas is allowed to be 0 if the alpha feature gate HPAScaleToZero is enabled and at least one Object or External metric is configured.  Scaling is active as long as at least one metric value is available.
  minReplicas:Int
  # CrossVersionObjectReference contains enough information to let you identify the referred resource.
  scaleTargetRef:io_k8s_api_autoscaling_v2beta1_CrossVersionObjectReferenceInput
}
# HorizontalPodAutoscalerSpec describes the desired functionality of the HorizontalPodAutoscaler.
type io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscalerSpecResult {
  # maxReplicas is the upper limit for the number of replicas to which the autoscaler can scale up. It cannot be less that minReplicas.
  maxReplicas:Int
  # metrics contains the specifications for which to use to calculate the desired replica count (the maximum replica count across all metrics will be used).  The desired replica count is calculated multiplying the ratio between the target value and the current value by the current number of pods.  Ergo, metrics used must decrease as the pod count is increased, and vice-versa.  See the individual metric source types for more information about how each type of metric must respond.
  metrics:[io_k8s_api_autoscaling_v2beta1_MetricSpecResult]
  # minReplicas is the lower limit for the number of replicas to which the autoscaler can scale down.  It defaults to 1 pod.  minReplicas is allowed to be 0 if the alpha feature gate HPAScaleToZero is enabled and at least one Object or External metric is configured.  Scaling is active as long as at least one metric value is available.
  minReplicas:Int
  # CrossVersionObjectReference contains enough information to let you identify the referred resource.
  scaleTargetRef:io_k8s_api_autoscaling_v2beta1_CrossVersionObjectReferenceResult
}
# HorizontalPodAutoscalerStatus describes the current status of a horizontal pod autoscaler.
input io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscalerStatusInput {
  # observedGeneration is the most recent generation observed by this autoscaler.
  observedGeneration:Int
  # conditions is the set of conditions required for this autoscaler to scale its target, and indicates whether or not those conditions are met.
  conditions:[io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscalerConditionInput]
  # currentMetrics is the last read state of the metrics used by this autoscaler.
  currentMetrics:[io_k8s_api_autoscaling_v2beta1_MetricStatusInput]
  # currentReplicas is current number of replicas of pods managed by this autoscaler, as last seen by the autoscaler.
  currentReplicas:Int
  # desiredReplicas is the desired number of replicas of pods managed by this autoscaler, as last calculated by the autoscaler.
  desiredReplicas:Int
  # Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
  lastScaleTime:String
}
# HorizontalPodAutoscalerStatus describes the current status of a horizontal pod autoscaler.
type io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscalerStatusResult {
  # conditions is the set of conditions required for this autoscaler to scale its target, and indicates whether or not those conditions are met.
  conditions:[io_k8s_api_autoscaling_v2beta1_HorizontalPodAutoscalerConditionResult]
  # currentMetrics is the last read state of the metrics used by this autoscaler.
  currentMetrics:[io_k8s_api_autoscaling_v2beta1_MetricStatusResult]
  # currentReplicas is current number of replicas of pods managed by this autoscaler, as last seen by the autoscaler.
  currentReplicas:Int
  # desiredReplicas is the desired number of replicas of pods managed by this autoscaler, as last calculated by the autoscaler.
  desiredReplicas:Int
  # Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
  lastScaleTime:String
  # observedGeneration is the most recent generation observed by this autoscaler.
  observedGeneration:Int
}
# MetricSpec specifies how to scale based on a single metric (only `type` and one other matching field should be set at once).
input io_k8s_api_autoscaling_v2beta1_MetricSpecInput {
  # ExternalMetricSource indicates how to scale on a metric not associated with any Kubernetes object (for example length of queue in cloud messaging service, or QPS from loadbalancer running outside of cluster). Exactly one "target" type should be set.
  external:io_k8s_api_autoscaling_v2beta1_ExternalMetricSourceInput
  # ObjectMetricSource indicates how to scale on a metric describing a kubernetes object (for example, hits-per-second on an Ingress object).
  object:io_k8s_api_autoscaling_v2beta1_ObjectMetricSourceInput
  # PodsMetricSource indicates how to scale on a metric describing each pod in the current scale target (for example, transactions-processed-per-second). The values will be averaged together before being compared to the target value.
  pods:io_k8s_api_autoscaling_v2beta1_PodsMetricSourceInput
  # ResourceMetricSource indicates how to scale on a resource metric known to Kubernetes, as specified in requests and limits, describing each pod in the current scale target (e.g. CPU or memory).  The values will be averaged together before being compared to the target.  Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the "pods" source.  Only one "target" type should be set.
  resource:io_k8s_api_autoscaling_v2beta1_ResourceMetricSourceInput
  # type is the type of metric source.  It should be one of "Object", "Pods" or "Resource", each mapping to a matching field in the object.
  type:String
}
# MetricSpec specifies how to scale based on a single metric (only `type` and one other matching field should be set at once).
type io_k8s_api_autoscaling_v2beta1_MetricSpecResult {
  # ExternalMetricSource indicates how to scale on a metric not associated with any Kubernetes object (for example length of queue in cloud messaging service, or QPS from loadbalancer running outside of cluster). Exactly one "target" type should be set.
  external:io_k8s_api_autoscaling_v2beta1_ExternalMetricSourceResult
  # ObjectMetricSource indicates how to scale on a metric describing a kubernetes object (for example, hits-per-second on an Ingress object).
  object:io_k8s_api_autoscaling_v2beta1_ObjectMetricSourceResult
  # PodsMetricSource indicates how to scale on a metric describing each pod in the current scale target (for example, transactions-processed-per-second). The values will be averaged together before being compared to the target value.
  pods:io_k8s_api_autoscaling_v2beta1_PodsMetricSourceResult
  # ResourceMetricSource indicates how to scale on a resource metric known to Kubernetes, as specified in requests and limits, describing each pod in the current scale target (e.g. CPU or memory).  The values will be averaged together before being compared to the target.  Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the "pods" source.  Only one "target" type should be set.
  resource:io_k8s_api_autoscaling_v2beta1_ResourceMetricSourceResult
  # type is the type of metric source.  It should be one of "Object", "Pods" or "Resource", each mapping to a matching field in the object.
  type:String
}
# MetricStatus describes the last-read state of a single metric.
input io_k8s_api_autoscaling_v2beta1_MetricStatusInput {
  # ExternalMetricStatus indicates the current value of a global metric not associated with any Kubernetes object.
  external:io_k8s_api_autoscaling_v2beta1_ExternalMetricStatusInput
  # ObjectMetricStatus indicates the current value of a metric describing a kubernetes object (for example, hits-per-second on an Ingress object).
  object:io_k8s_api_autoscaling_v2beta1_ObjectMetricStatusInput
  # PodsMetricStatus indicates the current value of a metric describing each pod in the current scale target (for example, transactions-processed-per-second).
  pods:io_k8s_api_autoscaling_v2beta1_PodsMetricStatusInput
  # ResourceMetricStatus indicates the current value of a resource metric known to Kubernetes, as specified in requests and limits, describing each pod in the current scale target (e.g. CPU or memory).  Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the "pods" source.
  resource:io_k8s_api_autoscaling_v2beta1_ResourceMetricStatusInput
  # type is the type of metric source.  It will be one of "Object", "Pods" or "Resource", each corresponds to a matching field in the object.
  type:String
}
# MetricStatus describes the last-read state of a single metric.
type io_k8s_api_autoscaling_v2beta1_MetricStatusResult {
  # ExternalMetricStatus indicates the current value of a global metric not associated with any Kubernetes object.
  external:io_k8s_api_autoscaling_v2beta1_ExternalMetricStatusResult
  # ObjectMetricStatus indicates the current value of a metric describing a kubernetes object (for example, hits-per-second on an Ingress object).
  object:io_k8s_api_autoscaling_v2beta1_ObjectMetricStatusResult
  # PodsMetricStatus indicates the current value of a metric describing each pod in the current scale target (for example, transactions-processed-per-second).
  pods:io_k8s_api_autoscaling_v2beta1_PodsMetricStatusResult
  # ResourceMetricStatus indicates the current value of a resource metric known to Kubernetes, as specified in requests and limits, describing each pod in the current scale target (e.g. CPU or memory).  Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the "pods" source.
  resource:io_k8s_api_autoscaling_v2beta1_ResourceMetricStatusResult
  # type is the type of metric source.  It will be one of "Object", "Pods" or "Resource", each corresponds to a matching field in the object.
  type:String
}
# ObjectMetricSource indicates how to scale on a metric describing a kubernetes object (for example, hits-per-second on an Ingress object).
input io_k8s_api_autoscaling_v2beta1_ObjectMetricSourceInput {
  # Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.
  # The serialization format is:
  # <quantity>        ::= <signedNumber><suffix>
  #   (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
  # <digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
  #   (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
  # <decimalSI>       ::= m | "" | k | M | G | T | P | E
  #   (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
  # <decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>
  # No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.
  # When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.
  # Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
  #   a. No precision is lost
  #   b. No fractional digits will be emitted
  #   c. The exponent (or suffix) is as large as possible.
  # The sign will be omitted unless the number is negative.
  # Examples:
  #   1.5 will be serialized as "1500m"
  #   1.5Gi will be serialized as "1536Mi"
  # Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.
  # Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)
  # This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
  averageValue:String
  # metricName is the name of the metric in question.
  metricName:String
  # A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
  selector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorInput
  # CrossVersionObjectReference contains enough information to let you identify the referred resource.
  target:io_k8s_api_autoscaling_v2beta1_CrossVersionObjectReferenceInput
  # Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.
  # The serialization format is:
  # <quantity>        ::= <signedNumber><suffix>
  #   (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
  # <digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
  #   (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
  # <decimalSI>       ::= m | "" | k | M | G | T | P | E
  #   (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
  # <decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>
  # No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.
  # When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.
  # Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
  #   a. No precision is lost
  #   b. No fractional digits will be emitted
  #   c. The exponent (or suffix) is as large as possible.
  # The sign will be omitted unless the number is negative.
  # Examples:
  #   1.5 will be serialized as "1500m"
  #   1.5Gi will be serialized as "1536Mi"
  # Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.
  # Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)
  # This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
  targetValue:String
}
# ObjectMetricSource indicates how to scale on a metric describing a kubernetes object (for example, hits-per-second on an Ingress object).
type io_k8s_api_autoscaling_v2beta1_ObjectMetricSourceResult {
  # Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.
  # The serialization format is:
  # <quantity>        ::= <signedNumber><suffix>
  #   (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
  # <digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
  #   (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
  # <decimalSI>       ::= m | "" | k | M | G | T | P | E
  #   (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
  # <decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>
  # No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.
  # When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.
  # Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
  #   a. No precision is lost
  #   b. No fractional digits will be emitted
  #   c. The exponent (or suffix) is as large as possible.
  # The sign will be omitted unless the number is negative.
  # Examples:
  #   1.5 will be serialized as "1500m"
  #   1.5Gi will be serialized as "1536Mi"
  # Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.
  # Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)
  # This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
  averageValue:String
  # metricName is the name of the metric in question.
  metricName:String
  # A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
  selector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorResult
  # CrossVersionObjectReference contains enough information to let you identify the referred resource.
  target:io_k8s_api_autoscaling_v2beta1_CrossVersionObjectReferenceResult
  # Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.
  # The serialization format is:
  # <quantity>        ::= <signedNumber><suffix>
  #   (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
  # <digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
  #   (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
  # <decimalSI>       ::= m | "" | k | M | G | T | P | E
  #   (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
  # <decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>
  # No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.
  # When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.
  # Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
  #   a. No precision is lost
  #   b. No fractional digits will be emitted
  #   c. The exponent (or suffix) is as large as possible.
  # The sign will be omitted unless the number is negative.
  # Examples:
  #   1.5 will be serialized as "1500m"
  #   1.5Gi will be serialized as "1536Mi"
  # Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.
  # Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)
  # This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
  targetValue:String
}
# ObjectMetricStatus indicates the current value of a metric describing a kubernetes object (for example, hits-per-second on an Ingress object).
input io_k8s_api_autoscaling_v2beta1_ObjectMetricStatusInput {
  # Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.
  # The serialization format is:
  # <quantity>        ::= <signedNumber><suffix>
  #   (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
  # <digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
  #   (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
  # <decimalSI>       ::= m | "" | k | M | G | T | P | E
  #   (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
  # <decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>
  # No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.
  # When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.
  # Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
  #   a. No precision is lost
  #   b. No fractional digits will be emitted
  #   c. The exponent (or suffix) is as large as possible.
  # The sign will be omitted unless the number is negative.
  # Examples:
  #   1.5 will be serialized as "1500m"
  #   1.5Gi will be serialized as "1536Mi"
  # Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.
  # Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)
  # This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
  averageValue:String
  # Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.
  # The serialization format is:
  # <quantity>        ::= <signedNumber><suffix>
  #   (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
  # <digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
  #   (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
  # <decimalSI>       ::= m | "" | k | M | G | T | P | E
  #   (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
  # <decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>
  # No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.
  # When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.
  # Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
  #   a. No precision is lost
  #   b. No fractional digits will be emitted
  #   c. The exponent (or suffix) is as large as possible.
  # The sign will be omitted unless the number is negative.
  # Examples:
  #   1.5 will be serialized as "1500m"
  #   1.5Gi will be serialized as "1536Mi"
  # Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.
  # Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)
  # This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
  currentValue:String
  # metricName is the name of the metric in question.
  metricName:String
  # A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
  selector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorInput
  # CrossVersionObjectReference contains enough information to let you identify the referred resource.
  target:io_k8s_api_autoscaling_v2beta1_CrossVersionObjectReferenceInput
}
# ObjectMetricStatus indicates the current value of a metric describing a kubernetes object (for example, hits-per-second on an Ingress object).
type io_k8s_api_autoscaling_v2beta1_ObjectMetricStatusResult {
  # Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.
  # The serialization format is:
  # <quantity>        ::= <signedNumber><suffix>
  #   (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
  # <digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
  #   (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
  # <decimalSI>       ::= m | "" | k | M | G | T | P | E
  #   (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
  # <decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>
  # No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.
  # When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.
  # Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
  #   a. No precision is lost
  #   b. No fractional digits will be emitted
  #   c. The exponent (or suffix) is as large as possible.
  # The sign will be omitted unless the number is negative.
  # Examples:
  #   1.5 will be serialized as "1500m"
  #   1.5Gi will be serialized as "1536Mi"
  # Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.
  # Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)
  # This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
  averageValue:String
  # Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.
  # The serialization format is:
  # <quantity>        ::= <signedNumber><suffix>
  #   (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
  # <digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
  #   (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
  # <decimalSI>       ::= m | "" | k | M | G | T | P | E
  #   (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
  # <decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>
  # No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.
  # When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.
  # Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
  #   a. No precision is lost
  #   b. No fractional digits will be emitted
  #   c. The exponent (or suffix) is as large as possible.
  # The sign will be omitted unless the number is negative.
  # Examples:
  #   1.5 will be serialized as "1500m"
  #   1.5Gi will be serialized as "1536Mi"
  # Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.
  # Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)
  # This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
  currentValue:String
  # metricName is the name of the metric in question.
  metricName:String
  # A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
  selector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorResult
  # CrossVersionObjectReference contains enough information to let you identify the referred resource.
  target:io_k8s_api_autoscaling_v2beta1_CrossVersionObjectReferenceResult
}
# PodsMetricSource indicates how to scale on a metric describing each pod in the current scale target (for example, transactions-processed-per-second). The values will be averaged together before being compared to the target value.
input io_k8s_api_autoscaling_v2beta1_PodsMetricSourceInput {
  # metricName is the name of the metric in question
  metricName:String
  # A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
  selector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorInput
  # Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.
  # The serialization format is:
  # <quantity>        ::= <signedNumber><suffix>
  #   (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
  # <digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
  #   (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
  # <decimalSI>       ::= m | "" | k | M | G | T | P | E
  #   (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
  # <decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>
  # No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.
  # When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.
  # Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
  #   a. No precision is lost
  #   b. No fractional digits will be emitted
  #   c. The exponent (or suffix) is as large as possible.
  # The sign will be omitted unless the number is negative.
  # Examples:
  #   1.5 will be serialized as "1500m"
  #   1.5Gi will be serialized as "1536Mi"
  # Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.
  # Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)
  # This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
  targetAverageValue:String
}
# PodsMetricSource indicates how to scale on a metric describing each pod in the current scale target (for example, transactions-processed-per-second). The values will be averaged together before being compared to the target value.
type io_k8s_api_autoscaling_v2beta1_PodsMetricSourceResult {
  # metricName is the name of the metric in question
  metricName:String
  # A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
  selector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorResult
  # Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.
  # The serialization format is:
  # <quantity>        ::= <signedNumber><suffix>
  #   (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
  # <digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
  #   (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
  # <decimalSI>       ::= m | "" | k | M | G | T | P | E
  #   (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
  # <decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>
  # No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.
  # When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.
  # Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
  #   a. No precision is lost
  #   b. No fractional digits will be emitted
  #   c. The exponent (or suffix) is as large as possible.
  # The sign will be omitted unless the number is negative.
  # Examples:
  #   1.5 will be serialized as "1500m"
  #   1.5Gi will be serialized as "1536Mi"
  # Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.
  # Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)
  # This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
  targetAverageValue:String
}
# PodsMetricStatus indicates the current value of a metric describing each pod in the current scale target (for example, transactions-processed-per-second).
input io_k8s_api_autoscaling_v2beta1_PodsMetricStatusInput {
  # A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
  selector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorInput
  # Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.
  # The serialization format is:
  # <quantity>        ::= <signedNumber><suffix>
  #   (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
  # <digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
  #   (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
  # <decimalSI>       ::= m | "" | k | M | G | T | P | E
  #   (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
  # <decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>
  # No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.
  # When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.
  # Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
  #   a. No precision is lost
  #   b. No fractional digits will be emitted
  #   c. The exponent (or suffix) is as large as possible.
  # The sign will be omitted unless the number is negative.
  # Examples:
  #   1.5 will be serialized as "1500m"
  #   1.5Gi will be serialized as "1536Mi"
  # Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.
  # Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)
  # This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
  currentAverageValue:String
  # metricName is the name of the metric in question
  metricName:String
}
# PodsMetricStatus indicates the current value of a metric describing each pod in the current scale target (for example, transactions-processed-per-second).
type io_k8s_api_autoscaling_v2beta1_PodsMetricStatusResult {
  # Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.
  # The serialization format is:
  # <quantity>        ::= <signedNumber><suffix>
  #   (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
  # <digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
  #   (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
  # <decimalSI>       ::= m | "" | k | M | G | T | P | E
  #   (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
  # <decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>
  # No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.
  # When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.
  # Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
  #   a. No precision is lost
  #   b. No fractional digits will be emitted
  #   c. The exponent (or suffix) is as large as possible.
  # The sign will be omitted unless the number is negative.
  # Examples:
  #   1.5 will be serialized as "1500m"
  #   1.5Gi will be serialized as "1536Mi"
  # Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.
  # Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)
  # This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
  currentAverageValue:String
  # metricName is the name of the metric in question
  metricName:String
  # A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
  selector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorResult
}
# ResourceMetricSource indicates how to scale on a resource metric known to Kubernetes, as specified in requests and limits, describing each pod in the current scale target (e.g. CPU or memory).  The values will be averaged together before being compared to the target.  Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the "pods" source.  Only one "target" type should be set.
input io_k8s_api_autoscaling_v2beta1_ResourceMetricSourceInput {
  # name is the name of the resource in question.
  name:String
  # targetAverageUtilization is the target value of the average of the resource metric across all relevant pods, represented as a percentage of the requested value of the resource for the pods.
  targetAverageUtilization:Int
  # Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.
  # The serialization format is:
  # <quantity>        ::= <signedNumber><suffix>
  #   (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
  # <digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
  #   (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
  # <decimalSI>       ::= m | "" | k | M | G | T | P | E
  #   (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
  # <decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>
  # No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.
  # When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.
  # Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
  #   a. No precision is lost
  #   b. No fractional digits will be emitted
  #   c. The exponent (or suffix) is as large as possible.
  # The sign will be omitted unless the number is negative.
  # Examples:
  #   1.5 will be serialized as "1500m"
  #   1.5Gi will be serialized as "1536Mi"
  # Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.
  # Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)
  # This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
  targetAverageValue:String
}
# ResourceMetricSource indicates how to scale on a resource metric known to Kubernetes, as specified in requests and limits, describing each pod in the current scale target (e.g. CPU or memory).  The values will be averaged together before being compared to the target.  Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the "pods" source.  Only one "target" type should be set.
type io_k8s_api_autoscaling_v2beta1_ResourceMetricSourceResult {
  # name is the name of the resource in question.
  name:String
  # targetAverageUtilization is the target value of the average of the resource metric across all relevant pods, represented as a percentage of the requested value of the resource for the pods.
  targetAverageUtilization:Int
  # Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.
  # The serialization format is:
  # <quantity>        ::= <signedNumber><suffix>
  #   (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
  # <digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
  #   (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
  # <decimalSI>       ::= m | "" | k | M | G | T | P | E
  #   (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
  # <decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>
  # No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.
  # When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.
  # Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
  #   a. No precision is lost
  #   b. No fractional digits will be emitted
  #   c. The exponent (or suffix) is as large as possible.
  # The sign will be omitted unless the number is negative.
  # Examples:
  #   1.5 will be serialized as "1500m"
  #   1.5Gi will be serialized as "1536Mi"
  # Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.
  # Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)
  # This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
  targetAverageValue:String
}
# ResourceMetricStatus indicates the current value of a resource metric known to Kubernetes, as specified in requests and limits, describing each pod in the current scale target (e.g. CPU or memory).  Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the "pods" source.
input io_k8s_api_autoscaling_v2beta1_ResourceMetricStatusInput {
  # currentAverageUtilization is the current value of the average of the resource metric across all relevant pods, represented as a percentage of the requested value of the resource for the pods.  It will only be present if `targetAverageValue` was set in the corresponding metric specification.
  currentAverageUtilization:Int
  # Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.
  # The serialization format is:
  # <quantity>        ::= <signedNumber><suffix>
  #   (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
  # <digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
  #   (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
  # <decimalSI>       ::= m | "" | k | M | G | T | P | E
  #   (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
  # <decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>
  # No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.
  # When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.
  # Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
  #   a. No precision is lost
  #   b. No fractional digits will be emitted
  #   c. The exponent (or suffix) is as large as possible.
  # The sign will be omitted unless the number is negative.
  # Examples:
  #   1.5 will be serialized as "1500m"
  #   1.5Gi will be serialized as "1536Mi"
  # Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.
  # Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)
  # This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
  currentAverageValue:String
  # name is the name of the resource in question.
  name:String
}
# ResourceMetricStatus indicates the current value of a resource metric known to Kubernetes, as specified in requests and limits, describing each pod in the current scale target (e.g. CPU or memory).  Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the "pods" source.
type io_k8s_api_autoscaling_v2beta1_ResourceMetricStatusResult {
  # currentAverageUtilization is the current value of the average of the resource metric across all relevant pods, represented as a percentage of the requested value of the resource for the pods.  It will only be present if `targetAverageValue` was set in the corresponding metric specification.
  currentAverageUtilization:Int
  # Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.
  # The serialization format is:
  # <quantity>        ::= <signedNumber><suffix>
  #   (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
  # <digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
  #   (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
  # <decimalSI>       ::= m | "" | k | M | G | T | P | E
  #   (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
  # <decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>
  # No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.
  # When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.
  # Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
  #   a. No precision is lost
  #   b. No fractional digits will be emitted
  #   c. The exponent (or suffix) is as large as possible.
  # The sign will be omitted unless the number is negative.
  # Examples:
  #   1.5 will be serialized as "1500m"
  #   1.5Gi will be serialized as "1536Mi"
  # Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.
  # Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)
  # This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
  currentAverageValue:String
  # name is the name of the resource in question.
  name:String
}
# CrossVersionObjectReference contains enough information to let you identify the referred resource.
input io_k8s_api_autoscaling_v2beta2_CrossVersionObjectReferenceInput {
  # API version of the referent
  apiVersion:String
  # Kind of the referent; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
  kind:String
  # Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names
  name:String
}
# CrossVersionObjectReference contains enough information to let you identify the referred resource.
type io_k8s_api_autoscaling_v2beta2_CrossVersionObjectReferenceResult {
  # API version of the referent
  apiVersion:String
  # Kind of the referent; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
  kind:String
  # Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names
  name:String
}
# ExternalMetricSource indicates how to scale on a metric not associated with any Kubernetes object (for example length of queue in cloud messaging service, or QPS from loadbalancer running outside of cluster).
input io_k8s_api_autoscaling_v2beta2_ExternalMetricSourceInput {
  # MetricIdentifier defines the name and optionally selector for a metric
  metric:io_k8s_api_autoscaling_v2beta2_MetricIdentifierInput
  # MetricTarget defines the target value, average value, or average utilization of a specific metric
  target:io_k8s_api_autoscaling_v2beta2_MetricTargetInput
}
# ExternalMetricSource indicates how to scale on a metric not associated with any Kubernetes object (for example length of queue in cloud messaging service, or QPS from loadbalancer running outside of cluster).
type io_k8s_api_autoscaling_v2beta2_ExternalMetricSourceResult {
  # MetricIdentifier defines the name and optionally selector for a metric
  metric:io_k8s_api_autoscaling_v2beta2_MetricIdentifierResult
  # MetricTarget defines the target value, average value, or average utilization of a specific metric
  target:io_k8s_api_autoscaling_v2beta2_MetricTargetResult
}
# ExternalMetricStatus indicates the current value of a global metric not associated with any Kubernetes object.
input io_k8s_api_autoscaling_v2beta2_ExternalMetricStatusInput {
  # MetricValueStatus holds the current value for a metric
  current:io_k8s_api_autoscaling_v2beta2_MetricValueStatusInput
  # MetricIdentifier defines the name and optionally selector for a metric
  metric:io_k8s_api_autoscaling_v2beta2_MetricIdentifierInput
}
# ExternalMetricStatus indicates the current value of a global metric not associated with any Kubernetes object.
type io_k8s_api_autoscaling_v2beta2_ExternalMetricStatusResult {
  # MetricValueStatus holds the current value for a metric
  current:io_k8s_api_autoscaling_v2beta2_MetricValueStatusResult
  # MetricIdentifier defines the name and optionally selector for a metric
  metric:io_k8s_api_autoscaling_v2beta2_MetricIdentifierResult
}
# HorizontalPodAutoscalerCondition describes the state of a HorizontalPodAutoscaler at a certain point.
input io_k8s_api_autoscaling_v2beta2_HorizontalPodAutoscalerConditionInput {
  # Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
  lastTransitionTime:String
  # message is a human-readable explanation containing details about the transition
  message:String
  # reason is the reason for the condition's last transition.
  reason:String
  # status is the status of the condition (True, False, Unknown)
  status:String
  # type describes the current condition
  type:String
}
# HorizontalPodAutoscalerCondition describes the state of a HorizontalPodAutoscaler at a certain point.
type io_k8s_api_autoscaling_v2beta2_HorizontalPodAutoscalerConditionResult {
  # Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
  lastTransitionTime:String
  # message is a human-readable explanation containing details about the transition
  message:String
  # reason is the reason for the condition's last transition.
  reason:String
  # status is the status of the condition (True, False, Unknown)
  status:String
  # type describes the current condition
  type:String
}
# HorizontalPodAutoscaler is the configuration for a horizontal pod autoscaler, which automatically manages the replica count of any resource implementing the scale subresource based on the metrics specified.
input io_k8s_api_autoscaling_v2beta2_HorizontalPodAutoscalerInput {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  # HorizontalPodAutoscalerSpec describes the desired functionality of the HorizontalPodAutoscaler.
  spec:io_k8s_api_autoscaling_v2beta2_HorizontalPodAutoscalerSpecInput
  # HorizontalPodAutoscalerStatus describes the current status of a horizontal pod autoscaler.
  status:io_k8s_api_autoscaling_v2beta2_HorizontalPodAutoscalerStatusInput
}
# HorizontalPodAutoscalerList is a list of horizontal pod autoscaler objects.
type io_k8s_api_autoscaling_v2beta2_HorizontalPodAutoscalerListResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # items is the list of horizontal pod autoscaler objects.
  items:[io_k8s_api_autoscaling_v2beta2_HorizontalPodAutoscalerResult]
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
# HorizontalPodAutoscaler is the configuration for a horizontal pod autoscaler, which automatically manages the replica count of any resource implementing the scale subresource based on the metrics specified.
type io_k8s_api_autoscaling_v2beta2_HorizontalPodAutoscalerResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  # HorizontalPodAutoscalerSpec describes the desired functionality of the HorizontalPodAutoscaler.
  spec:io_k8s_api_autoscaling_v2beta2_HorizontalPodAutoscalerSpecResult
  # HorizontalPodAutoscalerStatus describes the current status of a horizontal pod autoscaler.
  status:io_k8s_api_autoscaling_v2beta2_HorizontalPodAutoscalerStatusResult
}
# HorizontalPodAutoscalerSpec describes the desired functionality of the HorizontalPodAutoscaler.
input io_k8s_api_autoscaling_v2beta2_HorizontalPodAutoscalerSpecInput {
  # metrics contains the specifications for which to use to calculate the desired replica count (the maximum replica count across all metrics will be used).  The desired replica count is calculated multiplying the ratio between the target value and the current value by the current number of pods.  Ergo, metrics used must decrease as the pod count is increased, and vice-versa.  See the individual metric source types for more information about how each type of metric must respond. If not set, the default metric will be set to 80% average CPU utilization.
  metrics:[io_k8s_api_autoscaling_v2beta2_MetricSpecInput]
  # minReplicas is the lower limit for the number of replicas to which the autoscaler can scale down.  It defaults to 1 pod.  minReplicas is allowed to be 0 if the alpha feature gate HPAScaleToZero is enabled and at least one Object or External metric is configured.  Scaling is active as long as at least one metric value is available.
  minReplicas:Int
  # CrossVersionObjectReference contains enough information to let you identify the referred resource.
  scaleTargetRef:io_k8s_api_autoscaling_v2beta2_CrossVersionObjectReferenceInput
  # maxReplicas is the upper limit for the number of replicas to which the autoscaler can scale up. It cannot be less that minReplicas.
  maxReplicas:Int
}
# HorizontalPodAutoscalerSpec describes the desired functionality of the HorizontalPodAutoscaler.
type io_k8s_api_autoscaling_v2beta2_HorizontalPodAutoscalerSpecResult {
  # maxReplicas is the upper limit for the number of replicas to which the autoscaler can scale up. It cannot be less that minReplicas.
  maxReplicas:Int
  # metrics contains the specifications for which to use to calculate the desired replica count (the maximum replica count across all metrics will be used).  The desired replica count is calculated multiplying the ratio between the target value and the current value by the current number of pods.  Ergo, metrics used must decrease as the pod count is increased, and vice-versa.  See the individual metric source types for more information about how each type of metric must respond. If not set, the default metric will be set to 80% average CPU utilization.
  metrics:[io_k8s_api_autoscaling_v2beta2_MetricSpecResult]
  # minReplicas is the lower limit for the number of replicas to which the autoscaler can scale down.  It defaults to 1 pod.  minReplicas is allowed to be 0 if the alpha feature gate HPAScaleToZero is enabled and at least one Object or External metric is configured.  Scaling is active as long as at least one metric value is available.
  minReplicas:Int
  # CrossVersionObjectReference contains enough information to let you identify the referred resource.
  scaleTargetRef:io_k8s_api_autoscaling_v2beta2_CrossVersionObjectReferenceResult
}
# HorizontalPodAutoscalerStatus describes the current status of a horizontal pod autoscaler.
input io_k8s_api_autoscaling_v2beta2_HorizontalPodAutoscalerStatusInput {
  # Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
  lastScaleTime:String
  # observedGeneration is the most recent generation observed by this autoscaler.
  observedGeneration:Int
  # conditions is the set of conditions required for this autoscaler to scale its target, and indicates whether or not those conditions are met.
  conditions:[io_k8s_api_autoscaling_v2beta2_HorizontalPodAutoscalerConditionInput]
  # currentMetrics is the last read state of the metrics used by this autoscaler.
  currentMetrics:[io_k8s_api_autoscaling_v2beta2_MetricStatusInput]
  # currentReplicas is current number of replicas of pods managed by this autoscaler, as last seen by the autoscaler.
  currentReplicas:Int
  # desiredReplicas is the desired number of replicas of pods managed by this autoscaler, as last calculated by the autoscaler.
  desiredReplicas:Int
}
# HorizontalPodAutoscalerStatus describes the current status of a horizontal pod autoscaler.
type io_k8s_api_autoscaling_v2beta2_HorizontalPodAutoscalerStatusResult {
  # conditions is the set of conditions required for this autoscaler to scale its target, and indicates whether or not those conditions are met.
  conditions:[io_k8s_api_autoscaling_v2beta2_HorizontalPodAutoscalerConditionResult]
  # currentMetrics is the last read state of the metrics used by this autoscaler.
  currentMetrics:[io_k8s_api_autoscaling_v2beta2_MetricStatusResult]
  # currentReplicas is current number of replicas of pods managed by this autoscaler, as last seen by the autoscaler.
  currentReplicas:Int
  # desiredReplicas is the desired number of replicas of pods managed by this autoscaler, as last calculated by the autoscaler.
  desiredReplicas:Int
  # Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
  lastScaleTime:String
  # observedGeneration is the most recent generation observed by this autoscaler.
  observedGeneration:Int
}
# MetricIdentifier defines the name and optionally selector for a metric
input io_k8s_api_autoscaling_v2beta2_MetricIdentifierInput {
  # name is the name of the given metric
  name:String
  # A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
  selector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorInput
}
# MetricIdentifier defines the name and optionally selector for a metric
type io_k8s_api_autoscaling_v2beta2_MetricIdentifierResult {
  # name is the name of the given metric
  name:String
  # A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
  selector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorResult
}
# MetricSpec specifies how to scale based on a single metric (only `type` and one other matching field should be set at once).
input io_k8s_api_autoscaling_v2beta2_MetricSpecInput {
  # ObjectMetricSource indicates how to scale on a metric describing a kubernetes object (for example, hits-per-second on an Ingress object).
  object:io_k8s_api_autoscaling_v2beta2_ObjectMetricSourceInput
  # PodsMetricSource indicates how to scale on a metric describing each pod in the current scale target (for example, transactions-processed-per-second). The values will be averaged together before being compared to the target value.
  pods:io_k8s_api_autoscaling_v2beta2_PodsMetricSourceInput
  # ResourceMetricSource indicates how to scale on a resource metric known to Kubernetes, as specified in requests and limits, describing each pod in the current scale target (e.g. CPU or memory).  The values will be averaged together before being compared to the target.  Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the "pods" source.  Only one "target" type should be set.
  resource:io_k8s_api_autoscaling_v2beta2_ResourceMetricSourceInput
  # type is the type of metric source.  It should be one of "Object", "Pods" or "Resource", each mapping to a matching field in the object.
  type:String
  # ExternalMetricSource indicates how to scale on a metric not associated with any Kubernetes object (for example length of queue in cloud messaging service, or QPS from loadbalancer running outside of cluster).
  external:io_k8s_api_autoscaling_v2beta2_ExternalMetricSourceInput
}
# MetricSpec specifies how to scale based on a single metric (only `type` and one other matching field should be set at once).
type io_k8s_api_autoscaling_v2beta2_MetricSpecResult {
  # ExternalMetricSource indicates how to scale on a metric not associated with any Kubernetes object (for example length of queue in cloud messaging service, or QPS from loadbalancer running outside of cluster).
  external:io_k8s_api_autoscaling_v2beta2_ExternalMetricSourceResult
  # ObjectMetricSource indicates how to scale on a metric describing a kubernetes object (for example, hits-per-second on an Ingress object).
  object:io_k8s_api_autoscaling_v2beta2_ObjectMetricSourceResult
  # PodsMetricSource indicates how to scale on a metric describing each pod in the current scale target (for example, transactions-processed-per-second). The values will be averaged together before being compared to the target value.
  pods:io_k8s_api_autoscaling_v2beta2_PodsMetricSourceResult
  # ResourceMetricSource indicates how to scale on a resource metric known to Kubernetes, as specified in requests and limits, describing each pod in the current scale target (e.g. CPU or memory).  The values will be averaged together before being compared to the target.  Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the "pods" source.  Only one "target" type should be set.
  resource:io_k8s_api_autoscaling_v2beta2_ResourceMetricSourceResult
  # type is the type of metric source.  It should be one of "Object", "Pods" or "Resource", each mapping to a matching field in the object.
  type:String
}
# MetricStatus describes the last-read state of a single metric.
input io_k8s_api_autoscaling_v2beta2_MetricStatusInput {
  # ExternalMetricStatus indicates the current value of a global metric not associated with any Kubernetes object.
  external:io_k8s_api_autoscaling_v2beta2_ExternalMetricStatusInput
  # ObjectMetricStatus indicates the current value of a metric describing a kubernetes object (for example, hits-per-second on an Ingress object).
  object:io_k8s_api_autoscaling_v2beta2_ObjectMetricStatusInput
  # PodsMetricStatus indicates the current value of a metric describing each pod in the current scale target (for example, transactions-processed-per-second).
  pods:io_k8s_api_autoscaling_v2beta2_PodsMetricStatusInput
  # ResourceMetricStatus indicates the current value of a resource metric known to Kubernetes, as specified in requests and limits, describing each pod in the current scale target (e.g. CPU or memory).  Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the "pods" source.
  resource:io_k8s_api_autoscaling_v2beta2_ResourceMetricStatusInput
  # type is the type of metric source.  It will be one of "Object", "Pods" or "Resource", each corresponds to a matching field in the object.
  type:String
}
# MetricStatus describes the last-read state of a single metric.
type io_k8s_api_autoscaling_v2beta2_MetricStatusResult {
  # ExternalMetricStatus indicates the current value of a global metric not associated with any Kubernetes object.
  external:io_k8s_api_autoscaling_v2beta2_ExternalMetricStatusResult
  # ObjectMetricStatus indicates the current value of a metric describing a kubernetes object (for example, hits-per-second on an Ingress object).
  object:io_k8s_api_autoscaling_v2beta2_ObjectMetricStatusResult
  # PodsMetricStatus indicates the current value of a metric describing each pod in the current scale target (for example, transactions-processed-per-second).
  pods:io_k8s_api_autoscaling_v2beta2_PodsMetricStatusResult
  # ResourceMetricStatus indicates the current value of a resource metric known to Kubernetes, as specified in requests and limits, describing each pod in the current scale target (e.g. CPU or memory).  Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the "pods" source.
  resource:io_k8s_api_autoscaling_v2beta2_ResourceMetricStatusResult
  # type is the type of metric source.  It will be one of "Object", "Pods" or "Resource", each corresponds to a matching field in the object.
  type:String
}
# MetricTarget defines the target value, average value, or average utilization of a specific metric
input io_k8s_api_autoscaling_v2beta2_MetricTargetInput {
  # averageUtilization is the target value of the average of the resource metric across all relevant pods, represented as a percentage of the requested value of the resource for the pods. Currently only valid for Resource metric source type
  averageUtilization:Int
  # Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.
  # The serialization format is:
  # <quantity>        ::= <signedNumber><suffix>
  #   (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
  # <digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
  #   (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
  # <decimalSI>       ::= m | "" | k | M | G | T | P | E
  #   (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
  # <decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>
  # No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.
  # When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.
  # Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
  #   a. No precision is lost
  #   b. No fractional digits will be emitted
  #   c. The exponent (or suffix) is as large as possible.
  # The sign will be omitted unless the number is negative.
  # Examples:
  #   1.5 will be serialized as "1500m"
  #   1.5Gi will be serialized as "1536Mi"
  # Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.
  # Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)
  # This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
  averageValue:String
  # type represents whether the metric type is Utilization, Value, or AverageValue
  type:String
  # Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.
  # The serialization format is:
  # <quantity>        ::= <signedNumber><suffix>
  #   (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
  # <digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
  #   (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
  # <decimalSI>       ::= m | "" | k | M | G | T | P | E
  #   (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
  # <decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>
  # No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.
  # When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.
  # Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
  #   a. No precision is lost
  #   b. No fractional digits will be emitted
  #   c. The exponent (or suffix) is as large as possible.
  # The sign will be omitted unless the number is negative.
  # Examples:
  #   1.5 will be serialized as "1500m"
  #   1.5Gi will be serialized as "1536Mi"
  # Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.
  # Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)
  # This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
  value:String
}
# MetricTarget defines the target value, average value, or average utilization of a specific metric
type io_k8s_api_autoscaling_v2beta2_MetricTargetResult {
  # averageUtilization is the target value of the average of the resource metric across all relevant pods, represented as a percentage of the requested value of the resource for the pods. Currently only valid for Resource metric source type
  averageUtilization:Int
  # Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.
  # The serialization format is:
  # <quantity>        ::= <signedNumber><suffix>
  #   (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
  # <digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
  #   (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
  # <decimalSI>       ::= m | "" | k | M | G | T | P | E
  #   (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
  # <decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>
  # No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.
  # When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.
  # Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
  #   a. No precision is lost
  #   b. No fractional digits will be emitted
  #   c. The exponent (or suffix) is as large as possible.
  # The sign will be omitted unless the number is negative.
  # Examples:
  #   1.5 will be serialized as "1500m"
  #   1.5Gi will be serialized as "1536Mi"
  # Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.
  # Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)
  # This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
  averageValue:String
  # type represents whether the metric type is Utilization, Value, or AverageValue
  type:String
  # Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.
  # The serialization format is:
  # <quantity>        ::= <signedNumber><suffix>
  #   (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
  # <digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
  #   (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
  # <decimalSI>       ::= m | "" | k | M | G | T | P | E
  #   (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
  # <decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>
  # No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.
  # When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.
  # Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
  #   a. No precision is lost
  #   b. No fractional digits will be emitted
  #   c. The exponent (or suffix) is as large as possible.
  # The sign will be omitted unless the number is negative.
  # Examples:
  #   1.5 will be serialized as "1500m"
  #   1.5Gi will be serialized as "1536Mi"
  # Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.
  # Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)
  # This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
  value:String
}
# MetricValueStatus holds the current value for a metric
input io_k8s_api_autoscaling_v2beta2_MetricValueStatusInput {
  # Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.
  # The serialization format is:
  # <quantity>        ::= <signedNumber><suffix>
  #   (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
  # <digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
  #   (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
  # <decimalSI>       ::= m | "" | k | M | G | T | P | E
  #   (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
  # <decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>
  # No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.
  # When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.
  # Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
  #   a. No precision is lost
  #   b. No fractional digits will be emitted
  #   c. The exponent (or suffix) is as large as possible.
  # The sign will be omitted unless the number is negative.
  # Examples:
  #   1.5 will be serialized as "1500m"
  #   1.5Gi will be serialized as "1536Mi"
  # Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.
  # Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)
  # This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
  averageValue:String
  # Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.
  # The serialization format is:
  # <quantity>        ::= <signedNumber><suffix>
  #   (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
  # <digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
  #   (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
  # <decimalSI>       ::= m | "" | k | M | G | T | P | E
  #   (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
  # <decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>
  # No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.
  # When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.
  # Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
  #   a. No precision is lost
  #   b. No fractional digits will be emitted
  #   c. The exponent (or suffix) is as large as possible.
  # The sign will be omitted unless the number is negative.
  # Examples:
  #   1.5 will be serialized as "1500m"
  #   1.5Gi will be serialized as "1536Mi"
  # Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.
  # Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)
  # This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
  value:String
  # currentAverageUtilization is the current value of the average of the resource metric across all relevant pods, represented as a percentage of the requested value of the resource for the pods.
  averageUtilization:Int
}
# MetricValueStatus holds the current value for a metric
type io_k8s_api_autoscaling_v2beta2_MetricValueStatusResult {
  # currentAverageUtilization is the current value of the average of the resource metric across all relevant pods, represented as a percentage of the requested value of the resource for the pods.
  averageUtilization:Int
  # Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.
  # The serialization format is:
  # <quantity>        ::= <signedNumber><suffix>
  #   (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
  # <digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
  #   (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
  # <decimalSI>       ::= m | "" | k | M | G | T | P | E
  #   (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
  # <decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>
  # No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.
  # When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.
  # Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
  #   a. No precision is lost
  #   b. No fractional digits will be emitted
  #   c. The exponent (or suffix) is as large as possible.
  # The sign will be omitted unless the number is negative.
  # Examples:
  #   1.5 will be serialized as "1500m"
  #   1.5Gi will be serialized as "1536Mi"
  # Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.
  # Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)
  # This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
  averageValue:String
  # Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.
  # The serialization format is:
  # <quantity>        ::= <signedNumber><suffix>
  #   (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
  # <digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
  #   (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
  # <decimalSI>       ::= m | "" | k | M | G | T | P | E
  #   (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
  # <decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>
  # No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.
  # When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.
  # Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
  #   a. No precision is lost
  #   b. No fractional digits will be emitted
  #   c. The exponent (or suffix) is as large as possible.
  # The sign will be omitted unless the number is negative.
  # Examples:
  #   1.5 will be serialized as "1500m"
  #   1.5Gi will be serialized as "1536Mi"
  # Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.
  # Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)
  # This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
  value:String
}
# ObjectMetricSource indicates how to scale on a metric describing a kubernetes object (for example, hits-per-second on an Ingress object).
input io_k8s_api_autoscaling_v2beta2_ObjectMetricSourceInput {
  # CrossVersionObjectReference contains enough information to let you identify the referred resource.
  describedObject:io_k8s_api_autoscaling_v2beta2_CrossVersionObjectReferenceInput
  # MetricIdentifier defines the name and optionally selector for a metric
  metric:io_k8s_api_autoscaling_v2beta2_MetricIdentifierInput
  # MetricTarget defines the target value, average value, or average utilization of a specific metric
  target:io_k8s_api_autoscaling_v2beta2_MetricTargetInput
}
# ObjectMetricSource indicates how to scale on a metric describing a kubernetes object (for example, hits-per-second on an Ingress object).
type io_k8s_api_autoscaling_v2beta2_ObjectMetricSourceResult {
  # CrossVersionObjectReference contains enough information to let you identify the referred resource.
  describedObject:io_k8s_api_autoscaling_v2beta2_CrossVersionObjectReferenceResult
  # MetricIdentifier defines the name and optionally selector for a metric
  metric:io_k8s_api_autoscaling_v2beta2_MetricIdentifierResult
  # MetricTarget defines the target value, average value, or average utilization of a specific metric
  target:io_k8s_api_autoscaling_v2beta2_MetricTargetResult
}
# ObjectMetricStatus indicates the current value of a metric describing a kubernetes object (for example, hits-per-second on an Ingress object).
input io_k8s_api_autoscaling_v2beta2_ObjectMetricStatusInput {
  # MetricIdentifier defines the name and optionally selector for a metric
  metric:io_k8s_api_autoscaling_v2beta2_MetricIdentifierInput
  # MetricValueStatus holds the current value for a metric
  current:io_k8s_api_autoscaling_v2beta2_MetricValueStatusInput
  # CrossVersionObjectReference contains enough information to let you identify the referred resource.
  describedObject:io_k8s_api_autoscaling_v2beta2_CrossVersionObjectReferenceInput
}
# ObjectMetricStatus indicates the current value of a metric describing a kubernetes object (for example, hits-per-second on an Ingress object).
type io_k8s_api_autoscaling_v2beta2_ObjectMetricStatusResult {
  # MetricValueStatus holds the current value for a metric
  current:io_k8s_api_autoscaling_v2beta2_MetricValueStatusResult
  # CrossVersionObjectReference contains enough information to let you identify the referred resource.
  describedObject:io_k8s_api_autoscaling_v2beta2_CrossVersionObjectReferenceResult
  # MetricIdentifier defines the name and optionally selector for a metric
  metric:io_k8s_api_autoscaling_v2beta2_MetricIdentifierResult
}
# PodsMetricSource indicates how to scale on a metric describing each pod in the current scale target (for example, transactions-processed-per-second). The values will be averaged together before being compared to the target value.
input io_k8s_api_autoscaling_v2beta2_PodsMetricSourceInput {
  # MetricIdentifier defines the name and optionally selector for a metric
  metric:io_k8s_api_autoscaling_v2beta2_MetricIdentifierInput
  # MetricTarget defines the target value, average value, or average utilization of a specific metric
  target:io_k8s_api_autoscaling_v2beta2_MetricTargetInput
}
# PodsMetricSource indicates how to scale on a metric describing each pod in the current scale target (for example, transactions-processed-per-second). The values will be averaged together before being compared to the target value.
type io_k8s_api_autoscaling_v2beta2_PodsMetricSourceResult {
  # MetricIdentifier defines the name and optionally selector for a metric
  metric:io_k8s_api_autoscaling_v2beta2_MetricIdentifierResult
  # MetricTarget defines the target value, average value, or average utilization of a specific metric
  target:io_k8s_api_autoscaling_v2beta2_MetricTargetResult
}
# PodsMetricStatus indicates the current value of a metric describing each pod in the current scale target (for example, transactions-processed-per-second).
input io_k8s_api_autoscaling_v2beta2_PodsMetricStatusInput {
  # MetricValueStatus holds the current value for a metric
  current:io_k8s_api_autoscaling_v2beta2_MetricValueStatusInput
  # MetricIdentifier defines the name and optionally selector for a metric
  metric:io_k8s_api_autoscaling_v2beta2_MetricIdentifierInput
}
# PodsMetricStatus indicates the current value of a metric describing each pod in the current scale target (for example, transactions-processed-per-second).
type io_k8s_api_autoscaling_v2beta2_PodsMetricStatusResult {
  # MetricValueStatus holds the current value for a metric
  current:io_k8s_api_autoscaling_v2beta2_MetricValueStatusResult
  # MetricIdentifier defines the name and optionally selector for a metric
  metric:io_k8s_api_autoscaling_v2beta2_MetricIdentifierResult
}
# ResourceMetricSource indicates how to scale on a resource metric known to Kubernetes, as specified in requests and limits, describing each pod in the current scale target (e.g. CPU or memory).  The values will be averaged together before being compared to the target.  Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the "pods" source.  Only one "target" type should be set.
input io_k8s_api_autoscaling_v2beta2_ResourceMetricSourceInput {
  # name is the name of the resource in question.
  name:String
  # MetricTarget defines the target value, average value, or average utilization of a specific metric
  target:io_k8s_api_autoscaling_v2beta2_MetricTargetInput
}
# ResourceMetricSource indicates how to scale on a resource metric known to Kubernetes, as specified in requests and limits, describing each pod in the current scale target (e.g. CPU or memory).  The values will be averaged together before being compared to the target.  Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the "pods" source.  Only one "target" type should be set.
type io_k8s_api_autoscaling_v2beta2_ResourceMetricSourceResult {
  # name is the name of the resource in question.
  name:String
  # MetricTarget defines the target value, average value, or average utilization of a specific metric
  target:io_k8s_api_autoscaling_v2beta2_MetricTargetResult
}
# ResourceMetricStatus indicates the current value of a resource metric known to Kubernetes, as specified in requests and limits, describing each pod in the current scale target (e.g. CPU or memory).  Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the "pods" source.
input io_k8s_api_autoscaling_v2beta2_ResourceMetricStatusInput {
  # MetricValueStatus holds the current value for a metric
  current:io_k8s_api_autoscaling_v2beta2_MetricValueStatusInput
  # Name is the name of the resource in question.
  name:String
}
# ResourceMetricStatus indicates the current value of a resource metric known to Kubernetes, as specified in requests and limits, describing each pod in the current scale target (e.g. CPU or memory).  Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the "pods" source.
type io_k8s_api_autoscaling_v2beta2_ResourceMetricStatusResult {
  # MetricValueStatus holds the current value for a metric
  current:io_k8s_api_autoscaling_v2beta2_MetricValueStatusResult
  # Name is the name of the resource in question.
  name:String
}
# JobCondition describes current state of a job.
input io_k8s_api_batch_v1_JobConditionInput {
  # Status of the condition, one of True, False, Unknown.
  status:String
  # Type of job condition, Complete or Failed.
  type:String
  # Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
  lastProbeTime:String
  # Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
  lastTransitionTime:String
  # Human readable message indicating details about last transition.
  message:String
  # (brief) reason for the condition's last transition.
  reason:String
}
# JobCondition describes current state of a job.
type io_k8s_api_batch_v1_JobConditionResult {
  # Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
  lastProbeTime:String
  # Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
  lastTransitionTime:String
  # Human readable message indicating details about last transition.
  message:String
  # (brief) reason for the condition's last transition.
  reason:String
  # Status of the condition, one of True, False, Unknown.
  status:String
  # Type of job condition, Complete or Failed.
  type:String
}
# Job represents the configuration of a single job.
input io_k8s_api_batch_v1_JobInput {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  # JobSpec describes how the job execution will look like.
  spec:io_k8s_api_batch_v1_JobSpecInput
  # JobStatus represents the current state of a Job.
  status:io_k8s_api_batch_v1_JobStatusInput
}
# JobList is a collection of jobs.
type io_k8s_api_batch_v1_JobListResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # items is the list of Jobs.
  items:[io_k8s_api_batch_v1_JobResult]
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
# Job represents the configuration of a single job.
type io_k8s_api_batch_v1_JobResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  # JobSpec describes how the job execution will look like.
  spec:io_k8s_api_batch_v1_JobSpecResult
  # JobStatus represents the current state of a Job.
  status:io_k8s_api_batch_v1_JobStatusResult
}
# JobSpec describes how the job execution will look like.
input io_k8s_api_batch_v1_JobSpecInput {
  # A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
  selector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorInput
  # PodTemplateSpec describes the data a pod should have when created from a template
  template:io_k8s_api_core_v1_PodTemplateSpecInput
  # ttlSecondsAfterFinished limits the lifetime of a Job that has finished execution (either Complete or Failed). If this field is set, ttlSecondsAfterFinished after the Job finishes, it is eligible to be automatically deleted. When the Job is being deleted, its lifecycle guarantees (e.g. finalizers) will be honored. If this field is unset, the Job won't be automatically deleted. If this field is set to zero, the Job becomes eligible to be deleted immediately after it finishes. This field is alpha-level and is only honored by servers that enable the TTLAfterFinished feature.
  ttlSecondsAfterFinished:Int
  # Specifies the duration in seconds relative to the startTime that the job may be active before the system tries to terminate it; value must be positive integer
  activeDeadlineSeconds:Int
  # Specifies the number of retries before marking this job failed. Defaults to 6
  backoffLimit:Int
  # Specifies the desired number of successfully finished pods the job should be run with.  Setting to nil means that the success of any pod signals the success of all pods, and allows parallelism to have any positive value.  Setting to 1 means that parallelism is limited to 1 and the success of that pod signals the success of the job. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/
  completions:Int
  # manualSelector controls generation of pod labels and pod selectors. Leave `manualSelector` unset unless you are certain what you are doing. When false or unset, the system pick labels unique to this job and appends those labels to the pod template.  When true, the user is responsible for picking unique labels and specifying the selector.  Failure to pick a unique label may cause this and other jobs to not function correctly.  However, You may see `manualSelector=true` in jobs that were created with the old `extensions/v1beta1` API. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/#specifying-your-own-pod-selector
  manualSelector:Boolean
  # Specifies the maximum desired number of pods the job should run at any given time. The actual number of pods running in steady state will be less than this number when ((.spec.completions - .status.successful) < .spec.parallelism), i.e. when the work left to do is less than max parallelism. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/
  parallelism:Int
}
# JobSpec describes how the job execution will look like.
type io_k8s_api_batch_v1_JobSpecResult {
  # Specifies the duration in seconds relative to the startTime that the job may be active before the system tries to terminate it; value must be positive integer
  activeDeadlineSeconds:Int
  # Specifies the number of retries before marking this job failed. Defaults to 6
  backoffLimit:Int
  # Specifies the desired number of successfully finished pods the job should be run with.  Setting to nil means that the success of any pod signals the success of all pods, and allows parallelism to have any positive value.  Setting to 1 means that parallelism is limited to 1 and the success of that pod signals the success of the job. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/
  completions:Int
  # manualSelector controls generation of pod labels and pod selectors. Leave `manualSelector` unset unless you are certain what you are doing. When false or unset, the system pick labels unique to this job and appends those labels to the pod template.  When true, the user is responsible for picking unique labels and specifying the selector.  Failure to pick a unique label may cause this and other jobs to not function correctly.  However, You may see `manualSelector=true` in jobs that were created with the old `extensions/v1beta1` API. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/#specifying-your-own-pod-selector
  manualSelector:Boolean
  # Specifies the maximum desired number of pods the job should run at any given time. The actual number of pods running in steady state will be less than this number when ((.spec.completions - .status.successful) < .spec.parallelism), i.e. when the work left to do is less than max parallelism. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/
  parallelism:Int
  # A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
  selector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorResult
  # PodTemplateSpec describes the data a pod should have when created from a template
  template:io_k8s_api_core_v1_PodTemplateSpecResult
  # ttlSecondsAfterFinished limits the lifetime of a Job that has finished execution (either Complete or Failed). If this field is set, ttlSecondsAfterFinished after the Job finishes, it is eligible to be automatically deleted. When the Job is being deleted, its lifecycle guarantees (e.g. finalizers) will be honored. If this field is unset, the Job won't be automatically deleted. If this field is set to zero, the Job becomes eligible to be deleted immediately after it finishes. This field is alpha-level and is only honored by servers that enable the TTLAfterFinished feature.
  ttlSecondsAfterFinished:Int
}
# JobStatus represents the current state of a Job.
input io_k8s_api_batch_v1_JobStatusInput {
  # The number of pods which reached phase Failed.
  failed:Int
  # Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
  startTime:String
  # The number of pods which reached phase Succeeded.
  succeeded:Int
  # The number of actively running pods.
  active:Int
  # Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
  completionTime:String
  # The latest available observations of an object's current state. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/
  conditions:[io_k8s_api_batch_v1_JobConditionInput]
}
# JobStatus represents the current state of a Job.
type io_k8s_api_batch_v1_JobStatusResult {
  # The number of actively running pods.
  active:Int
  # Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
  completionTime:String
  # The latest available observations of an object's current state. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/
  conditions:[io_k8s_api_batch_v1_JobConditionResult]
  # The number of pods which reached phase Failed.
  failed:Int
  # Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
  startTime:String
  # The number of pods which reached phase Succeeded.
  succeeded:Int
}
# CronJob represents the configuration of a single cron job.
input io_k8s_api_batch_v1beta1_CronJobInput {
  # CronJobStatus represents the current state of a cron job.
  status:io_k8s_api_batch_v1beta1_CronJobStatusInput
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  # CronJobSpec describes how the job execution will look like and when it will actually run.
  spec:io_k8s_api_batch_v1beta1_CronJobSpecInput
}
# CronJobList is a collection of cron jobs.
type io_k8s_api_batch_v1beta1_CronJobListResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # items is the list of CronJobs.
  items:[io_k8s_api_batch_v1beta1_CronJobResult]
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
# CronJob represents the configuration of a single cron job.
type io_k8s_api_batch_v1beta1_CronJobResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  # CronJobSpec describes how the job execution will look like and when it will actually run.
  spec:io_k8s_api_batch_v1beta1_CronJobSpecResult
  # CronJobStatus represents the current state of a cron job.
  status:io_k8s_api_batch_v1beta1_CronJobStatusResult
}
# CronJobSpec describes how the job execution will look like and when it will actually run.
input io_k8s_api_batch_v1beta1_CronJobSpecInput {
  # The schedule in Cron format, see https://en.wikipedia.org/wiki/Cron.
  schedule:String
  # Optional deadline in seconds for starting the job if it misses scheduled time for any reason.  Missed jobs executions will be counted as failed ones.
  startingDeadlineSeconds:Int
  # The number of successful finished jobs to retain. This is a pointer to distinguish between explicit zero and not specified. Defaults to 3.
  successfulJobsHistoryLimit:Int
  # This flag tells the controller to suspend subsequent executions, it does not apply to already started executions.  Defaults to false.
  suspend:Boolean
  # Specifies how to treat concurrent executions of a Job. Valid values are: - "Allow" (default): allows CronJobs to run concurrently; - "Forbid": forbids concurrent runs, skipping next run if previous run hasn't finished yet; - "Replace": cancels currently running job and replaces it with a new one
  concurrencyPolicy:String
  # The number of failed finished jobs to retain. This is a pointer to distinguish between explicit zero and not specified. Defaults to 1.
  failedJobsHistoryLimit:Int
  # JobTemplateSpec describes the data a Job should have when created from a template
  jobTemplate:io_k8s_api_batch_v1beta1_JobTemplateSpecInput
}
# CronJobSpec describes how the job execution will look like and when it will actually run.
type io_k8s_api_batch_v1beta1_CronJobSpecResult {
  # Specifies how to treat concurrent executions of a Job. Valid values are: - "Allow" (default): allows CronJobs to run concurrently; - "Forbid": forbids concurrent runs, skipping next run if previous run hasn't finished yet; - "Replace": cancels currently running job and replaces it with a new one
  concurrencyPolicy:String
  # The number of failed finished jobs to retain. This is a pointer to distinguish between explicit zero and not specified. Defaults to 1.
  failedJobsHistoryLimit:Int
  # JobTemplateSpec describes the data a Job should have when created from a template
  jobTemplate:io_k8s_api_batch_v1beta1_JobTemplateSpecResult
  # The schedule in Cron format, see https://en.wikipedia.org/wiki/Cron.
  schedule:String
  # Optional deadline in seconds for starting the job if it misses scheduled time for any reason.  Missed jobs executions will be counted as failed ones.
  startingDeadlineSeconds:Int
  # The number of successful finished jobs to retain. This is a pointer to distinguish between explicit zero and not specified. Defaults to 3.
  successfulJobsHistoryLimit:Int
  # This flag tells the controller to suspend subsequent executions, it does not apply to already started executions.  Defaults to false.
  suspend:Boolean
}
# CronJobStatus represents the current state of a cron job.
input io_k8s_api_batch_v1beta1_CronJobStatusInput {
  # Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
  lastScheduleTime:String
  # A list of pointers to currently running jobs.
  active:[io_k8s_api_core_v1_ObjectReferenceInput]
}
# CronJobStatus represents the current state of a cron job.
type io_k8s_api_batch_v1beta1_CronJobStatusResult {
  # A list of pointers to currently running jobs.
  active:[io_k8s_api_core_v1_ObjectReferenceResult]
  # Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
  lastScheduleTime:String
}
# JobTemplateSpec describes the data a Job should have when created from a template
input io_k8s_api_batch_v1beta1_JobTemplateSpecInput {
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  # JobSpec describes how the job execution will look like.
  spec:io_k8s_api_batch_v1_JobSpecInput
}
# JobTemplateSpec describes the data a Job should have when created from a template
type io_k8s_api_batch_v1beta1_JobTemplateSpecResult {
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  # JobSpec describes how the job execution will look like.
  spec:io_k8s_api_batch_v1_JobSpecResult
}
input io_k8s_api_certificates_v1beta1_CertificateSigningRequestConditionInput {
  # request approval state, currently Approved or Denied.
  type:String
  # Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
  lastUpdateTime:String
  # human readable message with details about the request state
  message:String
  # brief reason for the request state
  reason:String
}
type io_k8s_api_certificates_v1beta1_CertificateSigningRequestConditionResult {
  # Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
  lastUpdateTime:String
  # human readable message with details about the request state
  message:String
  # brief reason for the request state
  reason:String
  # request approval state, currently Approved or Denied.
  type:String
}
# Describes a certificate signing request
input io_k8s_api_certificates_v1beta1_CertificateSigningRequestInput {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  # This information is immutable after the request is created. Only the Request and Usages fields can be set on creation, other fields are derived by Kubernetes and cannot be modified by users.
  spec:io_k8s_api_certificates_v1beta1_CertificateSigningRequestSpecInput
  status:io_k8s_api_certificates_v1beta1_CertificateSigningRequestStatusInput
}
type io_k8s_api_certificates_v1beta1_CertificateSigningRequestListResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  items:[io_k8s_api_certificates_v1beta1_CertificateSigningRequestResult]
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
# Describes a certificate signing request
type io_k8s_api_certificates_v1beta1_CertificateSigningRequestResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  # This information is immutable after the request is created. Only the Request and Usages fields can be set on creation, other fields are derived by Kubernetes and cannot be modified by users.
  spec:io_k8s_api_certificates_v1beta1_CertificateSigningRequestSpecResult
  status:io_k8s_api_certificates_v1beta1_CertificateSigningRequestStatusResult
}
# This information is immutable after the request is created. Only the Request and Usages fields can be set on creation, other fields are derived by Kubernetes and cannot be modified by users.
input io_k8s_api_certificates_v1beta1_CertificateSigningRequestSpecInput {
  # Group information about the requesting user. See user.Info interface for details.
  groups:[String]
  # Base64-encoded PKCS#10 CSR data
  request:String
  # UID information about the requesting user. See user.Info interface for details.
  uid:String
  # allowedUsages specifies a set of usage contexts the key will be valid for. See: https://tools.ietf.org/html/rfc5280#section-4.2.1.3
  #      https://tools.ietf.org/html/rfc5280#section-4.2.1.12
  usages:[String]
  # Information about the requesting user. See user.Info interface for details.
  username:String
}
# This information is immutable after the request is created. Only the Request and Usages fields can be set on creation, other fields are derived by Kubernetes and cannot be modified by users.
type io_k8s_api_certificates_v1beta1_CertificateSigningRequestSpecResult {
  # Group information about the requesting user. See user.Info interface for details.
  groups:[String]
  # Base64-encoded PKCS#10 CSR data
  request:String
  # UID information about the requesting user. See user.Info interface for details.
  uid:String
  # allowedUsages specifies a set of usage contexts the key will be valid for. See: https://tools.ietf.org/html/rfc5280#section-4.2.1.3
  #      https://tools.ietf.org/html/rfc5280#section-4.2.1.12
  usages:[String]
  # Information about the requesting user. See user.Info interface for details.
  username:String
}
input io_k8s_api_certificates_v1beta1_CertificateSigningRequestStatusInput {
  # If request was approved, the controller will place the issued certificate here.
  certificate:String
  # Conditions applied to the request, such as approval or denial.
  conditions:[io_k8s_api_certificates_v1beta1_CertificateSigningRequestConditionInput]
}
type io_k8s_api_certificates_v1beta1_CertificateSigningRequestStatusResult {
  # If request was approved, the controller will place the issued certificate here.
  certificate:String
  # Conditions applied to the request, such as approval or denial.
  conditions:[io_k8s_api_certificates_v1beta1_CertificateSigningRequestConditionResult]
}
# Lease defines a lease concept.
input io_k8s_api_coordination_v1_LeaseInput {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  # LeaseSpec is a specification of a Lease.
  spec:io_k8s_api_coordination_v1_LeaseSpecInput
}
# LeaseList is a list of Lease objects.
type io_k8s_api_coordination_v1_LeaseListResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Items is a list of schema objects.
  items:[io_k8s_api_coordination_v1_LeaseResult]
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
# Lease defines a lease concept.
type io_k8s_api_coordination_v1_LeaseResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  # LeaseSpec is a specification of a Lease.
  spec:io_k8s_api_coordination_v1_LeaseSpecResult
}
# LeaseSpec is a specification of a Lease.
input io_k8s_api_coordination_v1_LeaseSpecInput {
  # MicroTime is version of Time with microsecond level precision.
  acquireTime:String
  # holderIdentity contains the identity of the holder of a current lease.
  holderIdentity:String
  # leaseDurationSeconds is a duration that candidates for a lease need to wait to force acquire it. This is measure against time of last observed RenewTime.
  leaseDurationSeconds:Int
  # leaseTransitions is the number of transitions of a lease between holders.
  leaseTransitions:Int
  # MicroTime is version of Time with microsecond level precision.
  renewTime:String
}
# LeaseSpec is a specification of a Lease.
type io_k8s_api_coordination_v1_LeaseSpecResult {
  # MicroTime is version of Time with microsecond level precision.
  acquireTime:String
  # holderIdentity contains the identity of the holder of a current lease.
  holderIdentity:String
  # leaseDurationSeconds is a duration that candidates for a lease need to wait to force acquire it. This is measure against time of last observed RenewTime.
  leaseDurationSeconds:Int
  # leaseTransitions is the number of transitions of a lease between holders.
  leaseTransitions:Int
  # MicroTime is version of Time with microsecond level precision.
  renewTime:String
}
# Lease defines a lease concept.
input io_k8s_api_coordination_v1beta1_LeaseInput {
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  # LeaseSpec is a specification of a Lease.
  spec:io_k8s_api_coordination_v1beta1_LeaseSpecInput
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
}
# LeaseList is a list of Lease objects.
type io_k8s_api_coordination_v1beta1_LeaseListResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Items is a list of schema objects.
  items:[io_k8s_api_coordination_v1beta1_LeaseResult]
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
# Lease defines a lease concept.
type io_k8s_api_coordination_v1beta1_LeaseResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  # LeaseSpec is a specification of a Lease.
  spec:io_k8s_api_coordination_v1beta1_LeaseSpecResult
}
# LeaseSpec is a specification of a Lease.
input io_k8s_api_coordination_v1beta1_LeaseSpecInput {
  # MicroTime is version of Time with microsecond level precision.
  renewTime:String
  # MicroTime is version of Time with microsecond level precision.
  acquireTime:String
  # holderIdentity contains the identity of the holder of a current lease.
  holderIdentity:String
  # leaseDurationSeconds is a duration that candidates for a lease need to wait to force acquire it. This is measure against time of last observed RenewTime.
  leaseDurationSeconds:Int
  # leaseTransitions is the number of transitions of a lease between holders.
  leaseTransitions:Int
}
# LeaseSpec is a specification of a Lease.
type io_k8s_api_coordination_v1beta1_LeaseSpecResult {
  # MicroTime is version of Time with microsecond level precision.
  acquireTime:String
  # holderIdentity contains the identity of the holder of a current lease.
  holderIdentity:String
  # leaseDurationSeconds is a duration that candidates for a lease need to wait to force acquire it. This is measure against time of last observed RenewTime.
  leaseDurationSeconds:Int
  # leaseTransitions is the number of transitions of a lease between holders.
  leaseTransitions:Int
  # MicroTime is version of Time with microsecond level precision.
  renewTime:String
}
# Represents a Persistent Disk resource in AWS.
# An AWS EBS disk must exist before mounting to a container. The disk must also be in the same AWS zone as the kubelet. An AWS EBS disk can only be mounted as read/write once. AWS EBS volumes support ownership management and SELinux relabeling.
input io_k8s_api_core_v1_AWSElasticBlockStoreVolumeSourceInput {
  # The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as "1". Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
  partition:Int
  # Specify "true" to force and set the ReadOnly property in VolumeMounts to "true". If omitted, the default is "false". More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
  readOnly:Boolean
  # Unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
  volumeID:String
  # Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
  fsType:String
}
# Represents a Persistent Disk resource in AWS.
# An AWS EBS disk must exist before mounting to a container. The disk must also be in the same AWS zone as the kubelet. An AWS EBS disk can only be mounted as read/write once. AWS EBS volumes support ownership management and SELinux relabeling.
type io_k8s_api_core_v1_AWSElasticBlockStoreVolumeSourceResult {
  # Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
  fsType:String
  # The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as "1". Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
  partition:Int
  # Specify "true" to force and set the ReadOnly property in VolumeMounts to "true". If omitted, the default is "false". More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
  readOnly:Boolean
  # Unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
  volumeID:String
}
# Affinity is a group of affinity scheduling rules.
input io_k8s_api_core_v1_AffinityInput {
  # Node affinity is a group of node affinity scheduling rules.
  nodeAffinity:io_k8s_api_core_v1_NodeAffinityInput
  # Pod affinity is a group of inter pod affinity scheduling rules.
  podAffinity:io_k8s_api_core_v1_PodAffinityInput
  # Pod anti affinity is a group of inter pod anti affinity scheduling rules.
  podAntiAffinity:io_k8s_api_core_v1_PodAntiAffinityInput
}
# Affinity is a group of affinity scheduling rules.
type io_k8s_api_core_v1_AffinityResult {
  # Node affinity is a group of node affinity scheduling rules.
  nodeAffinity:io_k8s_api_core_v1_NodeAffinityResult
  # Pod affinity is a group of inter pod affinity scheduling rules.
  podAffinity:io_k8s_api_core_v1_PodAffinityResult
  # Pod anti affinity is a group of inter pod anti affinity scheduling rules.
  podAntiAffinity:io_k8s_api_core_v1_PodAntiAffinityResult
}
# AttachedVolume describes a volume attached to a node
input io_k8s_api_core_v1_AttachedVolumeInput {
  # DevicePath represents the device path where the volume should be available
  devicePath:String
  # Name of the attached volume
  name:String
}
# AttachedVolume describes a volume attached to a node
type io_k8s_api_core_v1_AttachedVolumeResult {
  # DevicePath represents the device path where the volume should be available
  devicePath:String
  # Name of the attached volume
  name:String
}
# AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
input io_k8s_api_core_v1_AzureDiskVolumeSourceInput {
  # Host Caching mode: None, Read Only, Read Write.
  cachingMode:String
  # The Name of the data disk in the blob storage
  diskName:String
  # The URI the data disk in the blob storage
  diskURI:String
  # Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
  fsType:String
  # Expected values Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared
  kind:String
  # Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
  readOnly:Boolean
}
# AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
type io_k8s_api_core_v1_AzureDiskVolumeSourceResult {
  # Host Caching mode: None, Read Only, Read Write.
  cachingMode:String
  # The Name of the data disk in the blob storage
  diskName:String
  # The URI the data disk in the blob storage
  diskURI:String
  # Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
  fsType:String
  # Expected values Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared
  kind:String
  # Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
  readOnly:Boolean
}
# AzureFile represents an Azure File Service mount on the host and bind mount to the pod.
input io_k8s_api_core_v1_AzureFilePersistentVolumeSourceInput {
  # Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
  readOnly:Boolean
  # the name of secret that contains Azure Storage Account Name and Key
  secretName:String
  # the namespace of the secret that contains Azure Storage Account Name and Key default is the same as the Pod
  secretNamespace:String
  # Share Name
  shareName:String
}
# AzureFile represents an Azure File Service mount on the host and bind mount to the pod.
type io_k8s_api_core_v1_AzureFilePersistentVolumeSourceResult {
  # Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
  readOnly:Boolean
  # the name of secret that contains Azure Storage Account Name and Key
  secretName:String
  # the namespace of the secret that contains Azure Storage Account Name and Key default is the same as the Pod
  secretNamespace:String
  # Share Name
  shareName:String
}
# AzureFile represents an Azure File Service mount on the host and bind mount to the pod.
input io_k8s_api_core_v1_AzureFileVolumeSourceInput {
  # Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
  readOnly:Boolean
  # the name of secret that contains Azure Storage Account Name and Key
  secretName:String
  # Share Name
  shareName:String
}
# AzureFile represents an Azure File Service mount on the host and bind mount to the pod.
type io_k8s_api_core_v1_AzureFileVolumeSourceResult {
  # Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
  readOnly:Boolean
  # the name of secret that contains Azure Storage Account Name and Key
  secretName:String
  # Share Name
  shareName:String
}
# Binding ties one object to another; for example, a pod is bound to a node by a scheduler. Deprecated in 1.7, please use the bindings subresource of pods instead.
input io_k8s_api_core_v1_BindingInput {
  # ObjectReference contains enough information to let you inspect or modify the referred object.
  target:io_k8s_api_core_v1_ObjectReferenceInput
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
}
# Binding ties one object to another; for example, a pod is bound to a node by a scheduler. Deprecated in 1.7, please use the bindings subresource of pods instead.
type io_k8s_api_core_v1_BindingResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  # ObjectReference contains enough information to let you inspect or modify the referred object.
  target:io_k8s_api_core_v1_ObjectReferenceResult
}
# Represents storage that is managed by an external CSI volume driver (Beta feature)
input io_k8s_api_core_v1_CSIPersistentVolumeSourceInput {
  # SecretReference represents a Secret Reference. It has enough information to retrieve secret in any namespace
  controllerPublishSecretRef:io_k8s_api_core_v1_SecretReferenceInput
  # Driver is the name of the driver to use for this volume. Required.
  driver:String
  # SecretReference represents a Secret Reference. It has enough information to retrieve secret in any namespace
  nodePublishSecretRef:io_k8s_api_core_v1_SecretReferenceInput
  # SecretReference represents a Secret Reference. It has enough information to retrieve secret in any namespace
  nodeStageSecretRef:io_k8s_api_core_v1_SecretReferenceInput
  # SecretReference represents a Secret Reference. It has enough information to retrieve secret in any namespace
  controllerExpandSecretRef:io_k8s_api_core_v1_SecretReferenceInput
  # Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs".
  fsType:String
  # Optional: The value to pass to ControllerPublishVolumeRequest. Defaults to false (read/write).
  readOnly:Boolean
  # VolumeHandle is the unique volume name returned by the CSI volume plugin’s CreateVolume to refer to the volume on all subsequent calls. Required.
  volumeHandle:String
}
# Represents storage that is managed by an external CSI volume driver (Beta feature)
type io_k8s_api_core_v1_CSIPersistentVolumeSourceResult {
  # SecretReference represents a Secret Reference. It has enough information to retrieve secret in any namespace
  controllerExpandSecretRef:io_k8s_api_core_v1_SecretReferenceResult
  # SecretReference represents a Secret Reference. It has enough information to retrieve secret in any namespace
  controllerPublishSecretRef:io_k8s_api_core_v1_SecretReferenceResult
  # Driver is the name of the driver to use for this volume. Required.
  driver:String
  # Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs".
  fsType:String
  # SecretReference represents a Secret Reference. It has enough information to retrieve secret in any namespace
  nodePublishSecretRef:io_k8s_api_core_v1_SecretReferenceResult
  # SecretReference represents a Secret Reference. It has enough information to retrieve secret in any namespace
  nodeStageSecretRef:io_k8s_api_core_v1_SecretReferenceResult
  # Optional: The value to pass to ControllerPublishVolumeRequest. Defaults to false (read/write).
  readOnly:Boolean
  # VolumeHandle is the unique volume name returned by the CSI volume plugin’s CreateVolume to refer to the volume on all subsequent calls. Required.
  volumeHandle:String
}
# Represents a source location of a volume to mount, managed by an external CSI driver
input io_k8s_api_core_v1_CSIVolumeSourceInput {
  # Driver is the name of the CSI driver that handles this volume. Consult with your admin for the correct name as registered in the cluster.
  driver:String
  # Filesystem type to mount. Ex. "ext4", "xfs", "ntfs". If not provided, the empty value is passed to the associated CSI driver which will determine the default filesystem to apply.
  fsType:String
  # LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
  nodePublishSecretRef:io_k8s_api_core_v1_LocalObjectReferenceInput
  # Specifies a read-only configuration for the volume. Defaults to false (read/write).
  readOnly:Boolean
}
# Represents a source location of a volume to mount, managed by an external CSI driver
type io_k8s_api_core_v1_CSIVolumeSourceResult {
  # Driver is the name of the CSI driver that handles this volume. Consult with your admin for the correct name as registered in the cluster.
  driver:String
  # Filesystem type to mount. Ex. "ext4", "xfs", "ntfs". If not provided, the empty value is passed to the associated CSI driver which will determine the default filesystem to apply.
  fsType:String
  # LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
  nodePublishSecretRef:io_k8s_api_core_v1_LocalObjectReferenceResult
  # Specifies a read-only configuration for the volume. Defaults to false (read/write).
  readOnly:Boolean
}
# Adds and removes POSIX capabilities from running containers.
input io_k8s_api_core_v1_CapabilitiesInput {
  # Added capabilities
  add:[String]
  # Removed capabilities
  drop:[String]
}
# Adds and removes POSIX capabilities from running containers.
type io_k8s_api_core_v1_CapabilitiesResult {
  # Added capabilities
  add:[String]
  # Removed capabilities
  drop:[String]
}
# Represents a Ceph Filesystem mount that lasts the lifetime of a pod Cephfs volumes do not support ownership management or SELinux relabeling.
input io_k8s_api_core_v1_CephFSPersistentVolumeSourceInput {
  # Required: Monitors is a collection of Ceph monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
  monitors:[String]
  # Optional: Used as the mounted root, rather than the full Ceph tree, default is /
  path:String
  # Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
  readOnly:Boolean
  # Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
  secretFile:String
  # SecretReference represents a Secret Reference. It has enough information to retrieve secret in any namespace
  secretRef:io_k8s_api_core_v1_SecretReferenceInput
  # Optional: User is the rados user name, default is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
  user:String
}
# Represents a Ceph Filesystem mount that lasts the lifetime of a pod Cephfs volumes do not support ownership management or SELinux relabeling.
type io_k8s_api_core_v1_CephFSPersistentVolumeSourceResult {
  # Required: Monitors is a collection of Ceph monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
  monitors:[String]
  # Optional: Used as the mounted root, rather than the full Ceph tree, default is /
  path:String
  # Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
  readOnly:Boolean
  # Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
  secretFile:String
  # SecretReference represents a Secret Reference. It has enough information to retrieve secret in any namespace
  secretRef:io_k8s_api_core_v1_SecretReferenceResult
  # Optional: User is the rados user name, default is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
  user:String
}
# Represents a Ceph Filesystem mount that lasts the lifetime of a pod Cephfs volumes do not support ownership management or SELinux relabeling.
input io_k8s_api_core_v1_CephFSVolumeSourceInput {
  # Required: Monitors is a collection of Ceph monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
  monitors:[String]
  # Optional: Used as the mounted root, rather than the full Ceph tree, default is /
  path:String
  # Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
  readOnly:Boolean
  # Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
  secretFile:String
  # LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
  secretRef:io_k8s_api_core_v1_LocalObjectReferenceInput
  # Optional: User is the rados user name, default is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
  user:String
}
# Represents a Ceph Filesystem mount that lasts the lifetime of a pod Cephfs volumes do not support ownership management or SELinux relabeling.
type io_k8s_api_core_v1_CephFSVolumeSourceResult {
  # Required: Monitors is a collection of Ceph monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
  monitors:[String]
  # Optional: Used as the mounted root, rather than the full Ceph tree, default is /
  path:String
  # Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
  readOnly:Boolean
  # Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
  secretFile:String
  # LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
  secretRef:io_k8s_api_core_v1_LocalObjectReferenceResult
  # Optional: User is the rados user name, default is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
  user:String
}
# Represents a cinder volume resource in Openstack. A Cinder volume must exist before mounting to a container. The volume must also be in the same region as the kubelet. Cinder volumes support ownership management and SELinux relabeling.
input io_k8s_api_core_v1_CinderPersistentVolumeSourceInput {
  # Filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
  fsType:String
  # Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
  readOnly:Boolean
  # SecretReference represents a Secret Reference. It has enough information to retrieve secret in any namespace
  secretRef:io_k8s_api_core_v1_SecretReferenceInput
  # volume id used to identify the volume in cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
  volumeID:String
}
# Represents a cinder volume resource in Openstack. A Cinder volume must exist before mounting to a container. The volume must also be in the same region as the kubelet. Cinder volumes support ownership management and SELinux relabeling.
type io_k8s_api_core_v1_CinderPersistentVolumeSourceResult {
  # Filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
  fsType:String
  # Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
  readOnly:Boolean
  # SecretReference represents a Secret Reference. It has enough information to retrieve secret in any namespace
  secretRef:io_k8s_api_core_v1_SecretReferenceResult
  # volume id used to identify the volume in cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
  volumeID:String
}
# Represents a cinder volume resource in Openstack. A Cinder volume must exist before mounting to a container. The volume must also be in the same region as the kubelet. Cinder volumes support ownership management and SELinux relabeling.
input io_k8s_api_core_v1_CinderVolumeSourceInput {
  # LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
  secretRef:io_k8s_api_core_v1_LocalObjectReferenceInput
  # volume id used to identify the volume in cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
  volumeID:String
  # Filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
  fsType:String
  # Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
  readOnly:Boolean
}
# Represents a cinder volume resource in Openstack. A Cinder volume must exist before mounting to a container. The volume must also be in the same region as the kubelet. Cinder volumes support ownership management and SELinux relabeling.
type io_k8s_api_core_v1_CinderVolumeSourceResult {
  # Filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
  fsType:String
  # Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
  readOnly:Boolean
  # LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
  secretRef:io_k8s_api_core_v1_LocalObjectReferenceResult
  # volume id used to identify the volume in cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
  volumeID:String
}
# ClientIPConfig represents the configurations of Client IP based session affinity.
input io_k8s_api_core_v1_ClientIPConfigInput {
  # timeoutSeconds specifies the seconds of ClientIP type session sticky time. The value must be >0 && <=86400(for 1 day) if ServiceAffinity == "ClientIP". Default value is 10800(for 3 hours).
  timeoutSeconds:Int
}
# ClientIPConfig represents the configurations of Client IP based session affinity.
type io_k8s_api_core_v1_ClientIPConfigResult {
  # timeoutSeconds specifies the seconds of ClientIP type session sticky time. The value must be >0 && <=86400(for 1 day) if ServiceAffinity == "ClientIP". Default value is 10800(for 3 hours).
  timeoutSeconds:Int
}
# Information about the condition of a component.
type io_k8s_api_core_v1_ComponentConditionResult {
  # Condition error code for a component. For example, a health check error code.
  error:String
  # Message about the condition for a component. For example, information about a health check.
  message:String
  # Status of the condition for a component. Valid values for "Healthy": "True", "False", or "Unknown".
  status:String
  # Type of condition for a component. Valid value: "Healthy"
  type:String
}
# Status of all the conditions for the component as a list of ComponentStatus objects.
type io_k8s_api_core_v1_ComponentStatusListResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # List of ComponentStatus objects.
  items:[io_k8s_api_core_v1_ComponentStatusResult]
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
# ComponentStatus (and ComponentStatusList) holds the cluster validation info.
type io_k8s_api_core_v1_ComponentStatusResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # List of component conditions observed
  conditions:[io_k8s_api_core_v1_ComponentConditionResult]
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
}
# ConfigMapEnvSource selects a ConfigMap to populate the environment variables with.
# The contents of the target ConfigMap's Data field will represent the key-value pairs as environment variables.
input io_k8s_api_core_v1_ConfigMapEnvSourceInput {
  # Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
  name:String
  # Specify whether the ConfigMap must be defined
  optional:Boolean
}
# ConfigMapEnvSource selects a ConfigMap to populate the environment variables with.
# The contents of the target ConfigMap's Data field will represent the key-value pairs as environment variables.
type io_k8s_api_core_v1_ConfigMapEnvSourceResult {
  # Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
  name:String
  # Specify whether the ConfigMap must be defined
  optional:Boolean
}
# ConfigMap holds configuration data for pods to consume.
input io_k8s_api_core_v1_ConfigMapInput {
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
}
# Selects a key from a ConfigMap.
input io_k8s_api_core_v1_ConfigMapKeySelectorInput {
  # The key to select.
  key:String
  # Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
  name:String
  # Specify whether the ConfigMap or its key must be defined
  optional:Boolean
}
# Selects a key from a ConfigMap.
type io_k8s_api_core_v1_ConfigMapKeySelectorResult {
  # The key to select.
  key:String
  # Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
  name:String
  # Specify whether the ConfigMap or its key must be defined
  optional:Boolean
}
# ConfigMapList is a resource containing a list of ConfigMap objects.
type io_k8s_api_core_v1_ConfigMapListResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Items is the list of ConfigMaps.
  items:[io_k8s_api_core_v1_ConfigMapResult]
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
# ConfigMapNodeConfigSource contains the information to reference a ConfigMap as a config source for the Node.
input io_k8s_api_core_v1_ConfigMapNodeConfigSourceInput {
  # KubeletConfigKey declares which key of the referenced ConfigMap corresponds to the KubeletConfiguration structure This field is required in all cases.
  kubeletConfigKey:String
  # Name is the metadata.name of the referenced ConfigMap. This field is required in all cases.
  name:String
  # Namespace is the metadata.namespace of the referenced ConfigMap. This field is required in all cases.
  namespace:String
  # ResourceVersion is the metadata.ResourceVersion of the referenced ConfigMap. This field is forbidden in Node.Spec, and required in Node.Status.
  resourceVersion:String
  # UID is the metadata.UID of the referenced ConfigMap. This field is forbidden in Node.Spec, and required in Node.Status.
  uid:String
}
# ConfigMapNodeConfigSource contains the information to reference a ConfigMap as a config source for the Node.
type io_k8s_api_core_v1_ConfigMapNodeConfigSourceResult {
  # KubeletConfigKey declares which key of the referenced ConfigMap corresponds to the KubeletConfiguration structure This field is required in all cases.
  kubeletConfigKey:String
  # Name is the metadata.name of the referenced ConfigMap. This field is required in all cases.
  name:String
  # Namespace is the metadata.namespace of the referenced ConfigMap. This field is required in all cases.
  namespace:String
  # ResourceVersion is the metadata.ResourceVersion of the referenced ConfigMap. This field is forbidden in Node.Spec, and required in Node.Status.
  resourceVersion:String
  # UID is the metadata.UID of the referenced ConfigMap. This field is forbidden in Node.Spec, and required in Node.Status.
  uid:String
}
# Adapts a ConfigMap into a projected volume.
# The contents of the target ConfigMap's Data field will be presented in a projected volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. Note that this is identical to a configmap volume source without the default mode.
input io_k8s_api_core_v1_ConfigMapProjectionInput {
  # If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
  items:[io_k8s_api_core_v1_KeyToPathInput]
  # Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
  name:String
  # Specify whether the ConfigMap or its keys must be defined
  optional:Boolean
}
# Adapts a ConfigMap into a projected volume.
# The contents of the target ConfigMap's Data field will be presented in a projected volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. Note that this is identical to a configmap volume source without the default mode.
type io_k8s_api_core_v1_ConfigMapProjectionResult {
  # If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
  items:[io_k8s_api_core_v1_KeyToPathResult]
  # Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
  name:String
  # Specify whether the ConfigMap or its keys must be defined
  optional:Boolean
}
# ConfigMap holds configuration data for pods to consume.
type io_k8s_api_core_v1_ConfigMapResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
}
# Adapts a ConfigMap into a volume.
# The contents of the target ConfigMap's Data field will be presented in a volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. ConfigMap volumes support ownership management and SELinux relabeling.
input io_k8s_api_core_v1_ConfigMapVolumeSourceInput {
  # Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
  defaultMode:Int
  # If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
  items:[io_k8s_api_core_v1_KeyToPathInput]
  # Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
  name:String
  # Specify whether the ConfigMap or its keys must be defined
  optional:Boolean
}
# Adapts a ConfigMap into a volume.
# The contents of the target ConfigMap's Data field will be presented in a volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. ConfigMap volumes support ownership management and SELinux relabeling.
type io_k8s_api_core_v1_ConfigMapVolumeSourceResult {
  # Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
  defaultMode:Int
  # If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
  items:[io_k8s_api_core_v1_KeyToPathResult]
  # Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
  name:String
  # Specify whether the ConfigMap or its keys must be defined
  optional:Boolean
}
# Describe a container image
input io_k8s_api_core_v1_ContainerImageInput {
  # Names by which this image is known. e.g. ["k8s.gcr.io/hyperkube:v1.0.7", "dockerhub.io/google_containers/hyperkube:v1.0.7"]
  names:[String]
  # The size of the image in bytes.
  sizeBytes:Int
}
# Describe a container image
type io_k8s_api_core_v1_ContainerImageResult {
  # Names by which this image is known. e.g. ["k8s.gcr.io/hyperkube:v1.0.7", "dockerhub.io/google_containers/hyperkube:v1.0.7"]
  names:[String]
  # The size of the image in bytes.
  sizeBytes:Int
}
# A single application container that you want to run within a pod.
input io_k8s_api_core_v1_ContainerInput {
  # List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.
  envFrom:[io_k8s_api_core_v1_EnvFromSourceInput]
  # SecurityContext holds security configuration that will be applied to a container. Some fields are present in both SecurityContext and PodSecurityContext.  When both are set, the values in SecurityContext take precedence.
  securityContext:io_k8s_api_core_v1_SecurityContextInput
  # volumeDevices is the list of block devices to be used by the container. This is a beta feature.
  volumeDevices:[io_k8s_api_core_v1_VolumeDeviceInput]
  # Lifecycle describes actions that the management system should take in response to container lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted.
  lifecycle:io_k8s_api_core_v1_LifecycleInput
  # List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default "0.0.0.0" address inside a container will be accessible from the network. Cannot be updated.
  ports:[io_k8s_api_core_v1_ContainerPortInput]
  # Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
  readinessProbe:io_k8s_api_core_v1_ProbeInput
  # Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false
  stdinOnce:Boolean
  # Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.
  workingDir:String
  # Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.
  tty:Boolean
  # Pod volumes to mount into the container's filesystem. Cannot be updated.
  volumeMounts:[io_k8s_api_core_v1_VolumeMountInput]
  # Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
  args:[String]
  # Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
  command:[String]
  # Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
  livenessProbe:io_k8s_api_core_v1_ProbeInput
  # Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.
  name:String
  # Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
  startupProbe:io_k8s_api_core_v1_ProbeInput
  # Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.
  terminationMessagePath:String
  # List of environment variables to set in the container. Cannot be updated.
  env:[io_k8s_api_core_v1_EnvVarInput]
  # Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.
  image:String
  # Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
  imagePullPolicy:String
  # Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.
  stdin:Boolean
  # Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.
  terminationMessagePolicy:String
}
# ContainerPort represents a network port in a single container.
input io_k8s_api_core_v1_ContainerPortInput {
  # Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.
  hostPort:Int
  # If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.
  name:String
  # Protocol for port. Must be UDP, TCP, or SCTP. Defaults to "TCP".
  protocol:String
  # Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.
  containerPort:Int
  # What host IP to bind the external port to.
  hostIP:String
}
# ContainerPort represents a network port in a single container.
type io_k8s_api_core_v1_ContainerPortResult {
  # Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.
  containerPort:Int
  # What host IP to bind the external port to.
  hostIP:String
  # Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.
  hostPort:Int
  # If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.
  name:String
  # Protocol for port. Must be UDP, TCP, or SCTP. Defaults to "TCP".
  protocol:String
}
# A single application container that you want to run within a pod.
type io_k8s_api_core_v1_ContainerResult {
  # Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
  args:[String]
  # Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
  command:[String]
  # List of environment variables to set in the container. Cannot be updated.
  env:[io_k8s_api_core_v1_EnvVarResult]
  # List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.
  envFrom:[io_k8s_api_core_v1_EnvFromSourceResult]
  # Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.
  image:String
  # Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
  imagePullPolicy:String
  # Lifecycle describes actions that the management system should take in response to container lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted.
  lifecycle:io_k8s_api_core_v1_LifecycleResult
  # Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
  livenessProbe:io_k8s_api_core_v1_ProbeResult
  # Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.
  name:String
  # List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default "0.0.0.0" address inside a container will be accessible from the network. Cannot be updated.
  ports:[io_k8s_api_core_v1_ContainerPortResult]
  # Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
  readinessProbe:io_k8s_api_core_v1_ProbeResult
  # SecurityContext holds security configuration that will be applied to a container. Some fields are present in both SecurityContext and PodSecurityContext.  When both are set, the values in SecurityContext take precedence.
  securityContext:io_k8s_api_core_v1_SecurityContextResult
  # Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
  startupProbe:io_k8s_api_core_v1_ProbeResult
  # Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.
  stdin:Boolean
  # Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false
  stdinOnce:Boolean
  # Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.
  terminationMessagePath:String
  # Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.
  terminationMessagePolicy:String
  # Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.
  tty:Boolean
  # volumeDevices is the list of block devices to be used by the container. This is a beta feature.
  volumeDevices:[io_k8s_api_core_v1_VolumeDeviceResult]
  # Pod volumes to mount into the container's filesystem. Cannot be updated.
  volumeMounts:[io_k8s_api_core_v1_VolumeMountResult]
  # Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.
  workingDir:String
}
# ContainerState holds a possible state of container. Only one of its members may be specified. If none of them is specified, the default one is ContainerStateWaiting.
input io_k8s_api_core_v1_ContainerStateInput {
  # ContainerStateTerminated is a terminated state of a container.
  terminated:io_k8s_api_core_v1_ContainerStateTerminatedInput
  # ContainerStateWaiting is a waiting state of a container.
  waiting:io_k8s_api_core_v1_ContainerStateWaitingInput
  # ContainerStateRunning is a running state of a container.
  running:io_k8s_api_core_v1_ContainerStateRunningInput
}
# ContainerState holds a possible state of container. Only one of its members may be specified. If none of them is specified, the default one is ContainerStateWaiting.
type io_k8s_api_core_v1_ContainerStateResult {
  # ContainerStateRunning is a running state of a container.
  running:io_k8s_api_core_v1_ContainerStateRunningResult
  # ContainerStateTerminated is a terminated state of a container.
  terminated:io_k8s_api_core_v1_ContainerStateTerminatedResult
  # ContainerStateWaiting is a waiting state of a container.
  waiting:io_k8s_api_core_v1_ContainerStateWaitingResult
}
# ContainerStateRunning is a running state of a container.
input io_k8s_api_core_v1_ContainerStateRunningInput {
  # Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
  startedAt:String
}
# ContainerStateRunning is a running state of a container.
type io_k8s_api_core_v1_ContainerStateRunningResult {
  # Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
  startedAt:String
}
# ContainerStateTerminated is a terminated state of a container.
input io_k8s_api_core_v1_ContainerStateTerminatedInput {
  # Container's ID in the format 'docker://<container_id>'
  containerID:String
  # Exit status from the last termination of the container
  exitCode:Int
  # Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
  finishedAt:String
  # Message regarding the last termination of the container
  message:String
  # (brief) reason from the last termination of the container
  reason:String
  # Signal from the last termination of the container
  signal:Int
  # Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
  startedAt:String
}
# ContainerStateTerminated is a terminated state of a container.
type io_k8s_api_core_v1_ContainerStateTerminatedResult {
  # Container's ID in the format 'docker://<container_id>'
  containerID:String
  # Exit status from the last termination of the container
  exitCode:Int
  # Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
  finishedAt:String
  # Message regarding the last termination of the container
  message:String
  # (brief) reason from the last termination of the container
  reason:String
  # Signal from the last termination of the container
  signal:Int
  # Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
  startedAt:String
}
# ContainerStateWaiting is a waiting state of a container.
input io_k8s_api_core_v1_ContainerStateWaitingInput {
  # Message regarding why the container is not yet running.
  message:String
  # (brief) reason the container is not yet running.
  reason:String
}
# ContainerStateWaiting is a waiting state of a container.
type io_k8s_api_core_v1_ContainerStateWaitingResult {
  # Message regarding why the container is not yet running.
  message:String
  # (brief) reason the container is not yet running.
  reason:String
}
# ContainerStatus contains details for the current status of this container.
input io_k8s_api_core_v1_ContainerStatusInput {
  # Container's ID in the format 'docker://<container_id>'.
  containerID:String
  # The image the container is running. More info: https://kubernetes.io/docs/concepts/containers/images
  image:String
  # This must be a DNS_LABEL. Each container in a pod must have a unique name. Cannot be updated.
  name:String
  # The number of times the container has been restarted, currently based on the number of dead containers that have not yet been removed. Note that this is calculated from dead containers. But those containers are subject to garbage collection. This value will get capped at 5 by GC.
  restartCount:Int
  # ImageID of the container's image.
  imageID:String
  # ContainerState holds a possible state of container. Only one of its members may be specified. If none of them is specified, the default one is ContainerStateWaiting.
  lastState:io_k8s_api_core_v1_ContainerStateInput
  # Specifies whether the container has passed its readiness probe.
  ready:Boolean
  # Specifies whether the container has passed its startup probe. Initialized as false, becomes true after startupProbe is considered successful. Resets to false when the container is restarted, or if kubelet loses state temporarily. Is always true when no startupProbe is defined.
  started:Boolean
  # ContainerState holds a possible state of container. Only one of its members may be specified. If none of them is specified, the default one is ContainerStateWaiting.
  state:io_k8s_api_core_v1_ContainerStateInput
}
# ContainerStatus contains details for the current status of this container.
type io_k8s_api_core_v1_ContainerStatusResult {
  # Container's ID in the format 'docker://<container_id>'.
  containerID:String
  # The image the container is running. More info: https://kubernetes.io/docs/concepts/containers/images
  image:String
  # ImageID of the container's image.
  imageID:String
  # ContainerState holds a possible state of container. Only one of its members may be specified. If none of them is specified, the default one is ContainerStateWaiting.
  lastState:io_k8s_api_core_v1_ContainerStateResult
  # This must be a DNS_LABEL. Each container in a pod must have a unique name. Cannot be updated.
  name:String
  # Specifies whether the container has passed its readiness probe.
  ready:Boolean
  # The number of times the container has been restarted, currently based on the number of dead containers that have not yet been removed. Note that this is calculated from dead containers. But those containers are subject to garbage collection. This value will get capped at 5 by GC.
  restartCount:Int
  # Specifies whether the container has passed its startup probe. Initialized as false, becomes true after startupProbe is considered successful. Resets to false when the container is restarted, or if kubelet loses state temporarily. Is always true when no startupProbe is defined.
  started:Boolean
  # ContainerState holds a possible state of container. Only one of its members may be specified. If none of them is specified, the default one is ContainerStateWaiting.
  state:io_k8s_api_core_v1_ContainerStateResult
}
# DaemonEndpoint contains information about a single Daemon endpoint.
input io_k8s_api_core_v1_DaemonEndpointInput {
  # Port number of the given endpoint.
  Port:Int
}
# DaemonEndpoint contains information about a single Daemon endpoint.
type io_k8s_api_core_v1_DaemonEndpointResult {
  # Port number of the given endpoint.
  Port:Int
}
# Represents downward API info for projecting into a projected volume. Note that this is identical to a downwardAPI volume source without the default mode.
input io_k8s_api_core_v1_DownwardAPIProjectionInput {
  # Items is a list of DownwardAPIVolume file
  items:[io_k8s_api_core_v1_DownwardAPIVolumeFileInput]
}
# Represents downward API info for projecting into a projected volume. Note that this is identical to a downwardAPI volume source without the default mode.
type io_k8s_api_core_v1_DownwardAPIProjectionResult {
  # Items is a list of DownwardAPIVolume file
  items:[io_k8s_api_core_v1_DownwardAPIVolumeFileResult]
}
# DownwardAPIVolumeFile represents information to create the file containing the pod field
input io_k8s_api_core_v1_DownwardAPIVolumeFileInput {
  # Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
  mode:Int
  # Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
  path:String
  # ResourceFieldSelector represents container resources (cpu, memory) and their output format
  resourceFieldRef:io_k8s_api_core_v1_ResourceFieldSelectorInput
  # ObjectFieldSelector selects an APIVersioned field of an object.
  fieldRef:io_k8s_api_core_v1_ObjectFieldSelectorInput
}
# DownwardAPIVolumeFile represents information to create the file containing the pod field
type io_k8s_api_core_v1_DownwardAPIVolumeFileResult {
  # ObjectFieldSelector selects an APIVersioned field of an object.
  fieldRef:io_k8s_api_core_v1_ObjectFieldSelectorResult
  # Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
  mode:Int
  # Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
  path:String
  # ResourceFieldSelector represents container resources (cpu, memory) and their output format
  resourceFieldRef:io_k8s_api_core_v1_ResourceFieldSelectorResult
}
# DownwardAPIVolumeSource represents a volume containing downward API info. Downward API volumes support ownership management and SELinux relabeling.
input io_k8s_api_core_v1_DownwardAPIVolumeSourceInput {
  # Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
  defaultMode:Int
  # Items is a list of downward API volume file
  items:[io_k8s_api_core_v1_DownwardAPIVolumeFileInput]
}
# DownwardAPIVolumeSource represents a volume containing downward API info. Downward API volumes support ownership management and SELinux relabeling.
type io_k8s_api_core_v1_DownwardAPIVolumeSourceResult {
  # Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
  defaultMode:Int
  # Items is a list of downward API volume file
  items:[io_k8s_api_core_v1_DownwardAPIVolumeFileResult]
}
# Represents an empty directory for a pod. Empty directory volumes support ownership management and SELinux relabeling.
input io_k8s_api_core_v1_EmptyDirVolumeSourceInput {
  # What type of storage medium should back this directory. The default is "" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
  medium:String
  # Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.
  # The serialization format is:
  # <quantity>        ::= <signedNumber><suffix>
  #   (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
  # <digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
  #   (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
  # <decimalSI>       ::= m | "" | k | M | G | T | P | E
  #   (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
  # <decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>
  # No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.
  # When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.
  # Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
  #   a. No precision is lost
  #   b. No fractional digits will be emitted
  #   c. The exponent (or suffix) is as large as possible.
  # The sign will be omitted unless the number is negative.
  # Examples:
  #   1.5 will be serialized as "1500m"
  #   1.5Gi will be serialized as "1536Mi"
  # Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.
  # Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)
  # This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
  sizeLimit:String
}
# Represents an empty directory for a pod. Empty directory volumes support ownership management and SELinux relabeling.
type io_k8s_api_core_v1_EmptyDirVolumeSourceResult {
  # What type of storage medium should back this directory. The default is "" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
  medium:String
  # Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.
  # The serialization format is:
  # <quantity>        ::= <signedNumber><suffix>
  #   (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
  # <digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
  #   (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
  # <decimalSI>       ::= m | "" | k | M | G | T | P | E
  #   (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
  # <decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>
  # No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.
  # When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.
  # Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
  #   a. No precision is lost
  #   b. No fractional digits will be emitted
  #   c. The exponent (or suffix) is as large as possible.
  # The sign will be omitted unless the number is negative.
  # Examples:
  #   1.5 will be serialized as "1500m"
  #   1.5Gi will be serialized as "1536Mi"
  # Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.
  # Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)
  # This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
  sizeLimit:String
}
# EndpointAddress is a tuple that describes single IP address.
input io_k8s_api_core_v1_EndpointAddressInput {
  # The Hostname of this endpoint
  hostname:String
  # The IP of this endpoint. May not be loopback (127.0.0.0/8), link-local (169.254.0.0/16), or link-local multicast ((224.0.0.0/24). IPv6 is also accepted but not fully supported on all platforms. Also, certain kubernetes components, like kube-proxy, are not IPv6 ready.
  ip:String
  # Optional: Node hosting this endpoint. This can be used to determine endpoints local to a node.
  nodeName:String
  # ObjectReference contains enough information to let you inspect or modify the referred object.
  targetRef:io_k8s_api_core_v1_ObjectReferenceInput
}
# EndpointAddress is a tuple that describes single IP address.
type io_k8s_api_core_v1_EndpointAddressResult {
  # The Hostname of this endpoint
  hostname:String
  # The IP of this endpoint. May not be loopback (127.0.0.0/8), link-local (169.254.0.0/16), or link-local multicast ((224.0.0.0/24). IPv6 is also accepted but not fully supported on all platforms. Also, certain kubernetes components, like kube-proxy, are not IPv6 ready.
  ip:String
  # Optional: Node hosting this endpoint. This can be used to determine endpoints local to a node.
  nodeName:String
  # ObjectReference contains enough information to let you inspect or modify the referred object.
  targetRef:io_k8s_api_core_v1_ObjectReferenceResult
}
# EndpointPort is a tuple that describes a single port.
input io_k8s_api_core_v1_EndpointPortInput {
  # The name of this port.  This must match the 'name' field in the corresponding ServicePort. Must be a DNS_LABEL. Optional only if one port is defined.
  name:String
  # The port number of the endpoint.
  port:Int
  # The IP protocol for this port. Must be UDP, TCP, or SCTP. Default is TCP.
  protocol:String
}
# EndpointPort is a tuple that describes a single port.
type io_k8s_api_core_v1_EndpointPortResult {
  # The name of this port.  This must match the 'name' field in the corresponding ServicePort. Must be a DNS_LABEL. Optional only if one port is defined.
  name:String
  # The port number of the endpoint.
  port:Int
  # The IP protocol for this port. Must be UDP, TCP, or SCTP. Default is TCP.
  protocol:String
}
# EndpointSubset is a group of addresses with a common set of ports. The expanded set of endpoints is the Cartesian product of Addresses x Ports. For example, given:
#   {
#     Addresses: [{"ip": "10.10.1.1"}, {"ip": "10.10.2.2"}],
#     Ports:     [{"name": "a", "port": 8675}, {"name": "b", "port": 309}]
#   }
# The resulting set of endpoints can be viewed as:
#     a: [ 10.10.1.1:8675, 10.10.2.2:8675 ],
#     b: [ 10.10.1.1:309, 10.10.2.2:309 ]
input io_k8s_api_core_v1_EndpointSubsetInput {
  # Port numbers available on the related IP addresses.
  ports:[io_k8s_api_core_v1_EndpointPortInput]
  # IP addresses which offer the related ports that are marked as ready. These endpoints should be considered safe for load balancers and clients to utilize.
  addresses:[io_k8s_api_core_v1_EndpointAddressInput]
  # IP addresses which offer the related ports but are not currently marked as ready because they have not yet finished starting, have recently failed a readiness check, or have recently failed a liveness check.
  notReadyAddresses:[io_k8s_api_core_v1_EndpointAddressInput]
}
# EndpointSubset is a group of addresses with a common set of ports. The expanded set of endpoints is the Cartesian product of Addresses x Ports. For example, given:
#   {
#     Addresses: [{"ip": "10.10.1.1"}, {"ip": "10.10.2.2"}],
#     Ports:     [{"name": "a", "port": 8675}, {"name": "b", "port": 309}]
#   }
# The resulting set of endpoints can be viewed as:
#     a: [ 10.10.1.1:8675, 10.10.2.2:8675 ],
#     b: [ 10.10.1.1:309, 10.10.2.2:309 ]
type io_k8s_api_core_v1_EndpointSubsetResult {
  # IP addresses which offer the related ports that are marked as ready. These endpoints should be considered safe for load balancers and clients to utilize.
  addresses:[io_k8s_api_core_v1_EndpointAddressResult]
  # IP addresses which offer the related ports but are not currently marked as ready because they have not yet finished starting, have recently failed a readiness check, or have recently failed a liveness check.
  notReadyAddresses:[io_k8s_api_core_v1_EndpointAddressResult]
  # Port numbers available on the related IP addresses.
  ports:[io_k8s_api_core_v1_EndpointPortResult]
}
# Endpoints is a collection of endpoints that implement the actual service. Example:
#   Name: "mysvc",
#   Subsets: [
#     {
#       Addresses: [{"ip": "10.10.1.1"}, {"ip": "10.10.2.2"}],
#       Ports: [{"name": "a", "port": 8675}, {"name": "b", "port": 309}]
#     },
#     {
#       Addresses: [{"ip": "10.10.3.3"}],
#       Ports: [{"name": "a", "port": 93}, {"name": "b", "port": 76}]
#     },
#  ]
input io_k8s_api_core_v1_EndpointsInput {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  # The set of all endpoints is the union of all subsets. Addresses are placed into subsets according to the IPs they share. A single address with multiple ports, some of which are ready and some of which are not (because they come from different containers) will result in the address being displayed in different subsets for the different ports. No address will appear in both Addresses and NotReadyAddresses in the same subset. Sets of addresses and ports that comprise a service.
  subsets:[io_k8s_api_core_v1_EndpointSubsetInput]
}
# EndpointsList is a list of endpoints.
type io_k8s_api_core_v1_EndpointsListResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # List of endpoints.
  items:[io_k8s_api_core_v1_EndpointsResult]
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
# Endpoints is a collection of endpoints that implement the actual service. Example:
#   Name: "mysvc",
#   Subsets: [
#     {
#       Addresses: [{"ip": "10.10.1.1"}, {"ip": "10.10.2.2"}],
#       Ports: [{"name": "a", "port": 8675}, {"name": "b", "port": 309}]
#     },
#     {
#       Addresses: [{"ip": "10.10.3.3"}],
#       Ports: [{"name": "a", "port": 93}, {"name": "b", "port": 76}]
#     },
#  ]
type io_k8s_api_core_v1_EndpointsResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  # The set of all endpoints is the union of all subsets. Addresses are placed into subsets according to the IPs they share. A single address with multiple ports, some of which are ready and some of which are not (because they come from different containers) will result in the address being displayed in different subsets for the different ports. No address will appear in both Addresses and NotReadyAddresses in the same subset. Sets of addresses and ports that comprise a service.
  subsets:[io_k8s_api_core_v1_EndpointSubsetResult]
}
# EnvFromSource represents the source of a set of ConfigMaps
input io_k8s_api_core_v1_EnvFromSourceInput {
  # ConfigMapEnvSource selects a ConfigMap to populate the environment variables with.
  # The contents of the target ConfigMap's Data field will represent the key-value pairs as environment variables.
  configMapRef:io_k8s_api_core_v1_ConfigMapEnvSourceInput
  # An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.
  prefix:String
  # SecretEnvSource selects a Secret to populate the environment variables with.
  # The contents of the target Secret's Data field will represent the key-value pairs as environment variables.
  secretRef:io_k8s_api_core_v1_SecretEnvSourceInput
}
# EnvFromSource represents the source of a set of ConfigMaps
type io_k8s_api_core_v1_EnvFromSourceResult {
  # ConfigMapEnvSource selects a ConfigMap to populate the environment variables with.
  # The contents of the target ConfigMap's Data field will represent the key-value pairs as environment variables.
  configMapRef:io_k8s_api_core_v1_ConfigMapEnvSourceResult
  # An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.
  prefix:String
  # SecretEnvSource selects a Secret to populate the environment variables with.
  # The contents of the target Secret's Data field will represent the key-value pairs as environment variables.
  secretRef:io_k8s_api_core_v1_SecretEnvSourceResult
}
# EnvVar represents an environment variable present in a Container.
input io_k8s_api_core_v1_EnvVarInput {
  # Name of the environment variable. Must be a C_IDENTIFIER.
  name:String
  # Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
  value:String
  # EnvVarSource represents a source for the value of an EnvVar.
  valueFrom:io_k8s_api_core_v1_EnvVarSourceInput
}
# EnvVar represents an environment variable present in a Container.
type io_k8s_api_core_v1_EnvVarResult {
  # Name of the environment variable. Must be a C_IDENTIFIER.
  name:String
  # Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
  value:String
  # EnvVarSource represents a source for the value of an EnvVar.
  valueFrom:io_k8s_api_core_v1_EnvVarSourceResult
}
# EnvVarSource represents a source for the value of an EnvVar.
input io_k8s_api_core_v1_EnvVarSourceInput {
  # Selects a key from a ConfigMap.
  configMapKeyRef:io_k8s_api_core_v1_ConfigMapKeySelectorInput
  # ObjectFieldSelector selects an APIVersioned field of an object.
  fieldRef:io_k8s_api_core_v1_ObjectFieldSelectorInput
  # ResourceFieldSelector represents container resources (cpu, memory) and their output format
  resourceFieldRef:io_k8s_api_core_v1_ResourceFieldSelectorInput
  # SecretKeySelector selects a key of a Secret.
  secretKeyRef:io_k8s_api_core_v1_SecretKeySelectorInput
}
# EnvVarSource represents a source for the value of an EnvVar.
type io_k8s_api_core_v1_EnvVarSourceResult {
  # Selects a key from a ConfigMap.
  configMapKeyRef:io_k8s_api_core_v1_ConfigMapKeySelectorResult
  # ObjectFieldSelector selects an APIVersioned field of an object.
  fieldRef:io_k8s_api_core_v1_ObjectFieldSelectorResult
  # ResourceFieldSelector represents container resources (cpu, memory) and their output format
  resourceFieldRef:io_k8s_api_core_v1_ResourceFieldSelectorResult
  # SecretKeySelector selects a key of a Secret.
  secretKeyRef:io_k8s_api_core_v1_SecretKeySelectorResult
}
# An EphemeralContainer is a container that may be added temporarily to an existing pod for user-initiated activities such as debugging. Ephemeral containers have no resource or scheduling guarantees, and they will not be restarted when they exit or when a pod is removed or restarted. If an ephemeral container causes a pod to exceed its resource allocation, the pod may be evicted. Ephemeral containers may not be added by directly updating the pod spec. They must be added via the pod's ephemeralcontainers subresource, and they will appear in the pod spec once added. This is an alpha feature enabled by the EphemeralContainers feature flag.
input io_k8s_api_core_v1_EphemeralContainerInput {
  # Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.
  stdin:Boolean
  # Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.
  terminationMessagePath:String
  # volumeDevices is the list of block devices to be used by the container. This is a beta feature.
  volumeDevices:[io_k8s_api_core_v1_VolumeDeviceInput]
  # Lifecycle describes actions that the management system should take in response to container lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted.
  lifecycle:io_k8s_api_core_v1_LifecycleInput
  # Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
  livenessProbe:io_k8s_api_core_v1_ProbeInput
  # Name of the ephemeral container specified as a DNS_LABEL. This name must be unique among all containers, init containers and ephemeral containers.
  name:String
  # Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
  startupProbe:io_k8s_api_core_v1_ProbeInput
  # Pod volumes to mount into the container's filesystem. Cannot be updated.
  volumeMounts:[io_k8s_api_core_v1_VolumeMountInput]
  # Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.
  workingDir:String
  # Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
  command:[String]
  # List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.
  envFrom:[io_k8s_api_core_v1_EnvFromSourceInput]
  # Ports are not allowed for ephemeral containers.
  ports:[io_k8s_api_core_v1_ContainerPortInput]
  # Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.
  terminationMessagePolicy:String
  # Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images
  image:String
  # Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
  readinessProbe:io_k8s_api_core_v1_ProbeInput
  # If set, the name of the container from PodSpec that this ephemeral container targets. The ephemeral container will be run in the namespaces (IPC, PID, etc) of this container. If not set then the ephemeral container is run in whatever namespaces are shared for the pod. Note that the container runtime must support this feature.
  targetContainerName:String
  # SecurityContext holds security configuration that will be applied to a container. Some fields are present in both SecurityContext and PodSecurityContext.  When both are set, the values in SecurityContext take precedence.
  securityContext:io_k8s_api_core_v1_SecurityContextInput
  # Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false
  stdinOnce:Boolean
  # Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.
  tty:Boolean
  # Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
  args:[String]
  # List of environment variables to set in the container. Cannot be updated.
  env:[io_k8s_api_core_v1_EnvVarInput]
  # Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
  imagePullPolicy:String
}
# An EphemeralContainer is a container that may be added temporarily to an existing pod for user-initiated activities such as debugging. Ephemeral containers have no resource or scheduling guarantees, and they will not be restarted when they exit or when a pod is removed or restarted. If an ephemeral container causes a pod to exceed its resource allocation, the pod may be evicted. Ephemeral containers may not be added by directly updating the pod spec. They must be added via the pod's ephemeralcontainers subresource, and they will appear in the pod spec once added. This is an alpha feature enabled by the EphemeralContainers feature flag.
type io_k8s_api_core_v1_EphemeralContainerResult {
  # Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
  args:[String]
  # Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
  command:[String]
  # List of environment variables to set in the container. Cannot be updated.
  env:[io_k8s_api_core_v1_EnvVarResult]
  # List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.
  envFrom:[io_k8s_api_core_v1_EnvFromSourceResult]
  # Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images
  image:String
  # Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
  imagePullPolicy:String
  # Lifecycle describes actions that the management system should take in response to container lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted.
  lifecycle:io_k8s_api_core_v1_LifecycleResult
  # Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
  livenessProbe:io_k8s_api_core_v1_ProbeResult
  # Name of the ephemeral container specified as a DNS_LABEL. This name must be unique among all containers, init containers and ephemeral containers.
  name:String
  # Ports are not allowed for ephemeral containers.
  ports:[io_k8s_api_core_v1_ContainerPortResult]
  # Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
  readinessProbe:io_k8s_api_core_v1_ProbeResult
  # SecurityContext holds security configuration that will be applied to a container. Some fields are present in both SecurityContext and PodSecurityContext.  When both are set, the values in SecurityContext take precedence.
  securityContext:io_k8s_api_core_v1_SecurityContextResult
  # Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
  startupProbe:io_k8s_api_core_v1_ProbeResult
  # Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.
  stdin:Boolean
  # Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false
  stdinOnce:Boolean
  # If set, the name of the container from PodSpec that this ephemeral container targets. The ephemeral container will be run in the namespaces (IPC, PID, etc) of this container. If not set then the ephemeral container is run in whatever namespaces are shared for the pod. Note that the container runtime must support this feature.
  targetContainerName:String
  # Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.
  terminationMessagePath:String
  # Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.
  terminationMessagePolicy:String
  # Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.
  tty:Boolean
  # volumeDevices is the list of block devices to be used by the container. This is a beta feature.
  volumeDevices:[io_k8s_api_core_v1_VolumeDeviceResult]
  # Pod volumes to mount into the container's filesystem. Cannot be updated.
  volumeMounts:[io_k8s_api_core_v1_VolumeMountResult]
  # Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.
  workingDir:String
}
# Event is a report of an event somewhere in the cluster.
input io_k8s_api_core_v1_EventInput {
  # ObjectReference contains enough information to let you inspect or modify the referred object.
  involvedObject:io_k8s_api_core_v1_ObjectReferenceInput
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  # What action was taken/failed regarding to the Regarding object.
  action:String
  # Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
  firstTimestamp:String
  # This should be a short, machine understandable string that gives the reason for the transition into the object's current status.
  reason:String
  # Name of the controller that emitted this Event, e.g. `kubernetes.io/kubelet`.
  reportingComponent:String
  # ID of the controller instance, e.g. `kubelet-xyzf`.
  reportingInstance:String
  # Type of this event (Normal, Warning), new types could be added in the future
  type:String
  # Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
  lastTimestamp:String
  # A human-readable description of the status of this operation.
  message:String
  # ObjectReference contains enough information to let you inspect or modify the referred object.
  related:io_k8s_api_core_v1_ObjectReferenceInput
  # EventSource contains information for an event.
  source:io_k8s_api_core_v1_EventSourceInput
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # The number of times this event has occurred.
  count:Int
  # EventSeries contain information on series of events, i.e. thing that was/is happening continuously for some time.
  series:io_k8s_api_core_v1_EventSeriesInput
  # MicroTime is version of Time with microsecond level precision.
  eventTime:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
}
# EventList is a list of events.
type io_k8s_api_core_v1_EventListResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # List of events
  items:[io_k8s_api_core_v1_EventResult]
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
# Event is a report of an event somewhere in the cluster.
type io_k8s_api_core_v1_EventResult {
  # What action was taken/failed regarding to the Regarding object.
  action:String
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # The number of times this event has occurred.
  count:Int
  # MicroTime is version of Time with microsecond level precision.
  eventTime:String
  # Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
  firstTimestamp:String
  # ObjectReference contains enough information to let you inspect or modify the referred object.
  involvedObject:io_k8s_api_core_v1_ObjectReferenceResult
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
  lastTimestamp:String
  # A human-readable description of the status of this operation.
  message:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  # This should be a short, machine understandable string that gives the reason for the transition into the object's current status.
  reason:String
  # ObjectReference contains enough information to let you inspect or modify the referred object.
  related:io_k8s_api_core_v1_ObjectReferenceResult
  # Name of the controller that emitted this Event, e.g. `kubernetes.io/kubelet`.
  reportingComponent:String
  # ID of the controller instance, e.g. `kubelet-xyzf`.
  reportingInstance:String
  # EventSeries contain information on series of events, i.e. thing that was/is happening continuously for some time.
  series:io_k8s_api_core_v1_EventSeriesResult
  # EventSource contains information for an event.
  source:io_k8s_api_core_v1_EventSourceResult
  # Type of this event (Normal, Warning), new types could be added in the future
  type:String
}
# EventSeries contain information on series of events, i.e. thing that was/is happening continuously for some time.
input io_k8s_api_core_v1_EventSeriesInput {
  # Number of occurrences in this series up to the last heartbeat time
  count:Int
  # MicroTime is version of Time with microsecond level precision.
  lastObservedTime:String
  # State of this Series: Ongoing or Finished Deprecated. Planned removal for 1.18
  state:String
}
# EventSeries contain information on series of events, i.e. thing that was/is happening continuously for some time.
type io_k8s_api_core_v1_EventSeriesResult {
  # Number of occurrences in this series up to the last heartbeat time
  count:Int
  # MicroTime is version of Time with microsecond level precision.
  lastObservedTime:String
  # State of this Series: Ongoing or Finished Deprecated. Planned removal for 1.18
  state:String
}
# EventSource contains information for an event.
input io_k8s_api_core_v1_EventSourceInput {
  # Component from which the event is generated.
  component:String
  # Node name on which the event is generated.
  host:String
}
# EventSource contains information for an event.
type io_k8s_api_core_v1_EventSourceResult {
  # Component from which the event is generated.
  component:String
  # Node name on which the event is generated.
  host:String
}
# ExecAction describes a "run in container" action.
input io_k8s_api_core_v1_ExecActionInput {
  # Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
  command:[String]
}
# ExecAction describes a "run in container" action.
type io_k8s_api_core_v1_ExecActionResult {
  # Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
  command:[String]
}
# Represents a Fibre Channel volume. Fibre Channel volumes can only be mounted as read/write once. Fibre Channel volumes support ownership management and SELinux relabeling.
input io_k8s_api_core_v1_FCVolumeSourceInput {
  # Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
  fsType:String
  # Optional: FC target lun number
  lun:Int
  # Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
  readOnly:Boolean
  # Optional: FC target worldwide names (WWNs)
  targetWWNs:[String]
  # Optional: FC volume world wide identifiers (wwids) Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.
  wwids:[String]
}
# Represents a Fibre Channel volume. Fibre Channel volumes can only be mounted as read/write once. Fibre Channel volumes support ownership management and SELinux relabeling.
type io_k8s_api_core_v1_FCVolumeSourceResult {
  # Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
  fsType:String
  # Optional: FC target lun number
  lun:Int
  # Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
  readOnly:Boolean
  # Optional: FC target worldwide names (WWNs)
  targetWWNs:[String]
  # Optional: FC volume world wide identifiers (wwids) Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.
  wwids:[String]
}
# FlexPersistentVolumeSource represents a generic persistent volume resource that is provisioned/attached using an exec based plugin.
input io_k8s_api_core_v1_FlexPersistentVolumeSourceInput {
  # Driver is the name of the driver to use for this volume.
  driver:String
  # Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
  fsType:String
  # Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
  readOnly:Boolean
  # SecretReference represents a Secret Reference. It has enough information to retrieve secret in any namespace
  secretRef:io_k8s_api_core_v1_SecretReferenceInput
}
# FlexPersistentVolumeSource represents a generic persistent volume resource that is provisioned/attached using an exec based plugin.
type io_k8s_api_core_v1_FlexPersistentVolumeSourceResult {
  # Driver is the name of the driver to use for this volume.
  driver:String
  # Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
  fsType:String
  # Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
  readOnly:Boolean
  # SecretReference represents a Secret Reference. It has enough information to retrieve secret in any namespace
  secretRef:io_k8s_api_core_v1_SecretReferenceResult
}
# FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.
input io_k8s_api_core_v1_FlexVolumeSourceInput {
  # Driver is the name of the driver to use for this volume.
  driver:String
  # Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
  fsType:String
  # Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
  readOnly:Boolean
  # LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
  secretRef:io_k8s_api_core_v1_LocalObjectReferenceInput
}
# FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.
type io_k8s_api_core_v1_FlexVolumeSourceResult {
  # Driver is the name of the driver to use for this volume.
  driver:String
  # Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
  fsType:String
  # Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
  readOnly:Boolean
  # LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
  secretRef:io_k8s_api_core_v1_LocalObjectReferenceResult
}
# Represents a Flocker volume mounted by the Flocker agent. One and only one of datasetName and datasetUUID should be set. Flocker volumes do not support ownership management or SELinux relabeling.
input io_k8s_api_core_v1_FlockerVolumeSourceInput {
  # Name of the dataset stored as metadata -> name on the dataset for Flocker should be considered as deprecated
  datasetName:String
  # UUID of the dataset. This is unique identifier of a Flocker dataset
  datasetUUID:String
}
# Represents a Flocker volume mounted by the Flocker agent. One and only one of datasetName and datasetUUID should be set. Flocker volumes do not support ownership management or SELinux relabeling.
type io_k8s_api_core_v1_FlockerVolumeSourceResult {
  # Name of the dataset stored as metadata -> name on the dataset for Flocker should be considered as deprecated
  datasetName:String
  # UUID of the dataset. This is unique identifier of a Flocker dataset
  datasetUUID:String
}
# Represents a Persistent Disk resource in Google Compute Engine.
# A GCE PD must exist before mounting to a container. The disk must also be in the same GCE project and zone as the kubelet. A GCE PD can only be mounted as read/write once or read-only many times. GCE PDs support ownership management and SELinux relabeling.
input io_k8s_api_core_v1_GCEPersistentDiskVolumeSourceInput {
  # Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
  fsType:String
  # The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as "1". Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
  partition:Int
  # Unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
  pdName:String
  # ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
  readOnly:Boolean
}
# Represents a Persistent Disk resource in Google Compute Engine.
# A GCE PD must exist before mounting to a container. The disk must also be in the same GCE project and zone as the kubelet. A GCE PD can only be mounted as read/write once or read-only many times. GCE PDs support ownership management and SELinux relabeling.
type io_k8s_api_core_v1_GCEPersistentDiskVolumeSourceResult {
  # Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
  fsType:String
  # The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as "1". Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
  partition:Int
  # Unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
  pdName:String
  # ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
  readOnly:Boolean
}
# Represents a volume that is populated with the contents of a git repository. Git repo volumes do not support ownership management. Git repo volumes support SELinux relabeling.
# DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.
input io_k8s_api_core_v1_GitRepoVolumeSourceInput {
  # Target directory name. Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name.
  directory:String
  # Repository URL
  repository:String
  # Commit hash for the specified revision.
  revision:String
}
# Represents a volume that is populated with the contents of a git repository. Git repo volumes do not support ownership management. Git repo volumes support SELinux relabeling.
# DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.
type io_k8s_api_core_v1_GitRepoVolumeSourceResult {
  # Target directory name. Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name.
  directory:String
  # Repository URL
  repository:String
  # Commit hash for the specified revision.
  revision:String
}
# Represents a Glusterfs mount that lasts the lifetime of a pod. Glusterfs volumes do not support ownership management or SELinux relabeling.
input io_k8s_api_core_v1_GlusterfsPersistentVolumeSourceInput {
  # ReadOnly here will force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
  readOnly:Boolean
  # EndpointsName is the endpoint name that details Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
  endpoints:String
  # EndpointsNamespace is the namespace that contains Glusterfs endpoint. If this field is empty, the EndpointNamespace defaults to the same namespace as the bound PVC. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
  endpointsNamespace:String
  # Path is the Glusterfs volume path. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
  path:String
}
# Represents a Glusterfs mount that lasts the lifetime of a pod. Glusterfs volumes do not support ownership management or SELinux relabeling.
type io_k8s_api_core_v1_GlusterfsPersistentVolumeSourceResult {
  # EndpointsName is the endpoint name that details Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
  endpoints:String
  # EndpointsNamespace is the namespace that contains Glusterfs endpoint. If this field is empty, the EndpointNamespace defaults to the same namespace as the bound PVC. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
  endpointsNamespace:String
  # Path is the Glusterfs volume path. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
  path:String
  # ReadOnly here will force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
  readOnly:Boolean
}
# Represents a Glusterfs mount that lasts the lifetime of a pod. Glusterfs volumes do not support ownership management or SELinux relabeling.
input io_k8s_api_core_v1_GlusterfsVolumeSourceInput {
  # EndpointsName is the endpoint name that details Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
  endpoints:String
  # Path is the Glusterfs volume path. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
  path:String
  # ReadOnly here will force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
  readOnly:Boolean
}
# Represents a Glusterfs mount that lasts the lifetime of a pod. Glusterfs volumes do not support ownership management or SELinux relabeling.
type io_k8s_api_core_v1_GlusterfsVolumeSourceResult {
  # EndpointsName is the endpoint name that details Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
  endpoints:String
  # Path is the Glusterfs volume path. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
  path:String
  # ReadOnly here will force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
  readOnly:Boolean
}
# HTTPGetAction describes an action based on HTTP Get requests.
input io_k8s_api_core_v1_HTTPGetActionInput {
  # Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
  host:String
  # Custom headers to set in the request. HTTP allows repeated headers.
  httpHeaders:[io_k8s_api_core_v1_HTTPHeaderInput]
  # Path to access on the HTTP server.
  path:String
  # IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number.
  port:String
  # Scheme to use for connecting to the host. Defaults to HTTP.
  scheme:String
}
# HTTPGetAction describes an action based on HTTP Get requests.
type io_k8s_api_core_v1_HTTPGetActionResult {
  # Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
  host:String
  # Custom headers to set in the request. HTTP allows repeated headers.
  httpHeaders:[io_k8s_api_core_v1_HTTPHeaderResult]
  # Path to access on the HTTP server.
  path:String
  # IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number.
  port:String
  # Scheme to use for connecting to the host. Defaults to HTTP.
  scheme:String
}
# HTTPHeader describes a custom header to be used in HTTP probes
input io_k8s_api_core_v1_HTTPHeaderInput {
  # The header field name
  name:String
  # The header field value
  value:String
}
# HTTPHeader describes a custom header to be used in HTTP probes
type io_k8s_api_core_v1_HTTPHeaderResult {
  # The header field name
  name:String
  # The header field value
  value:String
}
# Handler defines a specific action that should be taken
input io_k8s_api_core_v1_HandlerInput {
  # ExecAction describes a "run in container" action.
  exec:io_k8s_api_core_v1_ExecActionInput
  # HTTPGetAction describes an action based on HTTP Get requests.
  httpGet:io_k8s_api_core_v1_HTTPGetActionInput
  # TCPSocketAction describes an action based on opening a socket
  tcpSocket:io_k8s_api_core_v1_TCPSocketActionInput
}
# Handler defines a specific action that should be taken
type io_k8s_api_core_v1_HandlerResult {
  # ExecAction describes a "run in container" action.
  exec:io_k8s_api_core_v1_ExecActionResult
  # HTTPGetAction describes an action based on HTTP Get requests.
  httpGet:io_k8s_api_core_v1_HTTPGetActionResult
  # TCPSocketAction describes an action based on opening a socket
  tcpSocket:io_k8s_api_core_v1_TCPSocketActionResult
}
# HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the pod's hosts file.
input io_k8s_api_core_v1_HostAliasInput {
  # Hostnames for the above IP address.
  hostnames:[String]
  # IP address of the host file entry.
  ip:String
}
# HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the pod's hosts file.
type io_k8s_api_core_v1_HostAliasResult {
  # Hostnames for the above IP address.
  hostnames:[String]
  # IP address of the host file entry.
  ip:String
}
# Represents a host path mapped into a pod. Host path volumes do not support ownership management or SELinux relabeling.
input io_k8s_api_core_v1_HostPathVolumeSourceInput {
  # Path of the directory on the host. If the path is a symlink, it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
  path:String
  # Type for HostPath Volume Defaults to "" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
  type:String
}
# Represents a host path mapped into a pod. Host path volumes do not support ownership management or SELinux relabeling.
type io_k8s_api_core_v1_HostPathVolumeSourceResult {
  # Path of the directory on the host. If the path is a symlink, it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
  path:String
  # Type for HostPath Volume Defaults to "" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
  type:String
}
# ISCSIPersistentVolumeSource represents an ISCSI disk. ISCSI volumes can only be mounted as read/write once. ISCSI volumes support ownership management and SELinux relabeling.
input io_k8s_api_core_v1_ISCSIPersistentVolumeSourceInput {
  # SecretReference represents a Secret Reference. It has enough information to retrieve secret in any namespace
  secretRef:io_k8s_api_core_v1_SecretReferenceInput
  # iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
  targetPortal:String
  # Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi
  fsType:String
  # Custom iSCSI Initiator Name. If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface <target portal>:<volume name> will be created for the connection.
  initiatorName:String
  # iSCSI Target Lun number.
  lun:Int
  # ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false.
  readOnly:Boolean
  # iSCSI Target Portal List. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
  portals:[String]
  # whether support iSCSI Discovery CHAP authentication
  chapAuthDiscovery:Boolean
  # whether support iSCSI Session CHAP authentication
  chapAuthSession:Boolean
  # Target iSCSI Qualified Name.
  iqn:String
  # iSCSI Interface Name that uses an iSCSI transport. Defaults to 'default' (tcp).
  iscsiInterface:String
}
# ISCSIPersistentVolumeSource represents an ISCSI disk. ISCSI volumes can only be mounted as read/write once. ISCSI volumes support ownership management and SELinux relabeling.
type io_k8s_api_core_v1_ISCSIPersistentVolumeSourceResult {
  # whether support iSCSI Discovery CHAP authentication
  chapAuthDiscovery:Boolean
  # whether support iSCSI Session CHAP authentication
  chapAuthSession:Boolean
  # Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi
  fsType:String
  # Custom iSCSI Initiator Name. If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface <target portal>:<volume name> will be created for the connection.
  initiatorName:String
  # Target iSCSI Qualified Name.
  iqn:String
  # iSCSI Interface Name that uses an iSCSI transport. Defaults to 'default' (tcp).
  iscsiInterface:String
  # iSCSI Target Lun number.
  lun:Int
  # iSCSI Target Portal List. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
  portals:[String]
  # ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false.
  readOnly:Boolean
  # SecretReference represents a Secret Reference. It has enough information to retrieve secret in any namespace
  secretRef:io_k8s_api_core_v1_SecretReferenceResult
  # iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
  targetPortal:String
}
# Represents an ISCSI disk. ISCSI volumes can only be mounted as read/write once. ISCSI volumes support ownership management and SELinux relabeling.
input io_k8s_api_core_v1_ISCSIVolumeSourceInput {
  # ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false.
  readOnly:Boolean
  # Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi
  fsType:String
  # Custom iSCSI Initiator Name. If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface <target portal>:<volume name> will be created for the connection.
  initiatorName:String
  # Target iSCSI Qualified Name.
  iqn:String
  # iSCSI Interface Name that uses an iSCSI transport. Defaults to 'default' (tcp).
  iscsiInterface:String
  # iSCSI Target Lun number.
  lun:Int
  # iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
  portals:[String]
  # whether support iSCSI Discovery CHAP authentication
  chapAuthDiscovery:Boolean
  # whether support iSCSI Session CHAP authentication
  chapAuthSession:Boolean
  # LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
  secretRef:io_k8s_api_core_v1_LocalObjectReferenceInput
  # iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
  targetPortal:String
}
# Represents an ISCSI disk. ISCSI volumes can only be mounted as read/write once. ISCSI volumes support ownership management and SELinux relabeling.
type io_k8s_api_core_v1_ISCSIVolumeSourceResult {
  # whether support iSCSI Discovery CHAP authentication
  chapAuthDiscovery:Boolean
  # whether support iSCSI Session CHAP authentication
  chapAuthSession:Boolean
  # Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi
  fsType:String
  # Custom iSCSI Initiator Name. If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface <target portal>:<volume name> will be created for the connection.
  initiatorName:String
  # Target iSCSI Qualified Name.
  iqn:String
  # iSCSI Interface Name that uses an iSCSI transport. Defaults to 'default' (tcp).
  iscsiInterface:String
  # iSCSI Target Lun number.
  lun:Int
  # iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
  portals:[String]
  # ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false.
  readOnly:Boolean
  # LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
  secretRef:io_k8s_api_core_v1_LocalObjectReferenceResult
  # iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
  targetPortal:String
}
# Maps a string key to a path within a volume.
input io_k8s_api_core_v1_KeyToPathInput {
  # The key to project.
  key:String
  # Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
  mode:Int
  # The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
  path:String
}
# Maps a string key to a path within a volume.
type io_k8s_api_core_v1_KeyToPathResult {
  # The key to project.
  key:String
  # Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
  mode:Int
  # The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
  path:String
}
# Lifecycle describes actions that the management system should take in response to container lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted.
input io_k8s_api_core_v1_LifecycleInput {
  # Handler defines a specific action that should be taken
  postStart:io_k8s_api_core_v1_HandlerInput
  # Handler defines a specific action that should be taken
  preStop:io_k8s_api_core_v1_HandlerInput
}
# Lifecycle describes actions that the management system should take in response to container lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted.
type io_k8s_api_core_v1_LifecycleResult {
  # Handler defines a specific action that should be taken
  postStart:io_k8s_api_core_v1_HandlerResult
  # Handler defines a specific action that should be taken
  preStop:io_k8s_api_core_v1_HandlerResult
}
# LimitRange sets resource usage limits for each kind of resource in a Namespace.
input io_k8s_api_core_v1_LimitRangeInput {
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  # LimitRangeSpec defines a min/max usage limit for resources that match on kind.
  spec:io_k8s_api_core_v1_LimitRangeSpecInput
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
}
# LimitRangeItem defines a min/max usage limit for any resource that matches on kind.
input io_k8s_api_core_v1_LimitRangeItemInput {
  # Type of resource that this limit applies to.
  type:String
}
# LimitRangeItem defines a min/max usage limit for any resource that matches on kind.
type io_k8s_api_core_v1_LimitRangeItemResult {
  # Type of resource that this limit applies to.
  type:String
}
# LimitRangeList is a list of LimitRange items.
type io_k8s_api_core_v1_LimitRangeListResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Items is a list of LimitRange objects. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
  items:[io_k8s_api_core_v1_LimitRangeResult]
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
# LimitRange sets resource usage limits for each kind of resource in a Namespace.
type io_k8s_api_core_v1_LimitRangeResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  # LimitRangeSpec defines a min/max usage limit for resources that match on kind.
  spec:io_k8s_api_core_v1_LimitRangeSpecResult
}
# LimitRangeSpec defines a min/max usage limit for resources that match on kind.
input io_k8s_api_core_v1_LimitRangeSpecInput {
  # Limits is the list of LimitRangeItem objects that are enforced.
  limits:[io_k8s_api_core_v1_LimitRangeItemInput]
}
# LimitRangeSpec defines a min/max usage limit for resources that match on kind.
type io_k8s_api_core_v1_LimitRangeSpecResult {
  # Limits is the list of LimitRangeItem objects that are enforced.
  limits:[io_k8s_api_core_v1_LimitRangeItemResult]
}
# LoadBalancerIngress represents the status of a load-balancer ingress point: traffic intended for the service should be sent to an ingress point.
input io_k8s_api_core_v1_LoadBalancerIngressInput {
  # Hostname is set for load-balancer ingress points that are DNS based (typically AWS load-balancers)
  hostname:String
  # IP is set for load-balancer ingress points that are IP based (typically GCE or OpenStack load-balancers)
  ip:String
}
# LoadBalancerIngress represents the status of a load-balancer ingress point: traffic intended for the service should be sent to an ingress point.
type io_k8s_api_core_v1_LoadBalancerIngressResult {
  # Hostname is set for load-balancer ingress points that are DNS based (typically AWS load-balancers)
  hostname:String
  # IP is set for load-balancer ingress points that are IP based (typically GCE or OpenStack load-balancers)
  ip:String
}
# LoadBalancerStatus represents the status of a load-balancer.
input io_k8s_api_core_v1_LoadBalancerStatusInput {
  # Ingress is a list containing ingress points for the load-balancer. Traffic intended for the service should be sent to these ingress points.
  ingress:[io_k8s_api_core_v1_LoadBalancerIngressInput]
}
# LoadBalancerStatus represents the status of a load-balancer.
type io_k8s_api_core_v1_LoadBalancerStatusResult {
  # Ingress is a list containing ingress points for the load-balancer. Traffic intended for the service should be sent to these ingress points.
  ingress:[io_k8s_api_core_v1_LoadBalancerIngressResult]
}
# LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
input io_k8s_api_core_v1_LocalObjectReferenceInput {
  # Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
  name:String
}
# LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
type io_k8s_api_core_v1_LocalObjectReferenceResult {
  # Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
  name:String
}
# Local represents directly-attached storage with node affinity (Beta feature)
input io_k8s_api_core_v1_LocalVolumeSourceInput {
  # Filesystem type to mount. It applies only when the Path is a block device. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". The default value is to auto-select a fileystem if unspecified.
  fsType:String
  # The full path to the volume on the node. It can be either a directory or block device (disk, partition, ...).
  path:String
}
# Local represents directly-attached storage with node affinity (Beta feature)
type io_k8s_api_core_v1_LocalVolumeSourceResult {
  # Filesystem type to mount. It applies only when the Path is a block device. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". The default value is to auto-select a fileystem if unspecified.
  fsType:String
  # The full path to the volume on the node. It can be either a directory or block device (disk, partition, ...).
  path:String
}
# Represents an NFS mount that lasts the lifetime of a pod. NFS volumes do not support ownership management or SELinux relabeling.
input io_k8s_api_core_v1_NFSVolumeSourceInput {
  # Path that is exported by the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
  path:String
  # ReadOnly here will force the NFS export to be mounted with read-only permissions. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
  readOnly:Boolean
  # Server is the hostname or IP address of the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
  server:String
}
# Represents an NFS mount that lasts the lifetime of a pod. NFS volumes do not support ownership management or SELinux relabeling.
type io_k8s_api_core_v1_NFSVolumeSourceResult {
  # Path that is exported by the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
  path:String
  # ReadOnly here will force the NFS export to be mounted with read-only permissions. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
  readOnly:Boolean
  # Server is the hostname or IP address of the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
  server:String
}
# NamespaceCondition contains details about state of namespace.
input io_k8s_api_core_v1_NamespaceConditionInput {
  # Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
  lastTransitionTime:String
  message:String
  reason:String
  # Status of the condition, one of True, False, Unknown.
  status:String
  # Type of namespace controller condition.
  type:String
}
# NamespaceCondition contains details about state of namespace.
type io_k8s_api_core_v1_NamespaceConditionResult {
  # Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
  lastTransitionTime:String
  message:String
  reason:String
  # Status of the condition, one of True, False, Unknown.
  status:String
  # Type of namespace controller condition.
  type:String
}
# Namespace provides a scope for Names. Use of multiple namespaces is optional.
input io_k8s_api_core_v1_NamespaceInput {
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  # NamespaceSpec describes the attributes on a Namespace.
  spec:io_k8s_api_core_v1_NamespaceSpecInput
  # NamespaceStatus is information about the current status of a Namespace.
  status:io_k8s_api_core_v1_NamespaceStatusInput
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
}
# NamespaceList is a list of Namespaces.
type io_k8s_api_core_v1_NamespaceListResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Items is the list of Namespace objects in the list. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
  items:[io_k8s_api_core_v1_NamespaceResult]
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
# Namespace provides a scope for Names. Use of multiple namespaces is optional.
type io_k8s_api_core_v1_NamespaceResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  # NamespaceSpec describes the attributes on a Namespace.
  spec:io_k8s_api_core_v1_NamespaceSpecResult
  # NamespaceStatus is information about the current status of a Namespace.
  status:io_k8s_api_core_v1_NamespaceStatusResult
}
# NamespaceSpec describes the attributes on a Namespace.
input io_k8s_api_core_v1_NamespaceSpecInput {
  # Finalizers is an opaque list of values that must be empty to permanently remove object from storage. More info: https://kubernetes.io/docs/tasks/administer-cluster/namespaces/
  finalizers:[String]
}
# NamespaceSpec describes the attributes on a Namespace.
type io_k8s_api_core_v1_NamespaceSpecResult {
  # Finalizers is an opaque list of values that must be empty to permanently remove object from storage. More info: https://kubernetes.io/docs/tasks/administer-cluster/namespaces/
  finalizers:[String]
}
# NamespaceStatus is information about the current status of a Namespace.
input io_k8s_api_core_v1_NamespaceStatusInput {
  # Represents the latest available observations of a namespace's current state.
  conditions:[io_k8s_api_core_v1_NamespaceConditionInput]
  # Phase is the current lifecycle phase of the namespace. More info: https://kubernetes.io/docs/tasks/administer-cluster/namespaces/
  phase:String
}
# NamespaceStatus is information about the current status of a Namespace.
type io_k8s_api_core_v1_NamespaceStatusResult {
  # Represents the latest available observations of a namespace's current state.
  conditions:[io_k8s_api_core_v1_NamespaceConditionResult]
  # Phase is the current lifecycle phase of the namespace. More info: https://kubernetes.io/docs/tasks/administer-cluster/namespaces/
  phase:String
}
# NodeAddress contains information for the node's address.
input io_k8s_api_core_v1_NodeAddressInput {
  # The node address.
  address:String
  # Node address type, one of Hostname, ExternalIP or InternalIP.
  type:String
}
# NodeAddress contains information for the node's address.
type io_k8s_api_core_v1_NodeAddressResult {
  # The node address.
  address:String
  # Node address type, one of Hostname, ExternalIP or InternalIP.
  type:String
}
# Node affinity is a group of node affinity scheduling rules.
input io_k8s_api_core_v1_NodeAffinityInput {
  # The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.
  preferredDuringSchedulingIgnoredDuringExecution:[io_k8s_api_core_v1_PreferredSchedulingTermInput]
  # A node selector represents the union of the results of one or more label queries over a set of nodes; that is, it represents the OR of the selectors represented by the node selector terms.
  requiredDuringSchedulingIgnoredDuringExecution:io_k8s_api_core_v1_NodeSelectorInput
}
# Node affinity is a group of node affinity scheduling rules.
type io_k8s_api_core_v1_NodeAffinityResult {
  # The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.
  preferredDuringSchedulingIgnoredDuringExecution:[io_k8s_api_core_v1_PreferredSchedulingTermResult]
  # A node selector represents the union of the results of one or more label queries over a set of nodes; that is, it represents the OR of the selectors represented by the node selector terms.
  requiredDuringSchedulingIgnoredDuringExecution:io_k8s_api_core_v1_NodeSelectorResult
}
# NodeCondition contains condition information for a node.
input io_k8s_api_core_v1_NodeConditionInput {
  # Human readable message indicating details about last transition.
  message:String
  # (brief) reason for the condition's last transition.
  reason:String
  # Status of the condition, one of True, False, Unknown.
  status:String
  # Type of node condition.
  type:String
  # Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
  lastHeartbeatTime:String
  # Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
  lastTransitionTime:String
}
# NodeCondition contains condition information for a node.
type io_k8s_api_core_v1_NodeConditionResult {
  # Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
  lastHeartbeatTime:String
  # Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
  lastTransitionTime:String
  # Human readable message indicating details about last transition.
  message:String
  # (brief) reason for the condition's last transition.
  reason:String
  # Status of the condition, one of True, False, Unknown.
  status:String
  # Type of node condition.
  type:String
}
# NodeConfigSource specifies a source of node configuration. Exactly one subfield (excluding metadata) must be non-nil.
input io_k8s_api_core_v1_NodeConfigSourceInput {
  # ConfigMapNodeConfigSource contains the information to reference a ConfigMap as a config source for the Node.
  configMap:io_k8s_api_core_v1_ConfigMapNodeConfigSourceInput
}
# NodeConfigSource specifies a source of node configuration. Exactly one subfield (excluding metadata) must be non-nil.
type io_k8s_api_core_v1_NodeConfigSourceResult {
  # ConfigMapNodeConfigSource contains the information to reference a ConfigMap as a config source for the Node.
  configMap:io_k8s_api_core_v1_ConfigMapNodeConfigSourceResult
}
# NodeConfigStatus describes the status of the config assigned by Node.Spec.ConfigSource.
input io_k8s_api_core_v1_NodeConfigStatusInput {
  # NodeConfigSource specifies a source of node configuration. Exactly one subfield (excluding metadata) must be non-nil.
  active:io_k8s_api_core_v1_NodeConfigSourceInput
  # NodeConfigSource specifies a source of node configuration. Exactly one subfield (excluding metadata) must be non-nil.
  assigned:io_k8s_api_core_v1_NodeConfigSourceInput
  # Error describes any problems reconciling the Spec.ConfigSource to the Active config. Errors may occur, for example, attempting to checkpoint Spec.ConfigSource to the local Assigned record, attempting to checkpoint the payload associated with Spec.ConfigSource, attempting to load or validate the Assigned config, etc. Errors may occur at different points while syncing config. Earlier errors (e.g. download or checkpointing errors) will not result in a rollback to LastKnownGood, and may resolve across Kubelet retries. Later errors (e.g. loading or validating a checkpointed config) will result in a rollback to LastKnownGood. In the latter case, it is usually possible to resolve the error by fixing the config assigned in Spec.ConfigSource. You can find additional information for debugging by searching the error message in the Kubelet log. Error is a human-readable description of the error state; machines can check whether or not Error is empty, but should not rely on the stability of the Error text across Kubelet versions.
  error:String
  # NodeConfigSource specifies a source of node configuration. Exactly one subfield (excluding metadata) must be non-nil.
  lastKnownGood:io_k8s_api_core_v1_NodeConfigSourceInput
}
# NodeConfigStatus describes the status of the config assigned by Node.Spec.ConfigSource.
type io_k8s_api_core_v1_NodeConfigStatusResult {
  # NodeConfigSource specifies a source of node configuration. Exactly one subfield (excluding metadata) must be non-nil.
  active:io_k8s_api_core_v1_NodeConfigSourceResult
  # NodeConfigSource specifies a source of node configuration. Exactly one subfield (excluding metadata) must be non-nil.
  assigned:io_k8s_api_core_v1_NodeConfigSourceResult
  # Error describes any problems reconciling the Spec.ConfigSource to the Active config. Errors may occur, for example, attempting to checkpoint Spec.ConfigSource to the local Assigned record, attempting to checkpoint the payload associated with Spec.ConfigSource, attempting to load or validate the Assigned config, etc. Errors may occur at different points while syncing config. Earlier errors (e.g. download or checkpointing errors) will not result in a rollback to LastKnownGood, and may resolve across Kubelet retries. Later errors (e.g. loading or validating a checkpointed config) will result in a rollback to LastKnownGood. In the latter case, it is usually possible to resolve the error by fixing the config assigned in Spec.ConfigSource. You can find additional information for debugging by searching the error message in the Kubelet log. Error is a human-readable description of the error state; machines can check whether or not Error is empty, but should not rely on the stability of the Error text across Kubelet versions.
  error:String
  # NodeConfigSource specifies a source of node configuration. Exactly one subfield (excluding metadata) must be non-nil.
  lastKnownGood:io_k8s_api_core_v1_NodeConfigSourceResult
}
# NodeDaemonEndpoints lists ports opened by daemons running on the Node.
input io_k8s_api_core_v1_NodeDaemonEndpointsInput {
  # DaemonEndpoint contains information about a single Daemon endpoint.
  kubeletEndpoint:io_k8s_api_core_v1_DaemonEndpointInput
}
# NodeDaemonEndpoints lists ports opened by daemons running on the Node.
type io_k8s_api_core_v1_NodeDaemonEndpointsResult {
  # DaemonEndpoint contains information about a single Daemon endpoint.
  kubeletEndpoint:io_k8s_api_core_v1_DaemonEndpointResult
}
# Node is a worker node in Kubernetes. Each node will have a unique identifier in the cache (i.e. in etcd).
input io_k8s_api_core_v1_NodeInput {
  # NodeStatus is information about the current status of a node.
  status:io_k8s_api_core_v1_NodeStatusInput
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  # NodeSpec describes the attributes that a node is created with.
  spec:io_k8s_api_core_v1_NodeSpecInput
}
# NodeList is the whole list of all Nodes which have been registered with master.
type io_k8s_api_core_v1_NodeListResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # List of nodes
  items:[io_k8s_api_core_v1_NodeResult]
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
# Node is a worker node in Kubernetes. Each node will have a unique identifier in the cache (i.e. in etcd).
type io_k8s_api_core_v1_NodeResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  # NodeSpec describes the attributes that a node is created with.
  spec:io_k8s_api_core_v1_NodeSpecResult
  # NodeStatus is information about the current status of a node.
  status:io_k8s_api_core_v1_NodeStatusResult
}
# A node selector represents the union of the results of one or more label queries over a set of nodes; that is, it represents the OR of the selectors represented by the node selector terms.
input io_k8s_api_core_v1_NodeSelectorInput {
  # Required. A list of node selector terms. The terms are ORed.
  nodeSelectorTerms:[io_k8s_api_core_v1_NodeSelectorTermInput]
}
# A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
input io_k8s_api_core_v1_NodeSelectorRequirementInput {
  # The label key that the selector applies to.
  key:String
  # Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
  operator:String
  # An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
  values:[String]
}
# A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type io_k8s_api_core_v1_NodeSelectorRequirementResult {
  # The label key that the selector applies to.
  key:String
  # Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
  operator:String
  # An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
  values:[String]
}
# A node selector represents the union of the results of one or more label queries over a set of nodes; that is, it represents the OR of the selectors represented by the node selector terms.
type io_k8s_api_core_v1_NodeSelectorResult {
  # Required. A list of node selector terms. The terms are ORed.
  nodeSelectorTerms:[io_k8s_api_core_v1_NodeSelectorTermResult]
}
# A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
input io_k8s_api_core_v1_NodeSelectorTermInput {
  # A list of node selector requirements by node's labels.
  matchExpressions:[io_k8s_api_core_v1_NodeSelectorRequirementInput]
  # A list of node selector requirements by node's fields.
  matchFields:[io_k8s_api_core_v1_NodeSelectorRequirementInput]
}
# A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
type io_k8s_api_core_v1_NodeSelectorTermResult {
  # A list of node selector requirements by node's labels.
  matchExpressions:[io_k8s_api_core_v1_NodeSelectorRequirementResult]
  # A list of node selector requirements by node's fields.
  matchFields:[io_k8s_api_core_v1_NodeSelectorRequirementResult]
}
# NodeSpec describes the attributes that a node is created with.
input io_k8s_api_core_v1_NodeSpecInput {
  # NodeConfigSource specifies a source of node configuration. Exactly one subfield (excluding metadata) must be non-nil.
  configSource:io_k8s_api_core_v1_NodeConfigSourceInput
  # Deprecated. Not all kubelets will set this field. Remove field after 1.13. see: https://issues.k8s.io/61966
  externalID:String
  # PodCIDR represents the pod IP range assigned to the node.
  podCIDR:String
  # podCIDRs represents the IP ranges assigned to the node for usage by Pods on that node. If this field is specified, the 0th entry must match the podCIDR field. It may contain at most 1 value for each of IPv4 and IPv6.
  podCIDRs:[String]
  # ID of the node assigned by the cloud provider in the format: <ProviderName>://<ProviderSpecificNodeID>
  providerID:String
  # If specified, the node's taints.
  taints:[io_k8s_api_core_v1_TaintInput]
  # Unschedulable controls node schedulability of new pods. By default, node is schedulable. More info: https://kubernetes.io/docs/concepts/nodes/node/#manual-node-administration
  unschedulable:Boolean
}
# NodeSpec describes the attributes that a node is created with.
type io_k8s_api_core_v1_NodeSpecResult {
  # NodeConfigSource specifies a source of node configuration. Exactly one subfield (excluding metadata) must be non-nil.
  configSource:io_k8s_api_core_v1_NodeConfigSourceResult
  # Deprecated. Not all kubelets will set this field. Remove field after 1.13. see: https://issues.k8s.io/61966
  externalID:String
  # PodCIDR represents the pod IP range assigned to the node.
  podCIDR:String
  # podCIDRs represents the IP ranges assigned to the node for usage by Pods on that node. If this field is specified, the 0th entry must match the podCIDR field. It may contain at most 1 value for each of IPv4 and IPv6.
  podCIDRs:[String]
  # ID of the node assigned by the cloud provider in the format: <ProviderName>://<ProviderSpecificNodeID>
  providerID:String
  # If specified, the node's taints.
  taints:[io_k8s_api_core_v1_TaintResult]
  # Unschedulable controls node schedulability of new pods. By default, node is schedulable. More info: https://kubernetes.io/docs/concepts/nodes/node/#manual-node-administration
  unschedulable:Boolean
}
# NodeStatus is information about the current status of a node.
input io_k8s_api_core_v1_NodeStatusInput {
  # NodeDaemonEndpoints lists ports opened by daemons running on the Node.
  daemonEndpoints:io_k8s_api_core_v1_NodeDaemonEndpointsInput
  # List of container images on this node
  images:[io_k8s_api_core_v1_ContainerImageInput]
  # NodeSystemInfo is a set of ids/uuids to uniquely identify the node.
  nodeInfo:io_k8s_api_core_v1_NodeSystemInfoInput
  # List of volumes that are attached to the node.
  volumesAttached:[io_k8s_api_core_v1_AttachedVolumeInput]
  # List of addresses reachable to the node. Queried from cloud provider, if available. More info: https://kubernetes.io/docs/concepts/nodes/node/#addresses Note: This field is declared as mergeable, but the merge key is not sufficiently unique, which can cause data corruption when it is merged. Callers should instead use a full-replacement patch. See http://pr.k8s.io/79391 for an example.
  addresses:[io_k8s_api_core_v1_NodeAddressInput]
  # Conditions is an array of current observed node conditions. More info: https://kubernetes.io/docs/concepts/nodes/node/#condition
  conditions:[io_k8s_api_core_v1_NodeConditionInput]
  # NodeConfigStatus describes the status of the config assigned by Node.Spec.ConfigSource.
  config:io_k8s_api_core_v1_NodeConfigStatusInput
  # NodePhase is the recently observed lifecycle phase of the node. More info: https://kubernetes.io/docs/concepts/nodes/node/#phase The field is never populated, and now is deprecated.
  phase:String
  # List of attachable volumes in use (mounted) by the node.
  volumesInUse:[String]
}
# NodeStatus is information about the current status of a node.
type io_k8s_api_core_v1_NodeStatusResult {
  # List of addresses reachable to the node. Queried from cloud provider, if available. More info: https://kubernetes.io/docs/concepts/nodes/node/#addresses Note: This field is declared as mergeable, but the merge key is not sufficiently unique, which can cause data corruption when it is merged. Callers should instead use a full-replacement patch. See http://pr.k8s.io/79391 for an example.
  addresses:[io_k8s_api_core_v1_NodeAddressResult]
  # Conditions is an array of current observed node conditions. More info: https://kubernetes.io/docs/concepts/nodes/node/#condition
  conditions:[io_k8s_api_core_v1_NodeConditionResult]
  # NodeConfigStatus describes the status of the config assigned by Node.Spec.ConfigSource.
  config:io_k8s_api_core_v1_NodeConfigStatusResult
  # NodeDaemonEndpoints lists ports opened by daemons running on the Node.
  daemonEndpoints:io_k8s_api_core_v1_NodeDaemonEndpointsResult
  # List of container images on this node
  images:[io_k8s_api_core_v1_ContainerImageResult]
  # NodeSystemInfo is a set of ids/uuids to uniquely identify the node.
  nodeInfo:io_k8s_api_core_v1_NodeSystemInfoResult
  # NodePhase is the recently observed lifecycle phase of the node. More info: https://kubernetes.io/docs/concepts/nodes/node/#phase The field is never populated, and now is deprecated.
  phase:String
  # List of volumes that are attached to the node.
  volumesAttached:[io_k8s_api_core_v1_AttachedVolumeResult]
  # List of attachable volumes in use (mounted) by the node.
  volumesInUse:[String]
}
# NodeSystemInfo is a set of ids/uuids to uniquely identify the node.
input io_k8s_api_core_v1_NodeSystemInfoInput {
  # The Architecture reported by the node
  architecture:String
  # Kubelet Version reported by the node.
  kubeletVersion:String
  # SystemUUID reported by the node. For unique machine identification MachineID is preferred. This field is specific to Red Hat hosts https://access.redhat.com/documentation/en-US/Red_Hat_Subscription_Management/1/html/RHSM/getting-system-uuid.html
  systemUUID:String
  # KubeProxy Version reported by the node.
  kubeProxyVersion:String
  # MachineID reported by the node. For unique machine identification in the cluster this field is preferred. Learn more from man(5) machine-id: http://man7.org/linux/man-pages/man5/machine-id.5.html
  machineID:String
  # The Operating System reported by the node
  operatingSystem:String
  # OS Image reported by the node from /etc/os-release (e.g. Debian GNU/Linux 7 (wheezy)).
  osImage:String
  # Boot ID reported by the node.
  bootID:String
  # ContainerRuntime Version reported by the node through runtime remote API (e.g. docker://1.5.0).
  containerRuntimeVersion:String
  # Kernel Version reported by the node from 'uname -r' (e.g. 3.16.0-0.bpo.4-amd64).
  kernelVersion:String
}
# NodeSystemInfo is a set of ids/uuids to uniquely identify the node.
type io_k8s_api_core_v1_NodeSystemInfoResult {
  # The Architecture reported by the node
  architecture:String
  # Boot ID reported by the node.
  bootID:String
  # ContainerRuntime Version reported by the node through runtime remote API (e.g. docker://1.5.0).
  containerRuntimeVersion:String
  # Kernel Version reported by the node from 'uname -r' (e.g. 3.16.0-0.bpo.4-amd64).
  kernelVersion:String
  # KubeProxy Version reported by the node.
  kubeProxyVersion:String
  # Kubelet Version reported by the node.
  kubeletVersion:String
  # MachineID reported by the node. For unique machine identification in the cluster this field is preferred. Learn more from man(5) machine-id: http://man7.org/linux/man-pages/man5/machine-id.5.html
  machineID:String
  # The Operating System reported by the node
  operatingSystem:String
  # OS Image reported by the node from /etc/os-release (e.g. Debian GNU/Linux 7 (wheezy)).
  osImage:String
  # SystemUUID reported by the node. For unique machine identification MachineID is preferred. This field is specific to Red Hat hosts https://access.redhat.com/documentation/en-US/Red_Hat_Subscription_Management/1/html/RHSM/getting-system-uuid.html
  systemUUID:String
}
# ObjectFieldSelector selects an APIVersioned field of an object.
input io_k8s_api_core_v1_ObjectFieldSelectorInput {
  # Version of the schema the FieldPath is written in terms of, defaults to "v1".
  apiVersion:String
  # Path of the field to select in the specified API version.
  fieldPath:String
}
# ObjectFieldSelector selects an APIVersioned field of an object.
type io_k8s_api_core_v1_ObjectFieldSelectorResult {
  # Version of the schema the FieldPath is written in terms of, defaults to "v1".
  apiVersion:String
  # Path of the field to select in the specified API version.
  fieldPath:String
}
# ObjectReference contains enough information to let you inspect or modify the referred object.
input io_k8s_api_core_v1_ObjectReferenceInput {
  # UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
  uid:String
  # API version of the referent.
  apiVersion:String
  # If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object.
  fieldPath:String
  # Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
  name:String
  # Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
  namespace:String
  # Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
  resourceVersion:String
}
# ObjectReference contains enough information to let you inspect or modify the referred object.
type io_k8s_api_core_v1_ObjectReferenceResult {
  # API version of the referent.
  apiVersion:String
  # If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object.
  fieldPath:String
  # Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
  name:String
  # Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
  namespace:String
  # Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
  resourceVersion:String
  # UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
  uid:String
}
# PersistentVolumeClaimCondition contails details about state of pvc
input io_k8s_api_core_v1_PersistentVolumeClaimConditionInput {
  # Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
  lastProbeTime:String
  # Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
  lastTransitionTime:String
  # Human-readable message indicating details about last transition.
  message:String
  # Unique, this should be a short, machine understandable string that gives the reason for condition's last transition. If it reports "ResizeStarted" that means the underlying persistent volume is being resized.
  reason:String
  status:String
  type:String
}
# PersistentVolumeClaimCondition contails details about state of pvc
type io_k8s_api_core_v1_PersistentVolumeClaimConditionResult {
  # Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
  lastProbeTime:String
  # Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
  lastTransitionTime:String
  # Human-readable message indicating details about last transition.
  message:String
  # Unique, this should be a short, machine understandable string that gives the reason for condition's last transition. If it reports "ResizeStarted" that means the underlying persistent volume is being resized.
  reason:String
  status:String
  type:String
}
# PersistentVolumeClaim is a user's request for and claim to a persistent volume
input io_k8s_api_core_v1_PersistentVolumeClaimInput {
  # PersistentVolumeClaimStatus is the current status of a persistent volume claim.
  status:io_k8s_api_core_v1_PersistentVolumeClaimStatusInput
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  # PersistentVolumeClaimSpec describes the common attributes of storage devices and allows a Source for provider-specific attributes
  spec:io_k8s_api_core_v1_PersistentVolumeClaimSpecInput
}
# PersistentVolumeClaimList is a list of PersistentVolumeClaim items.
type io_k8s_api_core_v1_PersistentVolumeClaimListResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # A list of persistent volume claims. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
  items:[io_k8s_api_core_v1_PersistentVolumeClaimResult]
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
# PersistentVolumeClaim is a user's request for and claim to a persistent volume
type io_k8s_api_core_v1_PersistentVolumeClaimResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  # PersistentVolumeClaimSpec describes the common attributes of storage devices and allows a Source for provider-specific attributes
  spec:io_k8s_api_core_v1_PersistentVolumeClaimSpecResult
  # PersistentVolumeClaimStatus is the current status of a persistent volume claim.
  status:io_k8s_api_core_v1_PersistentVolumeClaimStatusResult
}
# PersistentVolumeClaimSpec describes the common attributes of storage devices and allows a Source for provider-specific attributes
input io_k8s_api_core_v1_PersistentVolumeClaimSpecInput {
  # AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
  accessModes:[String]
  # TypedLocalObjectReference contains enough information to let you locate the typed referenced object inside the same namespace.
  dataSource:io_k8s_api_core_v1_TypedLocalObjectReferenceInput
  # A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
  selector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorInput
  # Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
  storageClassName:String
  # volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec. This is a beta feature.
  volumeMode:String
  # VolumeName is the binding reference to the PersistentVolume backing this claim.
  volumeName:String
}
# PersistentVolumeClaimSpec describes the common attributes of storage devices and allows a Source for provider-specific attributes
type io_k8s_api_core_v1_PersistentVolumeClaimSpecResult {
  # AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
  accessModes:[String]
  # TypedLocalObjectReference contains enough information to let you locate the typed referenced object inside the same namespace.
  dataSource:io_k8s_api_core_v1_TypedLocalObjectReferenceResult
  # A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
  selector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorResult
  # Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
  storageClassName:String
  # volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec. This is a beta feature.
  volumeMode:String
  # VolumeName is the binding reference to the PersistentVolume backing this claim.
  volumeName:String
}
# PersistentVolumeClaimStatus is the current status of a persistent volume claim.
input io_k8s_api_core_v1_PersistentVolumeClaimStatusInput {
  # Current Condition of persistent volume claim. If underlying persistent volume is being resized then the Condition will be set to 'ResizeStarted'.
  conditions:[io_k8s_api_core_v1_PersistentVolumeClaimConditionInput]
  # Phase represents the current phase of PersistentVolumeClaim.
  phase:String
  # AccessModes contains the actual access modes the volume backing the PVC has. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
  accessModes:[String]
}
# PersistentVolumeClaimStatus is the current status of a persistent volume claim.
type io_k8s_api_core_v1_PersistentVolumeClaimStatusResult {
  # AccessModes contains the actual access modes the volume backing the PVC has. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
  accessModes:[String]
  # Current Condition of persistent volume claim. If underlying persistent volume is being resized then the Condition will be set to 'ResizeStarted'.
  conditions:[io_k8s_api_core_v1_PersistentVolumeClaimConditionResult]
  # Phase represents the current phase of PersistentVolumeClaim.
  phase:String
}
# PersistentVolumeClaimVolumeSource references the user's PVC in the same namespace. This volume finds the bound PV and mounts that volume for the pod. A PersistentVolumeClaimVolumeSource is, essentially, a wrapper around another type of volume that is owned by someone else (the system).
input io_k8s_api_core_v1_PersistentVolumeClaimVolumeSourceInput {
  # ClaimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
  claimName:String
  # Will force the ReadOnly setting in VolumeMounts. Default false.
  readOnly:Boolean
}
# PersistentVolumeClaimVolumeSource references the user's PVC in the same namespace. This volume finds the bound PV and mounts that volume for the pod. A PersistentVolumeClaimVolumeSource is, essentially, a wrapper around another type of volume that is owned by someone else (the system).
type io_k8s_api_core_v1_PersistentVolumeClaimVolumeSourceResult {
  # ClaimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
  claimName:String
  # Will force the ReadOnly setting in VolumeMounts. Default false.
  readOnly:Boolean
}
# PersistentVolume (PV) is a storage resource provisioned by an administrator. It is analogous to a node. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes
input io_k8s_api_core_v1_PersistentVolumeInput {
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  # PersistentVolumeSpec is the specification of a persistent volume.
  spec:io_k8s_api_core_v1_PersistentVolumeSpecInput
  # PersistentVolumeStatus is the current status of a persistent volume.
  status:io_k8s_api_core_v1_PersistentVolumeStatusInput
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
}
# PersistentVolumeList is a list of PersistentVolume items.
type io_k8s_api_core_v1_PersistentVolumeListResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # List of persistent volumes. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes
  items:[io_k8s_api_core_v1_PersistentVolumeResult]
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
# PersistentVolume (PV) is a storage resource provisioned by an administrator. It is analogous to a node. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes
type io_k8s_api_core_v1_PersistentVolumeResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  # PersistentVolumeSpec is the specification of a persistent volume.
  spec:io_k8s_api_core_v1_PersistentVolumeSpecResult
  # PersistentVolumeStatus is the current status of a persistent volume.
  status:io_k8s_api_core_v1_PersistentVolumeStatusResult
}
# PersistentVolumeSpec is the specification of a persistent volume.
input io_k8s_api_core_v1_PersistentVolumeSpecInput {
  # Represents a Rados Block Device mount that lasts the lifetime of a pod. RBD volumes support ownership management and SELinux relabeling.
  rbd:io_k8s_api_core_v1_RBDPersistentVolumeSourceInput
  # ObjectReference contains enough information to let you inspect or modify the referred object.
  claimRef:io_k8s_api_core_v1_ObjectReferenceInput
  # Represents a Glusterfs mount that lasts the lifetime of a pod. Glusterfs volumes do not support ownership management or SELinux relabeling.
  glusterfs:io_k8s_api_core_v1_GlusterfsPersistentVolumeSourceInput
  # Represents a host path mapped into a pod. Host path volumes do not support ownership management or SELinux relabeling.
  hostPath:io_k8s_api_core_v1_HostPathVolumeSourceInput
  # Represents a Quobyte mount that lasts the lifetime of a pod. Quobyte volumes do not support ownership management or SELinux relabeling.
  quobyte:io_k8s_api_core_v1_QuobyteVolumeSourceInput
  # A list of mount options, e.g. ["ro", "soft"]. Not validated - mount will simply fail if one is invalid. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes/#mount-options
  mountOptions:[String]
  # What happens to a persistent volume when released from its claim. Valid options are Retain (default for manually created PersistentVolumes), Delete (default for dynamically provisioned PersistentVolumes), and Recycle (deprecated). Recycle must be supported by the volume plugin underlying this PersistentVolume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#reclaiming
  persistentVolumeReclaimPolicy:String
  # AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
  azureDisk:io_k8s_api_core_v1_AzureDiskVolumeSourceInput
  # Represents a Fibre Channel volume. Fibre Channel volumes can only be mounted as read/write once. Fibre Channel volumes support ownership management and SELinux relabeling.
  fc:io_k8s_api_core_v1_FCVolumeSourceInput
  # Represents a StorageOS persistent volume resource.
  storageos:io_k8s_api_core_v1_StorageOSPersistentVolumeSourceInput
  # volumeMode defines if a volume is intended to be used with a formatted filesystem or to remain in raw block state. Value of Filesystem is implied when not included in spec. This is a beta feature.
  volumeMode:String
  # Represents a Persistent Disk resource in Google Compute Engine.
  # A GCE PD must exist before mounting to a container. The disk must also be in the same GCE project and zone as the kubelet. A GCE PD can only be mounted as read/write once or read-only many times. GCE PDs support ownership management and SELinux relabeling.
  gcePersistentDisk:io_k8s_api_core_v1_GCEPersistentDiskVolumeSourceInput
  # ISCSIPersistentVolumeSource represents an ISCSI disk. ISCSI volumes can only be mounted as read/write once. ISCSI volumes support ownership management and SELinux relabeling.
  iscsi:io_k8s_api_core_v1_ISCSIPersistentVolumeSourceInput
  # Represents an NFS mount that lasts the lifetime of a pod. NFS volumes do not support ownership management or SELinux relabeling.
  nfs:io_k8s_api_core_v1_NFSVolumeSourceInput
  # VolumeNodeAffinity defines constraints that limit what nodes this volume can be accessed from.
  nodeAffinity:io_k8s_api_core_v1_VolumeNodeAffinityInput
  # AzureFile represents an Azure File Service mount on the host and bind mount to the pod.
  azureFile:io_k8s_api_core_v1_AzureFilePersistentVolumeSourceInput
  # Represents storage that is managed by an external CSI volume driver (Beta feature)
  csi:io_k8s_api_core_v1_CSIPersistentVolumeSourceInput
  # Represents a cinder volume resource in Openstack. A Cinder volume must exist before mounting to a container. The volume must also be in the same region as the kubelet. Cinder volumes support ownership management and SELinux relabeling.
  cinder:io_k8s_api_core_v1_CinderPersistentVolumeSourceInput
  # Local represents directly-attached storage with node affinity (Beta feature)
  local:io_k8s_api_core_v1_LocalVolumeSourceInput
  # Represents a Persistent Disk resource in AWS.
  # An AWS EBS disk must exist before mounting to a container. The disk must also be in the same AWS zone as the kubelet. An AWS EBS disk can only be mounted as read/write once. AWS EBS volumes support ownership management and SELinux relabeling.
  awsElasticBlockStore:io_k8s_api_core_v1_AWSElasticBlockStoreVolumeSourceInput
  # Represents a Flocker volume mounted by the Flocker agent. One and only one of datasetName and datasetUUID should be set. Flocker volumes do not support ownership management or SELinux relabeling.
  flocker:io_k8s_api_core_v1_FlockerVolumeSourceInput
  # PortworxVolumeSource represents a Portworx volume resource.
  portworxVolume:io_k8s_api_core_v1_PortworxVolumeSourceInput
  # ScaleIOPersistentVolumeSource represents a persistent ScaleIO volume
  scaleIO:io_k8s_api_core_v1_ScaleIOPersistentVolumeSourceInput
  # Name of StorageClass to which this persistent volume belongs. Empty value means that this volume does not belong to any StorageClass.
  storageClassName:String
  # Represents a Ceph Filesystem mount that lasts the lifetime of a pod Cephfs volumes do not support ownership management or SELinux relabeling.
  cephfs:io_k8s_api_core_v1_CephFSPersistentVolumeSourceInput
  # FlexPersistentVolumeSource represents a generic persistent volume resource that is provisioned/attached using an exec based plugin.
  flexVolume:io_k8s_api_core_v1_FlexPersistentVolumeSourceInput
  # Represents a vSphere volume resource.
  vsphereVolume:io_k8s_api_core_v1_VsphereVirtualDiskVolumeSourceInput
  # AccessModes contains all ways the volume can be mounted. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes
  accessModes:[String]
  # Represents a Photon Controller persistent disk resource.
  photonPersistentDisk:io_k8s_api_core_v1_PhotonPersistentDiskVolumeSourceInput
}
# PersistentVolumeSpec is the specification of a persistent volume.
type io_k8s_api_core_v1_PersistentVolumeSpecResult {
  # AccessModes contains all ways the volume can be mounted. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes
  accessModes:[String]
  # Represents a Persistent Disk resource in AWS.
  # An AWS EBS disk must exist before mounting to a container. The disk must also be in the same AWS zone as the kubelet. An AWS EBS disk can only be mounted as read/write once. AWS EBS volumes support ownership management and SELinux relabeling.
  awsElasticBlockStore:io_k8s_api_core_v1_AWSElasticBlockStoreVolumeSourceResult
  # AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
  azureDisk:io_k8s_api_core_v1_AzureDiskVolumeSourceResult
  # AzureFile represents an Azure File Service mount on the host and bind mount to the pod.
  azureFile:io_k8s_api_core_v1_AzureFilePersistentVolumeSourceResult
  # Represents a Ceph Filesystem mount that lasts the lifetime of a pod Cephfs volumes do not support ownership management or SELinux relabeling.
  cephfs:io_k8s_api_core_v1_CephFSPersistentVolumeSourceResult
  # Represents a cinder volume resource in Openstack. A Cinder volume must exist before mounting to a container. The volume must also be in the same region as the kubelet. Cinder volumes support ownership management and SELinux relabeling.
  cinder:io_k8s_api_core_v1_CinderPersistentVolumeSourceResult
  # ObjectReference contains enough information to let you inspect or modify the referred object.
  claimRef:io_k8s_api_core_v1_ObjectReferenceResult
  # Represents storage that is managed by an external CSI volume driver (Beta feature)
  csi:io_k8s_api_core_v1_CSIPersistentVolumeSourceResult
  # Represents a Fibre Channel volume. Fibre Channel volumes can only be mounted as read/write once. Fibre Channel volumes support ownership management and SELinux relabeling.
  fc:io_k8s_api_core_v1_FCVolumeSourceResult
  # FlexPersistentVolumeSource represents a generic persistent volume resource that is provisioned/attached using an exec based plugin.
  flexVolume:io_k8s_api_core_v1_FlexPersistentVolumeSourceResult
  # Represents a Flocker volume mounted by the Flocker agent. One and only one of datasetName and datasetUUID should be set. Flocker volumes do not support ownership management or SELinux relabeling.
  flocker:io_k8s_api_core_v1_FlockerVolumeSourceResult
  # Represents a Persistent Disk resource in Google Compute Engine.
  # A GCE PD must exist before mounting to a container. The disk must also be in the same GCE project and zone as the kubelet. A GCE PD can only be mounted as read/write once or read-only many times. GCE PDs support ownership management and SELinux relabeling.
  gcePersistentDisk:io_k8s_api_core_v1_GCEPersistentDiskVolumeSourceResult
  # Represents a Glusterfs mount that lasts the lifetime of a pod. Glusterfs volumes do not support ownership management or SELinux relabeling.
  glusterfs:io_k8s_api_core_v1_GlusterfsPersistentVolumeSourceResult
  # Represents a host path mapped into a pod. Host path volumes do not support ownership management or SELinux relabeling.
  hostPath:io_k8s_api_core_v1_HostPathVolumeSourceResult
  # ISCSIPersistentVolumeSource represents an ISCSI disk. ISCSI volumes can only be mounted as read/write once. ISCSI volumes support ownership management and SELinux relabeling.
  iscsi:io_k8s_api_core_v1_ISCSIPersistentVolumeSourceResult
  # Local represents directly-attached storage with node affinity (Beta feature)
  local:io_k8s_api_core_v1_LocalVolumeSourceResult
  # A list of mount options, e.g. ["ro", "soft"]. Not validated - mount will simply fail if one is invalid. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes/#mount-options
  mountOptions:[String]
  # Represents an NFS mount that lasts the lifetime of a pod. NFS volumes do not support ownership management or SELinux relabeling.
  nfs:io_k8s_api_core_v1_NFSVolumeSourceResult
  # VolumeNodeAffinity defines constraints that limit what nodes this volume can be accessed from.
  nodeAffinity:io_k8s_api_core_v1_VolumeNodeAffinityResult
  # What happens to a persistent volume when released from its claim. Valid options are Retain (default for manually created PersistentVolumes), Delete (default for dynamically provisioned PersistentVolumes), and Recycle (deprecated). Recycle must be supported by the volume plugin underlying this PersistentVolume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#reclaiming
  persistentVolumeReclaimPolicy:String
  # Represents a Photon Controller persistent disk resource.
  photonPersistentDisk:io_k8s_api_core_v1_PhotonPersistentDiskVolumeSourceResult
  # PortworxVolumeSource represents a Portworx volume resource.
  portworxVolume:io_k8s_api_core_v1_PortworxVolumeSourceResult
  # Represents a Quobyte mount that lasts the lifetime of a pod. Quobyte volumes do not support ownership management or SELinux relabeling.
  quobyte:io_k8s_api_core_v1_QuobyteVolumeSourceResult
  # Represents a Rados Block Device mount that lasts the lifetime of a pod. RBD volumes support ownership management and SELinux relabeling.
  rbd:io_k8s_api_core_v1_RBDPersistentVolumeSourceResult
  # ScaleIOPersistentVolumeSource represents a persistent ScaleIO volume
  scaleIO:io_k8s_api_core_v1_ScaleIOPersistentVolumeSourceResult
  # Name of StorageClass to which this persistent volume belongs. Empty value means that this volume does not belong to any StorageClass.
  storageClassName:String
  # Represents a StorageOS persistent volume resource.
  storageos:io_k8s_api_core_v1_StorageOSPersistentVolumeSourceResult
  # volumeMode defines if a volume is intended to be used with a formatted filesystem or to remain in raw block state. Value of Filesystem is implied when not included in spec. This is a beta feature.
  volumeMode:String
  # Represents a vSphere volume resource.
  vsphereVolume:io_k8s_api_core_v1_VsphereVirtualDiskVolumeSourceResult
}
# PersistentVolumeStatus is the current status of a persistent volume.
input io_k8s_api_core_v1_PersistentVolumeStatusInput {
  # A human-readable message indicating details about why the volume is in this state.
  message:String
  # Phase indicates if a volume is available, bound to a claim, or released by a claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#phase
  phase:String
  # Reason is a brief CamelCase string that describes any failure and is meant for machine parsing and tidy display in the CLI.
  reason:String
}
# PersistentVolumeStatus is the current status of a persistent volume.
type io_k8s_api_core_v1_PersistentVolumeStatusResult {
  # A human-readable message indicating details about why the volume is in this state.
  message:String
  # Phase indicates if a volume is available, bound to a claim, or released by a claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#phase
  phase:String
  # Reason is a brief CamelCase string that describes any failure and is meant for machine parsing and tidy display in the CLI.
  reason:String
}
# Represents a Photon Controller persistent disk resource.
input io_k8s_api_core_v1_PhotonPersistentDiskVolumeSourceInput {
  # Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
  fsType:String
  # ID that identifies Photon Controller persistent disk
  pdID:String
}
# Represents a Photon Controller persistent disk resource.
type io_k8s_api_core_v1_PhotonPersistentDiskVolumeSourceResult {
  # Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
  fsType:String
  # ID that identifies Photon Controller persistent disk
  pdID:String
}
# Pod affinity is a group of inter pod affinity scheduling rules.
input io_k8s_api_core_v1_PodAffinityInput {
  # If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
  requiredDuringSchedulingIgnoredDuringExecution:[io_k8s_api_core_v1_PodAffinityTermInput]
  # The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
  preferredDuringSchedulingIgnoredDuringExecution:[io_k8s_api_core_v1_WeightedPodAffinityTermInput]
}
# Pod affinity is a group of inter pod affinity scheduling rules.
type io_k8s_api_core_v1_PodAffinityResult {
  # The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
  preferredDuringSchedulingIgnoredDuringExecution:[io_k8s_api_core_v1_WeightedPodAffinityTermResult]
  # If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
  requiredDuringSchedulingIgnoredDuringExecution:[io_k8s_api_core_v1_PodAffinityTermResult]
}
# Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
input io_k8s_api_core_v1_PodAffinityTermInput {
  # A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
  labelSelector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorInput
  # namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
  namespaces:[String]
  # This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
  topologyKey:String
}
# Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
type io_k8s_api_core_v1_PodAffinityTermResult {
  # A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
  labelSelector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorResult
  # namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
  namespaces:[String]
  # This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
  topologyKey:String
}
# Pod anti affinity is a group of inter pod anti affinity scheduling rules.
input io_k8s_api_core_v1_PodAntiAffinityInput {
  # The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
  preferredDuringSchedulingIgnoredDuringExecution:[io_k8s_api_core_v1_WeightedPodAffinityTermInput]
  # If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
  requiredDuringSchedulingIgnoredDuringExecution:[io_k8s_api_core_v1_PodAffinityTermInput]
}
# Pod anti affinity is a group of inter pod anti affinity scheduling rules.
type io_k8s_api_core_v1_PodAntiAffinityResult {
  # The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
  preferredDuringSchedulingIgnoredDuringExecution:[io_k8s_api_core_v1_WeightedPodAffinityTermResult]
  # If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
  requiredDuringSchedulingIgnoredDuringExecution:[io_k8s_api_core_v1_PodAffinityTermResult]
}
# PodCondition contains details for the current condition of this pod.
input io_k8s_api_core_v1_PodConditionInput {
  # Human-readable message indicating details about last transition.
  message:String
  # Unique, one-word, CamelCase reason for the condition's last transition.
  reason:String
  # Status is the status of the condition. Can be True, False, Unknown. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions
  status:String
  # Type is the type of the condition. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions
  type:String
  # Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
  lastProbeTime:String
  # Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
  lastTransitionTime:String
}
# PodCondition contains details for the current condition of this pod.
type io_k8s_api_core_v1_PodConditionResult {
  # Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
  lastProbeTime:String
  # Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
  lastTransitionTime:String
  # Human-readable message indicating details about last transition.
  message:String
  # Unique, one-word, CamelCase reason for the condition's last transition.
  reason:String
  # Status is the status of the condition. Can be True, False, Unknown. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions
  status:String
  # Type is the type of the condition. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions
  type:String
}
# PodDNSConfig defines the DNS parameters of a pod in addition to those generated from DNSPolicy.
input io_k8s_api_core_v1_PodDNSConfigInput {
  # A list of DNS name server IP addresses. This will be appended to the base nameservers generated from DNSPolicy. Duplicated nameservers will be removed.
  nameservers:[String]
  # A list of DNS resolver options. This will be merged with the base options generated from DNSPolicy. Duplicated entries will be removed. Resolution options given in Options will override those that appear in the base DNSPolicy.
  options:[io_k8s_api_core_v1_PodDNSConfigOptionInput]
  # A list of DNS search domains for host-name lookup. This will be appended to the base search paths generated from DNSPolicy. Duplicated search paths will be removed.
  searches:[String]
}
# PodDNSConfigOption defines DNS resolver options of a pod.
input io_k8s_api_core_v1_PodDNSConfigOptionInput {
  # Required.
  name:String
  value:String
}
# PodDNSConfigOption defines DNS resolver options of a pod.
type io_k8s_api_core_v1_PodDNSConfigOptionResult {
  # Required.
  name:String
  value:String
}
# PodDNSConfig defines the DNS parameters of a pod in addition to those generated from DNSPolicy.
type io_k8s_api_core_v1_PodDNSConfigResult {
  # A list of DNS name server IP addresses. This will be appended to the base nameservers generated from DNSPolicy. Duplicated nameservers will be removed.
  nameservers:[String]
  # A list of DNS resolver options. This will be merged with the base options generated from DNSPolicy. Duplicated entries will be removed. Resolution options given in Options will override those that appear in the base DNSPolicy.
  options:[io_k8s_api_core_v1_PodDNSConfigOptionResult]
  # A list of DNS search domains for host-name lookup. This will be appended to the base search paths generated from DNSPolicy. Duplicated search paths will be removed.
  searches:[String]
}
# IP address information for entries in the (plural) PodIPs field. Each entry includes:
#    IP: An IP address allocated to the pod. Routable at least within the cluster.
input io_k8s_api_core_v1_PodIPInput {
  # ip is an IP address (IPv4 or IPv6) assigned to the pod
  ip:String
}
# IP address information for entries in the (plural) PodIPs field. Each entry includes:
#    IP: An IP address allocated to the pod. Routable at least within the cluster.
type io_k8s_api_core_v1_PodIPResult {
  # ip is an IP address (IPv4 or IPv6) assigned to the pod
  ip:String
}
# Pod is a collection of containers that can run on a host. This resource is created by clients and scheduled onto hosts.
input io_k8s_api_core_v1_PodInput {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  # PodSpec is a description of a pod.
  spec:io_k8s_api_core_v1_PodSpecInput
  # PodStatus represents information about the status of a pod. Status may trail the actual state of a system, especially if the node that hosts the pod cannot contact the control plane.
  status:io_k8s_api_core_v1_PodStatusInput
}
# PodList is a list of Pods.
type io_k8s_api_core_v1_PodListResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # List of pods. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
  items:[io_k8s_api_core_v1_PodResult]
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
# PodReadinessGate contains the reference to a pod condition
input io_k8s_api_core_v1_PodReadinessGateInput {
  # ConditionType refers to a condition in the pod's condition list with matching type.
  conditionType:String
}
# PodReadinessGate contains the reference to a pod condition
type io_k8s_api_core_v1_PodReadinessGateResult {
  # ConditionType refers to a condition in the pod's condition list with matching type.
  conditionType:String
}
# Pod is a collection of containers that can run on a host. This resource is created by clients and scheduled onto hosts.
type io_k8s_api_core_v1_PodResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  # PodSpec is a description of a pod.
  spec:io_k8s_api_core_v1_PodSpecResult
  # PodStatus represents information about the status of a pod. Status may trail the actual state of a system, especially if the node that hosts the pod cannot contact the control plane.
  status:io_k8s_api_core_v1_PodStatusResult
}
# PodSecurityContext holds pod-level security attributes and common container settings. Some fields are also present in container.securityContext.  Field values of container.securityContext take precedence over field values of PodSecurityContext.
input io_k8s_api_core_v1_PodSecurityContextInput {
  # A list of groups applied to the first process run in each container, in addition to the container's primary GID.  If unspecified, no groups will be added to any container.
  supplementalGroups:[Int]
  # Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported sysctls (by the container runtime) might fail to launch.
  sysctls:[io_k8s_api_core_v1_SysctlInput]
  # WindowsSecurityContextOptions contain Windows-specific options and credentials.
  windowsOptions:io_k8s_api_core_v1_WindowsSecurityContextOptionsInput
  # A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod:
  # 1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw----
  # If unset, the Kubelet will not modify the ownership and permissions of any volume.
  fsGroup:Int
  # The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.
  runAsGroup:Int
  # Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
  runAsNonRoot:Boolean
  # The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.
  runAsUser:Int
  # SELinuxOptions are the labels to be applied to the container
  seLinuxOptions:io_k8s_api_core_v1_SELinuxOptionsInput
}
# PodSecurityContext holds pod-level security attributes and common container settings. Some fields are also present in container.securityContext.  Field values of container.securityContext take precedence over field values of PodSecurityContext.
type io_k8s_api_core_v1_PodSecurityContextResult {
  # A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod:
  # 1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw----
  # If unset, the Kubelet will not modify the ownership and permissions of any volume.
  fsGroup:Int
  # The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.
  runAsGroup:Int
  # Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
  runAsNonRoot:Boolean
  # The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.
  runAsUser:Int
  # SELinuxOptions are the labels to be applied to the container
  seLinuxOptions:io_k8s_api_core_v1_SELinuxOptionsResult
  # A list of groups applied to the first process run in each container, in addition to the container's primary GID.  If unspecified, no groups will be added to any container.
  supplementalGroups:[Int]
  # Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported sysctls (by the container runtime) might fail to launch.
  sysctls:[io_k8s_api_core_v1_SysctlResult]
  # WindowsSecurityContextOptions contain Windows-specific options and credentials.
  windowsOptions:io_k8s_api_core_v1_WindowsSecurityContextOptionsResult
}
# PodSpec is a description of a pod.
input io_k8s_api_core_v1_PodSpecInput {
  # PodDNSConfig defines the DNS parameters of a pod in addition to those generated from DNSPolicy.
  dnsConfig:io_k8s_api_core_v1_PodDNSConfigInput
  # Use the host's ipc namespace. Optional: Default to false.
  hostIPC:Boolean
  # If specified, indicates the pod's priority. "system-node-critical" and "system-cluster-critical" are two special keywords which indicate the highest priorities with the former being the highest priority. Any other name must be defined by creating a PriorityClass object with that name. If not specified, the pod priority will be default or zero if there is no default.
  priorityClassName:String
  # Share a single process namespace between all of the containers in a pod. When this is set containers will be able to view and signal processes from other containers in the same pod, and the first process in each container will not be assigned PID 1. HostPID and ShareProcessNamespace cannot both be set. Optional: Default to false.
  shareProcessNamespace:Boolean
  # List of volumes that can be mounted by containers belonging to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes
  volumes:[io_k8s_api_core_v1_VolumeInput]
  # HostAliases is an optional list of hosts and IPs that will be injected into the pod's hosts file if specified. This is only valid for non-hostNetwork pods.
  hostAliases:[io_k8s_api_core_v1_HostAliasInput]
  # Use the host's pid namespace. Optional: Default to false.
  hostPID:Boolean
  # Optional duration in seconds the pod may be active on the node relative to StartTime before the system will actively try to mark it failed and kill associated containers. Value must be a positive integer.
  activeDeadlineSeconds:Int
  # ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec. If specified, these secrets will be passed to individual puller implementations for them to use. For example, in the case of docker, only DockerConfig type secrets are honored. More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod
  imagePullSecrets:[io_k8s_api_core_v1_LocalObjectReferenceInput]
  # AutomountServiceAccountToken indicates whether a service account token should be automatically mounted.
  automountServiceAccountToken:Boolean
  # Restart policy for all containers within the pod. One of Always, OnFailure, Never. Default to Always. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy
  restartPolicy:String
  # RuntimeClassName refers to a RuntimeClass object in the node.k8s.io group, which should be used to run this pod.  If no RuntimeClass resource matches the named class, the pod will not be run. If unset or empty, the "legacy" RuntimeClass will be used, which is an implicit class with an empty definition that uses the default runtime handler. More info: https://git.k8s.io/enhancements/keps/sig-node/runtime-class.md This is a beta feature as of Kubernetes v1.14.
  runtimeClassName:String
  # PodSecurityContext holds pod-level security attributes and common container settings. Some fields are also present in container.securityContext.  Field values of container.securityContext take precedence over field values of PodSecurityContext.
  securityContext:io_k8s_api_core_v1_PodSecurityContextInput
  # If specified, the pod's tolerations.
  tolerations:[io_k8s_api_core_v1_TolerationInput]
  # NodeName is a request to schedule this pod onto a specific node. If it is non-empty, the scheduler simply schedules this pod onto that node, assuming that it fits resource requirements.
  nodeName:String
  # The priority value. Various system components use this field to find the priority of the pod. When Priority Admission Controller is enabled, it prevents users from setting this field. The admission controller populates this field from PriorityClassName. The higher the value, the higher the priority.
  priority:Int
  # ServiceAccountName is the name of the ServiceAccount to use to run this pod. More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
  serviceAccountName:String
  # Optional duration in seconds the pod needs to terminate gracefully. May be decreased in delete request. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. Defaults to 30 seconds.
  terminationGracePeriodSeconds:Int
  # Affinity is a group of affinity scheduling rules.
  affinity:io_k8s_api_core_v1_AffinityInput
  # Specifies the hostname of the Pod If not specified, the pod's hostname will be set to a system-defined value.
  hostname:String
  # If specified, all readiness gates will be evaluated for pod readiness. A pod is ready when all its containers are ready AND all conditions specified in the readiness gates have status equal to "True" More info: https://git.k8s.io/enhancements/keps/sig-network/0007-pod-ready%2B%2B.md
  readinessGates:[io_k8s_api_core_v1_PodReadinessGateInput]
  # DeprecatedServiceAccount is a depreciated alias for ServiceAccountName. Deprecated: Use serviceAccountName instead.
  serviceAccount:String
  # Set DNS policy for the pod. Defaults to "ClusterFirst". Valid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'. DNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy. To have DNS options set along with hostNetwork, you have to specify DNS policy explicitly to 'ClusterFirstWithHostNet'.
  dnsPolicy:String
  # EnableServiceLinks indicates whether information about services should be injected into pod's environment variables, matching the syntax of Docker links. Optional: Defaults to true.
  enableServiceLinks:Boolean
  # PreemptionPolicy is the Policy for preempting pods with lower priority. One of Never, PreemptLowerPriority. Defaults to PreemptLowerPriority if unset. This field is alpha-level and is only honored by servers that enable the NonPreemptingPriority feature.
  preemptionPolicy:String
  # If specified, the pod will be dispatched by specified scheduler. If not specified, the pod will be dispatched by default scheduler.
  schedulerName:String
  # TopologySpreadConstraints describes how a group of pods ought to spread across topology domains. Scheduler will schedule pods in a way which abides by the constraints. This field is alpha-level and is only honored by clusters that enables the EvenPodsSpread feature. All topologySpreadConstraints are ANDed.
  topologySpreadConstraints:[io_k8s_api_core_v1_TopologySpreadConstraintInput]
  # List of containers belonging to the pod. Containers cannot currently be added or removed. There must be at least one container in a Pod. Cannot be updated.
  containers:[io_k8s_api_core_v1_ContainerInput]
  # List of ephemeral containers run in this pod. Ephemeral containers may be run in an existing pod to perform user-initiated actions such as debugging. This list cannot be specified when creating a pod, and it cannot be modified by updating the pod spec. In order to add an ephemeral container to an existing pod, use the pod's ephemeralcontainers subresource. This field is alpha-level and is only honored by servers that enable the EphemeralContainers feature.
  ephemeralContainers:[io_k8s_api_core_v1_EphemeralContainerInput]
  # Host networking requested for this pod. Use the host's network namespace. If this option is set, the ports that will be used must be specified. Default to false.
  hostNetwork:Boolean
  # List of initialization containers belonging to the pod. Init containers are executed in order prior to containers being started. If any init container fails, the pod is considered to have failed and is handled according to its restartPolicy. The name for an init container or normal container must be unique among all containers. Init containers may not have Lifecycle actions, Readiness probes, Liveness probes, or Startup probes. The resourceRequirements of an init container are taken into account during scheduling by finding the highest request/limit for each resource type, and then using the max of of that value or the sum of the normal containers. Limits are applied to init containers in a similar fashion. Init containers cannot currently be added or removed. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  initContainers:[io_k8s_api_core_v1_ContainerInput]
  # If specified, the fully qualified Pod hostname will be "<hostname>.<subdomain>.<pod namespace>.svc.<cluster domain>". If not specified, the pod will not have a domainname at all.
  subdomain:String
}
# PodSpec is a description of a pod.
type io_k8s_api_core_v1_PodSpecResult {
  # Optional duration in seconds the pod may be active on the node relative to StartTime before the system will actively try to mark it failed and kill associated containers. Value must be a positive integer.
  activeDeadlineSeconds:Int
  # Affinity is a group of affinity scheduling rules.
  affinity:io_k8s_api_core_v1_AffinityResult
  # AutomountServiceAccountToken indicates whether a service account token should be automatically mounted.
  automountServiceAccountToken:Boolean
  # List of containers belonging to the pod. Containers cannot currently be added or removed. There must be at least one container in a Pod. Cannot be updated.
  containers:[io_k8s_api_core_v1_ContainerResult]
  # PodDNSConfig defines the DNS parameters of a pod in addition to those generated from DNSPolicy.
  dnsConfig:io_k8s_api_core_v1_PodDNSConfigResult
  # Set DNS policy for the pod. Defaults to "ClusterFirst". Valid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'. DNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy. To have DNS options set along with hostNetwork, you have to specify DNS policy explicitly to 'ClusterFirstWithHostNet'.
  dnsPolicy:String
  # EnableServiceLinks indicates whether information about services should be injected into pod's environment variables, matching the syntax of Docker links. Optional: Defaults to true.
  enableServiceLinks:Boolean
  # List of ephemeral containers run in this pod. Ephemeral containers may be run in an existing pod to perform user-initiated actions such as debugging. This list cannot be specified when creating a pod, and it cannot be modified by updating the pod spec. In order to add an ephemeral container to an existing pod, use the pod's ephemeralcontainers subresource. This field is alpha-level and is only honored by servers that enable the EphemeralContainers feature.
  ephemeralContainers:[io_k8s_api_core_v1_EphemeralContainerResult]
  # HostAliases is an optional list of hosts and IPs that will be injected into the pod's hosts file if specified. This is only valid for non-hostNetwork pods.
  hostAliases:[io_k8s_api_core_v1_HostAliasResult]
  # Use the host's ipc namespace. Optional: Default to false.
  hostIPC:Boolean
  # Host networking requested for this pod. Use the host's network namespace. If this option is set, the ports that will be used must be specified. Default to false.
  hostNetwork:Boolean
  # Use the host's pid namespace. Optional: Default to false.
  hostPID:Boolean
  # Specifies the hostname of the Pod If not specified, the pod's hostname will be set to a system-defined value.
  hostname:String
  # ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec. If specified, these secrets will be passed to individual puller implementations for them to use. For example, in the case of docker, only DockerConfig type secrets are honored. More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod
  imagePullSecrets:[io_k8s_api_core_v1_LocalObjectReferenceResult]
  # List of initialization containers belonging to the pod. Init containers are executed in order prior to containers being started. If any init container fails, the pod is considered to have failed and is handled according to its restartPolicy. The name for an init container or normal container must be unique among all containers. Init containers may not have Lifecycle actions, Readiness probes, Liveness probes, or Startup probes. The resourceRequirements of an init container are taken into account during scheduling by finding the highest request/limit for each resource type, and then using the max of of that value or the sum of the normal containers. Limits are applied to init containers in a similar fashion. Init containers cannot currently be added or removed. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  initContainers:[io_k8s_api_core_v1_ContainerResult]
  # NodeName is a request to schedule this pod onto a specific node. If it is non-empty, the scheduler simply schedules this pod onto that node, assuming that it fits resource requirements.
  nodeName:String
  # PreemptionPolicy is the Policy for preempting pods with lower priority. One of Never, PreemptLowerPriority. Defaults to PreemptLowerPriority if unset. This field is alpha-level and is only honored by servers that enable the NonPreemptingPriority feature.
  preemptionPolicy:String
  # The priority value. Various system components use this field to find the priority of the pod. When Priority Admission Controller is enabled, it prevents users from setting this field. The admission controller populates this field from PriorityClassName. The higher the value, the higher the priority.
  priority:Int
  # If specified, indicates the pod's priority. "system-node-critical" and "system-cluster-critical" are two special keywords which indicate the highest priorities with the former being the highest priority. Any other name must be defined by creating a PriorityClass object with that name. If not specified, the pod priority will be default or zero if there is no default.
  priorityClassName:String
  # If specified, all readiness gates will be evaluated for pod readiness. A pod is ready when all its containers are ready AND all conditions specified in the readiness gates have status equal to "True" More info: https://git.k8s.io/enhancements/keps/sig-network/0007-pod-ready%2B%2B.md
  readinessGates:[io_k8s_api_core_v1_PodReadinessGateResult]
  # Restart policy for all containers within the pod. One of Always, OnFailure, Never. Default to Always. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy
  restartPolicy:String
  # RuntimeClassName refers to a RuntimeClass object in the node.k8s.io group, which should be used to run this pod.  If no RuntimeClass resource matches the named class, the pod will not be run. If unset or empty, the "legacy" RuntimeClass will be used, which is an implicit class with an empty definition that uses the default runtime handler. More info: https://git.k8s.io/enhancements/keps/sig-node/runtime-class.md This is a beta feature as of Kubernetes v1.14.
  runtimeClassName:String
  # If specified, the pod will be dispatched by specified scheduler. If not specified, the pod will be dispatched by default scheduler.
  schedulerName:String
  # PodSecurityContext holds pod-level security attributes and common container settings. Some fields are also present in container.securityContext.  Field values of container.securityContext take precedence over field values of PodSecurityContext.
  securityContext:io_k8s_api_core_v1_PodSecurityContextResult
  # DeprecatedServiceAccount is a depreciated alias for ServiceAccountName. Deprecated: Use serviceAccountName instead.
  serviceAccount:String
  # ServiceAccountName is the name of the ServiceAccount to use to run this pod. More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
  serviceAccountName:String
  # Share a single process namespace between all of the containers in a pod. When this is set containers will be able to view and signal processes from other containers in the same pod, and the first process in each container will not be assigned PID 1. HostPID and ShareProcessNamespace cannot both be set. Optional: Default to false.
  shareProcessNamespace:Boolean
  # If specified, the fully qualified Pod hostname will be "<hostname>.<subdomain>.<pod namespace>.svc.<cluster domain>". If not specified, the pod will not have a domainname at all.
  subdomain:String
  # Optional duration in seconds the pod needs to terminate gracefully. May be decreased in delete request. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. Defaults to 30 seconds.
  terminationGracePeriodSeconds:Int
  # If specified, the pod's tolerations.
  tolerations:[io_k8s_api_core_v1_TolerationResult]
  # TopologySpreadConstraints describes how a group of pods ought to spread across topology domains. Scheduler will schedule pods in a way which abides by the constraints. This field is alpha-level and is only honored by clusters that enables the EvenPodsSpread feature. All topologySpreadConstraints are ANDed.
  topologySpreadConstraints:[io_k8s_api_core_v1_TopologySpreadConstraintResult]
  # List of volumes that can be mounted by containers belonging to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes
  volumes:[io_k8s_api_core_v1_VolumeResult]
}
# PodStatus represents information about the status of a pod. Status may trail the actual state of a system, especially if the node that hosts the pod cannot contact the control plane.
input io_k8s_api_core_v1_PodStatusInput {
  # nominatedNodeName is set only when this pod preempts other pods on the node, but it cannot be scheduled right away as preemption victims receive their graceful termination periods. This field does not guarantee that the pod will be scheduled on this node. Scheduler may decide to place the pod elsewhere if other nodes become available sooner. Scheduler may also decide to give the resources on this node to a higher priority pod that is created after preemption. As a result, this field may be different than PodSpec.nodeName when the pod is scheduled.
  nominatedNodeName:String
  # podIPs holds the IP addresses allocated to the pod. If this field is specified, the 0th entry must match the podIP field. Pods may be allocated at most 1 value for each of IPv4 and IPv6. This list is empty if no IPs have been allocated yet.
  podIPs:[io_k8s_api_core_v1_PodIPInput]
  # A brief CamelCase message indicating details about why the pod is in this state. e.g. 'Evicted'
  reason:String
  # Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
  startTime:String
  # The list has one entry per container in the manifest. Each entry is currently the output of `docker inspect`. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-and-container-status
  containerStatuses:[io_k8s_api_core_v1_ContainerStatusInput]
  # Status for any ephemeral containers that have run in this pod. This field is alpha-level and is only populated by servers that enable the EphemeralContainers feature.
  ephemeralContainerStatuses:[io_k8s_api_core_v1_ContainerStatusInput]
  # IP address of the host to which the pod is assigned. Empty if not yet scheduled.
  hostIP:String
  # The list has one entry per init container in the manifest. The most recent successful init container will have ready = true, the most recently started container will have startTime set. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-and-container-status
  initContainerStatuses:[io_k8s_api_core_v1_ContainerStatusInput]
  # The Quality of Service (QOS) classification assigned to the pod based on resource requirements See PodQOSClass type for available QOS classes More info: https://git.k8s.io/community/contributors/design-proposals/node/resource-qos.md
  qosClass:String
  # Current service state of pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions
  conditions:[io_k8s_api_core_v1_PodConditionInput]
  # A human readable message indicating details about why the pod is in this condition.
  message:String
  # The phase of a Pod is a simple, high-level summary of where the Pod is in its lifecycle. The conditions array, the reason and message fields, and the individual container status arrays contain more detail about the pod's status. There are five possible phase values:
  # Pending: The pod has been accepted by the Kubernetes system, but one or more of the container images has not been created. This includes time before being scheduled as well as time spent downloading images over the network, which could take a while. Running: The pod has been bound to a node, and all of the containers have been created. At least one container is still running, or is in the process of starting or restarting. Succeeded: All containers in the pod have terminated in success, and will not be restarted. Failed: All containers in the pod have terminated, and at least one container has terminated in failure. The container either exited with non-zero status or was terminated by the system. Unknown: For some reason the state of the pod could not be obtained, typically due to an error in communicating with the host of the pod.
  # More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-phase
  phase:String
  # IP address allocated to the pod. Routable at least within the cluster. Empty if not yet allocated.
  podIP:String
}
# PodStatus represents information about the status of a pod. Status may trail the actual state of a system, especially if the node that hosts the pod cannot contact the control plane.
type io_k8s_api_core_v1_PodStatusResult {
  # Current service state of pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions
  conditions:[io_k8s_api_core_v1_PodConditionResult]
  # The list has one entry per container in the manifest. Each entry is currently the output of `docker inspect`. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-and-container-status
  containerStatuses:[io_k8s_api_core_v1_ContainerStatusResult]
  # Status for any ephemeral containers that have run in this pod. This field is alpha-level and is only populated by servers that enable the EphemeralContainers feature.
  ephemeralContainerStatuses:[io_k8s_api_core_v1_ContainerStatusResult]
  # IP address of the host to which the pod is assigned. Empty if not yet scheduled.
  hostIP:String
  # The list has one entry per init container in the manifest. The most recent successful init container will have ready = true, the most recently started container will have startTime set. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-and-container-status
  initContainerStatuses:[io_k8s_api_core_v1_ContainerStatusResult]
  # A human readable message indicating details about why the pod is in this condition.
  message:String
  # nominatedNodeName is set only when this pod preempts other pods on the node, but it cannot be scheduled right away as preemption victims receive their graceful termination periods. This field does not guarantee that the pod will be scheduled on this node. Scheduler may decide to place the pod elsewhere if other nodes become available sooner. Scheduler may also decide to give the resources on this node to a higher priority pod that is created after preemption. As a result, this field may be different than PodSpec.nodeName when the pod is scheduled.
  nominatedNodeName:String
  # The phase of a Pod is a simple, high-level summary of where the Pod is in its lifecycle. The conditions array, the reason and message fields, and the individual container status arrays contain more detail about the pod's status. There are five possible phase values:
  # Pending: The pod has been accepted by the Kubernetes system, but one or more of the container images has not been created. This includes time before being scheduled as well as time spent downloading images over the network, which could take a while. Running: The pod has been bound to a node, and all of the containers have been created. At least one container is still running, or is in the process of starting or restarting. Succeeded: All containers in the pod have terminated in success, and will not be restarted. Failed: All containers in the pod have terminated, and at least one container has terminated in failure. The container either exited with non-zero status or was terminated by the system. Unknown: For some reason the state of the pod could not be obtained, typically due to an error in communicating with the host of the pod.
  # More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-phase
  phase:String
  # IP address allocated to the pod. Routable at least within the cluster. Empty if not yet allocated.
  podIP:String
  # podIPs holds the IP addresses allocated to the pod. If this field is specified, the 0th entry must match the podIP field. Pods may be allocated at most 1 value for each of IPv4 and IPv6. This list is empty if no IPs have been allocated yet.
  podIPs:[io_k8s_api_core_v1_PodIPResult]
  # The Quality of Service (QOS) classification assigned to the pod based on resource requirements See PodQOSClass type for available QOS classes More info: https://git.k8s.io/community/contributors/design-proposals/node/resource-qos.md
  qosClass:String
  # A brief CamelCase message indicating details about why the pod is in this state. e.g. 'Evicted'
  reason:String
  # Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
  startTime:String
}
# PodTemplate describes a template for creating copies of a predefined pod.
input io_k8s_api_core_v1_PodTemplateInput {
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  # PodTemplateSpec describes the data a pod should have when created from a template
  template:io_k8s_api_core_v1_PodTemplateSpecInput
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
}
# PodTemplateList is a list of PodTemplates.
type io_k8s_api_core_v1_PodTemplateListResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # List of pod templates
  items:[io_k8s_api_core_v1_PodTemplateResult]
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
# PodTemplate describes a template for creating copies of a predefined pod.
type io_k8s_api_core_v1_PodTemplateResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  # PodTemplateSpec describes the data a pod should have when created from a template
  template:io_k8s_api_core_v1_PodTemplateSpecResult
}
# PodTemplateSpec describes the data a pod should have when created from a template
input io_k8s_api_core_v1_PodTemplateSpecInput {
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  # PodSpec is a description of a pod.
  spec:io_k8s_api_core_v1_PodSpecInput
}
# PodTemplateSpec describes the data a pod should have when created from a template
type io_k8s_api_core_v1_PodTemplateSpecResult {
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  # PodSpec is a description of a pod.
  spec:io_k8s_api_core_v1_PodSpecResult
}
# PortworxVolumeSource represents a Portworx volume resource.
input io_k8s_api_core_v1_PortworxVolumeSourceInput {
  # FSType represents the filesystem type to mount Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs". Implicitly inferred to be "ext4" if unspecified.
  fsType:String
  # Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
  readOnly:Boolean
  # VolumeID uniquely identifies a Portworx volume
  volumeID:String
}
# PortworxVolumeSource represents a Portworx volume resource.
type io_k8s_api_core_v1_PortworxVolumeSourceResult {
  # FSType represents the filesystem type to mount Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs". Implicitly inferred to be "ext4" if unspecified.
  fsType:String
  # Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
  readOnly:Boolean
  # VolumeID uniquely identifies a Portworx volume
  volumeID:String
}
# An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
input io_k8s_api_core_v1_PreferredSchedulingTermInput {
  # A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
  preference:io_k8s_api_core_v1_NodeSelectorTermInput
  # Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
  weight:Int
}
# An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
type io_k8s_api_core_v1_PreferredSchedulingTermResult {
  # A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
  preference:io_k8s_api_core_v1_NodeSelectorTermResult
  # Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
  weight:Int
}
# Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
input io_k8s_api_core_v1_ProbeInput {
  # TCPSocketAction describes an action based on opening a socket
  tcpSocket:io_k8s_api_core_v1_TCPSocketActionInput
  # Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
  timeoutSeconds:Int
  # ExecAction describes a "run in container" action.
  exec:io_k8s_api_core_v1_ExecActionInput
  # Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
  failureThreshold:Int
  # HTTPGetAction describes an action based on HTTP Get requests.
  httpGet:io_k8s_api_core_v1_HTTPGetActionInput
  # Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
  initialDelaySeconds:Int
  # How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
  periodSeconds:Int
  # Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
  successThreshold:Int
}
# Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
type io_k8s_api_core_v1_ProbeResult {
  # ExecAction describes a "run in container" action.
  exec:io_k8s_api_core_v1_ExecActionResult
  # Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
  failureThreshold:Int
  # HTTPGetAction describes an action based on HTTP Get requests.
  httpGet:io_k8s_api_core_v1_HTTPGetActionResult
  # Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
  initialDelaySeconds:Int
  # How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
  periodSeconds:Int
  # Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
  successThreshold:Int
  # TCPSocketAction describes an action based on opening a socket
  tcpSocket:io_k8s_api_core_v1_TCPSocketActionResult
  # Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
  timeoutSeconds:Int
}
# Represents a projected volume source
input io_k8s_api_core_v1_ProjectedVolumeSourceInput {
  # Mode bits to use on created files by default. Must be a value between 0 and 0777. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
  defaultMode:Int
  # list of volume projections
  sources:[io_k8s_api_core_v1_VolumeProjectionInput]
}
# Represents a projected volume source
type io_k8s_api_core_v1_ProjectedVolumeSourceResult {
  # Mode bits to use on created files by default. Must be a value between 0 and 0777. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
  defaultMode:Int
  # list of volume projections
  sources:[io_k8s_api_core_v1_VolumeProjectionResult]
}
# Represents a Quobyte mount that lasts the lifetime of a pod. Quobyte volumes do not support ownership management or SELinux relabeling.
input io_k8s_api_core_v1_QuobyteVolumeSourceInput {
  # User to map volume access to Defaults to serivceaccount user
  user:String
  # Volume is a string that references an already created Quobyte volume by name.
  volume:String
  # Group to map volume access to Default is no group
  group:String
  # ReadOnly here will force the Quobyte volume to be mounted with read-only permissions. Defaults to false.
  readOnly:Boolean
  # Registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes
  registry:String
  # Tenant owning the given Quobyte volume in the Backend Used with dynamically provisioned Quobyte volumes, value is set by the plugin
  tenant:String
}
# Represents a Quobyte mount that lasts the lifetime of a pod. Quobyte volumes do not support ownership management or SELinux relabeling.
type io_k8s_api_core_v1_QuobyteVolumeSourceResult {
  # Group to map volume access to Default is no group
  group:String
  # ReadOnly here will force the Quobyte volume to be mounted with read-only permissions. Defaults to false.
  readOnly:Boolean
  # Registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes
  registry:String
  # Tenant owning the given Quobyte volume in the Backend Used with dynamically provisioned Quobyte volumes, value is set by the plugin
  tenant:String
  # User to map volume access to Defaults to serivceaccount user
  user:String
  # Volume is a string that references an already created Quobyte volume by name.
  volume:String
}
# Represents a Rados Block Device mount that lasts the lifetime of a pod. RBD volumes support ownership management and SELinux relabeling.
input io_k8s_api_core_v1_RBDPersistentVolumeSourceInput {
  # SecretReference represents a Secret Reference. It has enough information to retrieve secret in any namespace
  secretRef:io_k8s_api_core_v1_SecretReferenceInput
  # The rados user name. Default is admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
  user:String
  # Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd
  fsType:String
  # The rados image name. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
  image:String
  # Keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
  keyring:String
  # A collection of Ceph monitors. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
  monitors:[String]
  # The rados pool name. Default is rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
  pool:String
  # ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
  readOnly:Boolean
}
# Represents a Rados Block Device mount that lasts the lifetime of a pod. RBD volumes support ownership management and SELinux relabeling.
type io_k8s_api_core_v1_RBDPersistentVolumeSourceResult {
  # Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd
  fsType:String
  # The rados image name. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
  image:String
  # Keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
  keyring:String
  # A collection of Ceph monitors. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
  monitors:[String]
  # The rados pool name. Default is rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
  pool:String
  # ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
  readOnly:Boolean
  # SecretReference represents a Secret Reference. It has enough information to retrieve secret in any namespace
  secretRef:io_k8s_api_core_v1_SecretReferenceResult
  # The rados user name. Default is admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
  user:String
}
# Represents a Rados Block Device mount that lasts the lifetime of a pod. RBD volumes support ownership management and SELinux relabeling.
input io_k8s_api_core_v1_RBDVolumeSourceInput {
  # The rados image name. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
  image:String
  # Keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
  keyring:String
  # A collection of Ceph monitors. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
  monitors:[String]
  # The rados pool name. Default is rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
  pool:String
  # ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
  readOnly:Boolean
  # LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
  secretRef:io_k8s_api_core_v1_LocalObjectReferenceInput
  # The rados user name. Default is admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
  user:String
  # Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd
  fsType:String
}
# Represents a Rados Block Device mount that lasts the lifetime of a pod. RBD volumes support ownership management and SELinux relabeling.
type io_k8s_api_core_v1_RBDVolumeSourceResult {
  # Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd
  fsType:String
  # The rados image name. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
  image:String
  # Keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
  keyring:String
  # A collection of Ceph monitors. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
  monitors:[String]
  # The rados pool name. Default is rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
  pool:String
  # ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
  readOnly:Boolean
  # LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
  secretRef:io_k8s_api_core_v1_LocalObjectReferenceResult
  # The rados user name. Default is admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
  user:String
}
# ReplicationControllerCondition describes the state of a replication controller at a certain point.
input io_k8s_api_core_v1_ReplicationControllerConditionInput {
  # Status of the condition, one of True, False, Unknown.
  status:String
  # Type of replication controller condition.
  type:String
  # Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
  lastTransitionTime:String
  # A human readable message indicating details about the transition.
  message:String
  # The reason for the condition's last transition.
  reason:String
}
# ReplicationControllerCondition describes the state of a replication controller at a certain point.
type io_k8s_api_core_v1_ReplicationControllerConditionResult {
  # Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
  lastTransitionTime:String
  # A human readable message indicating details about the transition.
  message:String
  # The reason for the condition's last transition.
  reason:String
  # Status of the condition, one of True, False, Unknown.
  status:String
  # Type of replication controller condition.
  type:String
}
# ReplicationController represents the configuration of a replication controller.
input io_k8s_api_core_v1_ReplicationControllerInput {
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  # ReplicationControllerSpec is the specification of a replication controller.
  spec:io_k8s_api_core_v1_ReplicationControllerSpecInput
  # ReplicationControllerStatus represents the current status of a replication controller.
  status:io_k8s_api_core_v1_ReplicationControllerStatusInput
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
}
# ReplicationControllerList is a collection of replication controllers.
type io_k8s_api_core_v1_ReplicationControllerListResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # List of replication controllers. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller
  items:[io_k8s_api_core_v1_ReplicationControllerResult]
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
# ReplicationController represents the configuration of a replication controller.
type io_k8s_api_core_v1_ReplicationControllerResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  # ReplicationControllerSpec is the specification of a replication controller.
  spec:io_k8s_api_core_v1_ReplicationControllerSpecResult
  # ReplicationControllerStatus represents the current status of a replication controller.
  status:io_k8s_api_core_v1_ReplicationControllerStatusResult
}
# ReplicationControllerSpec is the specification of a replication controller.
input io_k8s_api_core_v1_ReplicationControllerSpecInput {
  # PodTemplateSpec describes the data a pod should have when created from a template
  template:io_k8s_api_core_v1_PodTemplateSpecInput
  # Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)
  minReadySeconds:Int
  # Replicas is the number of desired replicas. This is a pointer to distinguish between explicit zero and unspecified. Defaults to 1. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#what-is-a-replicationcontroller
  replicas:Int
}
# ReplicationControllerSpec is the specification of a replication controller.
type io_k8s_api_core_v1_ReplicationControllerSpecResult {
  # Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)
  minReadySeconds:Int
  # Replicas is the number of desired replicas. This is a pointer to distinguish between explicit zero and unspecified. Defaults to 1. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#what-is-a-replicationcontroller
  replicas:Int
  # PodTemplateSpec describes the data a pod should have when created from a template
  template:io_k8s_api_core_v1_PodTemplateSpecResult
}
# ReplicationControllerStatus represents the current status of a replication controller.
input io_k8s_api_core_v1_ReplicationControllerStatusInput {
  # Replicas is the most recently oberved number of replicas. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#what-is-a-replicationcontroller
  replicas:Int
  # The number of available replicas (ready for at least minReadySeconds) for this replication controller.
  availableReplicas:Int
  # Represents the latest available observations of a replication controller's current state.
  conditions:[io_k8s_api_core_v1_ReplicationControllerConditionInput]
  # The number of pods that have labels matching the labels of the pod template of the replication controller.
  fullyLabeledReplicas:Int
  # ObservedGeneration reflects the generation of the most recently observed replication controller.
  observedGeneration:Int
  # The number of ready replicas for this replication controller.
  readyReplicas:Int
}
# ReplicationControllerStatus represents the current status of a replication controller.
type io_k8s_api_core_v1_ReplicationControllerStatusResult {
  # The number of available replicas (ready for at least minReadySeconds) for this replication controller.
  availableReplicas:Int
  # Represents the latest available observations of a replication controller's current state.
  conditions:[io_k8s_api_core_v1_ReplicationControllerConditionResult]
  # The number of pods that have labels matching the labels of the pod template of the replication controller.
  fullyLabeledReplicas:Int
  # ObservedGeneration reflects the generation of the most recently observed replication controller.
  observedGeneration:Int
  # The number of ready replicas for this replication controller.
  readyReplicas:Int
  # Replicas is the most recently oberved number of replicas. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#what-is-a-replicationcontroller
  replicas:Int
}
# ResourceFieldSelector represents container resources (cpu, memory) and their output format
input io_k8s_api_core_v1_ResourceFieldSelectorInput {
  # Container name: required for volumes, optional for env vars
  containerName:String
  # Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.
  # The serialization format is:
  # <quantity>        ::= <signedNumber><suffix>
  #   (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
  # <digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
  #   (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
  # <decimalSI>       ::= m | "" | k | M | G | T | P | E
  #   (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
  # <decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>
  # No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.
  # When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.
  # Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
  #   a. No precision is lost
  #   b. No fractional digits will be emitted
  #   c. The exponent (or suffix) is as large as possible.
  # The sign will be omitted unless the number is negative.
  # Examples:
  #   1.5 will be serialized as "1500m"
  #   1.5Gi will be serialized as "1536Mi"
  # Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.
  # Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)
  # This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
  divisor:String
  # Required: resource to select
  resource:String
}
# ResourceFieldSelector represents container resources (cpu, memory) and their output format
type io_k8s_api_core_v1_ResourceFieldSelectorResult {
  # Container name: required for volumes, optional for env vars
  containerName:String
  # Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.
  # The serialization format is:
  # <quantity>        ::= <signedNumber><suffix>
  #   (Note that <suffix> may be empty, from the "" case in <decimalSI>.)
  # <digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= "+" | "-" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei
  #   (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)
  # <decimalSI>       ::= m | "" | k | M | G | T | P | E
  #   (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)
  # <decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>
  # No matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.
  # When a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.
  # Before serializing, Quantity will be put in "canonical form". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:
  #   a. No precision is lost
  #   b. No fractional digits will be emitted
  #   c. The exponent (or suffix) is as large as possible.
  # The sign will be omitted unless the number is negative.
  # Examples:
  #   1.5 will be serialized as "1500m"
  #   1.5Gi will be serialized as "1536Mi"
  # Note that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.
  # Non-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)
  # This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.
  divisor:String
  # Required: resource to select
  resource:String
}
# ResourceQuota sets aggregate quota restrictions enforced per namespace
input io_k8s_api_core_v1_ResourceQuotaInput {
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  # ResourceQuotaSpec defines the desired hard limits to enforce for Quota.
  spec:io_k8s_api_core_v1_ResourceQuotaSpecInput
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
}
# ResourceQuotaList is a list of ResourceQuota items.
type io_k8s_api_core_v1_ResourceQuotaListResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Items is a list of ResourceQuota objects. More info: https://kubernetes.io/docs/concepts/policy/resource-quotas/
  items:[io_k8s_api_core_v1_ResourceQuotaResult]
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
# ResourceQuota sets aggregate quota restrictions enforced per namespace
type io_k8s_api_core_v1_ResourceQuotaResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  # ResourceQuotaSpec defines the desired hard limits to enforce for Quota.
  spec:io_k8s_api_core_v1_ResourceQuotaSpecResult
}
# ResourceQuotaSpec defines the desired hard limits to enforce for Quota.
input io_k8s_api_core_v1_ResourceQuotaSpecInput {
  # A scope selector represents the AND of the selectors represented by the scoped-resource selector requirements.
  scopeSelector:io_k8s_api_core_v1_ScopeSelectorInput
  # A collection of filters that must match each object tracked by a quota. If not specified, the quota matches all objects.
  scopes:[String]
}
# ResourceQuotaSpec defines the desired hard limits to enforce for Quota.
type io_k8s_api_core_v1_ResourceQuotaSpecResult {
  # A scope selector represents the AND of the selectors represented by the scoped-resource selector requirements.
  scopeSelector:io_k8s_api_core_v1_ScopeSelectorResult
  # A collection of filters that must match each object tracked by a quota. If not specified, the quota matches all objects.
  scopes:[String]
}
# SELinuxOptions are the labels to be applied to the container
input io_k8s_api_core_v1_SELinuxOptionsInput {
  # User is a SELinux user label that applies to the container.
  user:String
  # Level is SELinux level label that applies to the container.
  level:String
  # Role is a SELinux role label that applies to the container.
  role:String
  # Type is a SELinux type label that applies to the container.
  type:String
}
# SELinuxOptions are the labels to be applied to the container
type io_k8s_api_core_v1_SELinuxOptionsResult {
  # Level is SELinux level label that applies to the container.
  level:String
  # Role is a SELinux role label that applies to the container.
  role:String
  # Type is a SELinux type label that applies to the container.
  type:String
  # User is a SELinux user label that applies to the container.
  user:String
}
# ScaleIOPersistentVolumeSource represents a persistent ScaleIO volume
input io_k8s_api_core_v1_ScaleIOPersistentVolumeSourceInput {
  # The ScaleIO Storage Pool associated with the protection domain.
  storagePool:String
  # The name of the storage system as configured in ScaleIO.
  system:String
  # The name of the ScaleIO Protection Domain for the configured storage.
  protectionDomain:String
  # SecretReference represents a Secret Reference. It has enough information to retrieve secret in any namespace
  secretRef:io_k8s_api_core_v1_SecretReferenceInput
  # Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
  readOnly:Boolean
  # Flag to enable/disable SSL communication with Gateway, default false
  sslEnabled:Boolean
  # Indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned. Default is ThinProvisioned.
  storageMode:String
  # The name of a volume already created in the ScaleIO system that is associated with this volume source.
  volumeName:String
  # Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Default is "xfs"
  fsType:String
  # The host address of the ScaleIO API Gateway.
  gateway:String
}
# ScaleIOPersistentVolumeSource represents a persistent ScaleIO volume
type io_k8s_api_core_v1_ScaleIOPersistentVolumeSourceResult {
  # Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Default is "xfs"
  fsType:String
  # The host address of the ScaleIO API Gateway.
  gateway:String
  # The name of the ScaleIO Protection Domain for the configured storage.
  protectionDomain:String
  # Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
  readOnly:Boolean
  # SecretReference represents a Secret Reference. It has enough information to retrieve secret in any namespace
  secretRef:io_k8s_api_core_v1_SecretReferenceResult
  # Flag to enable/disable SSL communication with Gateway, default false
  sslEnabled:Boolean
  # Indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned. Default is ThinProvisioned.
  storageMode:String
  # The ScaleIO Storage Pool associated with the protection domain.
  storagePool:String
  # The name of the storage system as configured in ScaleIO.
  system:String
  # The name of a volume already created in the ScaleIO system that is associated with this volume source.
  volumeName:String
}
# ScaleIOVolumeSource represents a persistent ScaleIO volume
input io_k8s_api_core_v1_ScaleIOVolumeSourceInput {
  # Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Default is "xfs".
  fsType:String
  # Indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned. Default is ThinProvisioned.
  storageMode:String
  # The ScaleIO Storage Pool associated with the protection domain.
  storagePool:String
  # The name of the storage system as configured in ScaleIO.
  system:String
  # The name of a volume already created in the ScaleIO system that is associated with this volume source.
  volumeName:String
  # The host address of the ScaleIO API Gateway.
  gateway:String
  # The name of the ScaleIO Protection Domain for the configured storage.
  protectionDomain:String
  # Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
  readOnly:Boolean
  # LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
  secretRef:io_k8s_api_core_v1_LocalObjectReferenceInput
  # Flag to enable/disable SSL communication with Gateway, default false
  sslEnabled:Boolean
}
# ScaleIOVolumeSource represents a persistent ScaleIO volume
type io_k8s_api_core_v1_ScaleIOVolumeSourceResult {
  # Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Default is "xfs".
  fsType:String
  # The host address of the ScaleIO API Gateway.
  gateway:String
  # The name of the ScaleIO Protection Domain for the configured storage.
  protectionDomain:String
  # Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
  readOnly:Boolean
  # LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
  secretRef:io_k8s_api_core_v1_LocalObjectReferenceResult
  # Flag to enable/disable SSL communication with Gateway, default false
  sslEnabled:Boolean
  # Indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned. Default is ThinProvisioned.
  storageMode:String
  # The ScaleIO Storage Pool associated with the protection domain.
  storagePool:String
  # The name of the storage system as configured in ScaleIO.
  system:String
  # The name of a volume already created in the ScaleIO system that is associated with this volume source.
  volumeName:String
}
# A scope selector represents the AND of the selectors represented by the scoped-resource selector requirements.
input io_k8s_api_core_v1_ScopeSelectorInput {
  # A list of scope selector requirements by scope of the resources.
  matchExpressions:[io_k8s_api_core_v1_ScopedResourceSelectorRequirementInput]
}
# A scope selector represents the AND of the selectors represented by the scoped-resource selector requirements.
type io_k8s_api_core_v1_ScopeSelectorResult {
  # A list of scope selector requirements by scope of the resources.
  matchExpressions:[io_k8s_api_core_v1_ScopedResourceSelectorRequirementResult]
}
# A scoped-resource selector requirement is a selector that contains values, a scope name, and an operator that relates the scope name and values.
input io_k8s_api_core_v1_ScopedResourceSelectorRequirementInput {
  # An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
  values:[String]
  # Represents a scope's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist.
  operator:String
  # The name of the scope that the selector applies to.
  scopeName:String
}
# A scoped-resource selector requirement is a selector that contains values, a scope name, and an operator that relates the scope name and values.
type io_k8s_api_core_v1_ScopedResourceSelectorRequirementResult {
  # Represents a scope's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist.
  operator:String
  # The name of the scope that the selector applies to.
  scopeName:String
  # An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
  values:[String]
}
# SecretEnvSource selects a Secret to populate the environment variables with.
# The contents of the target Secret's Data field will represent the key-value pairs as environment variables.
input io_k8s_api_core_v1_SecretEnvSourceInput {
  # Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
  name:String
  # Specify whether the Secret must be defined
  optional:Boolean
}
# SecretEnvSource selects a Secret to populate the environment variables with.
# The contents of the target Secret's Data field will represent the key-value pairs as environment variables.
type io_k8s_api_core_v1_SecretEnvSourceResult {
  # Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
  name:String
  # Specify whether the Secret must be defined
  optional:Boolean
}
# Secret holds secret data of a certain type. The total bytes of the values in the Data field must be less than MaxSecretSize bytes.
input io_k8s_api_core_v1_SecretInput {
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  # Used to facilitate programmatic handling of secret data.
  type:String
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
}
# SecretKeySelector selects a key of a Secret.
input io_k8s_api_core_v1_SecretKeySelectorInput {
  # The key of the secret to select from.  Must be a valid secret key.
  key:String
  # Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
  name:String
  # Specify whether the Secret or its key must be defined
  optional:Boolean
}
# SecretKeySelector selects a key of a Secret.
type io_k8s_api_core_v1_SecretKeySelectorResult {
  # The key of the secret to select from.  Must be a valid secret key.
  key:String
  # Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
  name:String
  # Specify whether the Secret or its key must be defined
  optional:Boolean
}
# SecretList is a list of Secret.
type io_k8s_api_core_v1_SecretListResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Items is a list of secret objects. More info: https://kubernetes.io/docs/concepts/configuration/secret
  items:[io_k8s_api_core_v1_SecretResult]
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
# Adapts a secret into a projected volume.
# The contents of the target Secret's Data field will be presented in a projected volume as files using the keys in the Data field as the file names. Note that this is identical to a secret volume source without the default mode.
input io_k8s_api_core_v1_SecretProjectionInput {
  # Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
  name:String
  # Specify whether the Secret or its key must be defined
  optional:Boolean
  # If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
  items:[io_k8s_api_core_v1_KeyToPathInput]
}
# Adapts a secret into a projected volume.
# The contents of the target Secret's Data field will be presented in a projected volume as files using the keys in the Data field as the file names. Note that this is identical to a secret volume source without the default mode.
type io_k8s_api_core_v1_SecretProjectionResult {
  # If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
  items:[io_k8s_api_core_v1_KeyToPathResult]
  # Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
  name:String
  # Specify whether the Secret or its key must be defined
  optional:Boolean
}
# SecretReference represents a Secret Reference. It has enough information to retrieve secret in any namespace
input io_k8s_api_core_v1_SecretReferenceInput {
  # Name is unique within a namespace to reference a secret resource.
  name:String
  # Namespace defines the space within which the secret name must be unique.
  namespace:String
}
# SecretReference represents a Secret Reference. It has enough information to retrieve secret in any namespace
type io_k8s_api_core_v1_SecretReferenceResult {
  # Name is unique within a namespace to reference a secret resource.
  name:String
  # Namespace defines the space within which the secret name must be unique.
  namespace:String
}
# Secret holds secret data of a certain type. The total bytes of the values in the Data field must be less than MaxSecretSize bytes.
type io_k8s_api_core_v1_SecretResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  # Used to facilitate programmatic handling of secret data.
  type:String
}
# Adapts a Secret into a volume.
# The contents of the target Secret's Data field will be presented in a volume as files using the keys in the Data field as the file names. Secret volumes support ownership management and SELinux relabeling.
input io_k8s_api_core_v1_SecretVolumeSourceInput {
  # Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
  defaultMode:Int
  # If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
  items:[io_k8s_api_core_v1_KeyToPathInput]
  # Specify whether the Secret or its keys must be defined
  optional:Boolean
  # Name of the secret in the pod's namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
  secretName:String
}
# Adapts a Secret into a volume.
# The contents of the target Secret's Data field will be presented in a volume as files using the keys in the Data field as the file names. Secret volumes support ownership management and SELinux relabeling.
type io_k8s_api_core_v1_SecretVolumeSourceResult {
  # Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
  defaultMode:Int
  # If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
  items:[io_k8s_api_core_v1_KeyToPathResult]
  # Specify whether the Secret or its keys must be defined
  optional:Boolean
  # Name of the secret in the pod's namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
  secretName:String
}
# SecurityContext holds security configuration that will be applied to a container. Some fields are present in both SecurityContext and PodSecurityContext.  When both are set, the values in SecurityContext take precedence.
input io_k8s_api_core_v1_SecurityContextInput {
  # AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN
  allowPrivilegeEscalation:Boolean
  # Adds and removes POSIX capabilities from running containers.
  capabilities:io_k8s_api_core_v1_CapabilitiesInput
  # Whether this container has a read-only root filesystem. Default is false.
  readOnlyRootFilesystem:Boolean
  # The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
  runAsGroup:Int
  # Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
  runAsNonRoot:Boolean
  # SELinuxOptions are the labels to be applied to the container
  seLinuxOptions:io_k8s_api_core_v1_SELinuxOptionsInput
  # Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.
  privileged:Boolean
  # procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled.
  procMount:String
  # The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
  runAsUser:Int
  # WindowsSecurityContextOptions contain Windows-specific options and credentials.
  windowsOptions:io_k8s_api_core_v1_WindowsSecurityContextOptionsInput
}
# SecurityContext holds security configuration that will be applied to a container. Some fields are present in both SecurityContext and PodSecurityContext.  When both are set, the values in SecurityContext take precedence.
type io_k8s_api_core_v1_SecurityContextResult {
  # AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN
  allowPrivilegeEscalation:Boolean
  # Adds and removes POSIX capabilities from running containers.
  capabilities:io_k8s_api_core_v1_CapabilitiesResult
  # Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.
  privileged:Boolean
  # procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled.
  procMount:String
  # Whether this container has a read-only root filesystem. Default is false.
  readOnlyRootFilesystem:Boolean
  # The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
  runAsGroup:Int
  # Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
  runAsNonRoot:Boolean
  # The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
  runAsUser:Int
  # SELinuxOptions are the labels to be applied to the container
  seLinuxOptions:io_k8s_api_core_v1_SELinuxOptionsResult
  # WindowsSecurityContextOptions contain Windows-specific options and credentials.
  windowsOptions:io_k8s_api_core_v1_WindowsSecurityContextOptionsResult
}
# ServiceAccount binds together: * a name, understood by users, and perhaps by peripheral systems, for an identity * a principal that can be authenticated and authorized * a set of secrets
input io_k8s_api_core_v1_ServiceAccountInput {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # AutomountServiceAccountToken indicates whether pods running as this service account should have an API token automatically mounted. Can be overridden at the pod level.
  automountServiceAccountToken:Boolean
  # ImagePullSecrets is a list of references to secrets in the same namespace to use for pulling any images in pods that reference this ServiceAccount. ImagePullSecrets are distinct from Secrets because Secrets can be mounted in the pod, but ImagePullSecrets are only accessed by the kubelet. More info: https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod
  imagePullSecrets:[io_k8s_api_core_v1_LocalObjectReferenceInput]
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  # Secrets is the list of secrets allowed to be used by pods running using this ServiceAccount. More info: https://kubernetes.io/docs/concepts/configuration/secret
  secrets:[io_k8s_api_core_v1_ObjectReferenceInput]
}
# ServiceAccountList is a list of ServiceAccount objects
type io_k8s_api_core_v1_ServiceAccountListResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # List of ServiceAccounts. More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
  items:[io_k8s_api_core_v1_ServiceAccountResult]
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
# ServiceAccount binds together: * a name, understood by users, and perhaps by peripheral systems, for an identity * a principal that can be authenticated and authorized * a set of secrets
type io_k8s_api_core_v1_ServiceAccountResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # AutomountServiceAccountToken indicates whether pods running as this service account should have an API token automatically mounted. Can be overridden at the pod level.
  automountServiceAccountToken:Boolean
  # ImagePullSecrets is a list of references to secrets in the same namespace to use for pulling any images in pods that reference this ServiceAccount. ImagePullSecrets are distinct from Secrets because Secrets can be mounted in the pod, but ImagePullSecrets are only accessed by the kubelet. More info: https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod
  imagePullSecrets:[io_k8s_api_core_v1_LocalObjectReferenceResult]
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  # Secrets is the list of secrets allowed to be used by pods running using this ServiceAccount. More info: https://kubernetes.io/docs/concepts/configuration/secret
  secrets:[io_k8s_api_core_v1_ObjectReferenceResult]
}
# ServiceAccountTokenProjection represents a projected service account token volume. This projection can be used to insert a service account token into the pods runtime filesystem for use against APIs (Kubernetes API Server or otherwise).
input io_k8s_api_core_v1_ServiceAccountTokenProjectionInput {
  # Audience is the intended audience of the token. A recipient of a token must identify itself with an identifier specified in the audience of the token, and otherwise should reject the token. The audience defaults to the identifier of the apiserver.
  audience:String
  # ExpirationSeconds is the requested duration of validity of the service account token. As the token approaches expiration, the kubelet volume plugin will proactively rotate the service account token. The kubelet will start trying to rotate the token if the token is older than 80 percent of its time to live or if the token is older than 24 hours.Defaults to 1 hour and must be at least 10 minutes.
  expirationSeconds:Int
  # Path is the path relative to the mount point of the file to project the token into.
  path:String
}
# ServiceAccountTokenProjection represents a projected service account token volume. This projection can be used to insert a service account token into the pods runtime filesystem for use against APIs (Kubernetes API Server or otherwise).
type io_k8s_api_core_v1_ServiceAccountTokenProjectionResult {
  # Audience is the intended audience of the token. A recipient of a token must identify itself with an identifier specified in the audience of the token, and otherwise should reject the token. The audience defaults to the identifier of the apiserver.
  audience:String
  # ExpirationSeconds is the requested duration of validity of the service account token. As the token approaches expiration, the kubelet volume plugin will proactively rotate the service account token. The kubelet will start trying to rotate the token if the token is older than 80 percent of its time to live or if the token is older than 24 hours.Defaults to 1 hour and must be at least 10 minutes.
  expirationSeconds:Int
  # Path is the path relative to the mount point of the file to project the token into.
  path:String
}
# Service is a named abstraction of software service (for example, mysql) consisting of local port (for example 3306) that the proxy listens on, and the selector that determines which pods will answer requests sent through the proxy.
input io_k8s_api_core_v1_ServiceInput {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  # ServiceSpec describes the attributes that a user creates on a service.
  spec:io_k8s_api_core_v1_ServiceSpecInput
  # ServiceStatus represents the current status of a service.
  status:io_k8s_api_core_v1_ServiceStatusInput
}
# ServiceList holds a list of services.
type io_k8s_api_core_v1_ServiceListResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # List of services
  items:[io_k8s_api_core_v1_ServiceResult]
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
# ServicePort contains information on service's port.
input io_k8s_api_core_v1_ServicePortInput {
  # The port that will be exposed by this service.
  port:Int
  # The IP protocol for this port. Supports "TCP", "UDP", and "SCTP". Default is TCP.
  protocol:String
  # IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number.
  targetPort:String
  # The name of this port within the service. This must be a DNS_LABEL. All ports within a ServiceSpec must have unique names. When considering the endpoints for a Service, this must match the 'name' field in the EndpointPort. Optional if only one ServicePort is defined on this service.
  name:String
  # The port on each node on which this service is exposed when type=NodePort or LoadBalancer. Usually assigned by the system. If specified, it will be allocated to the service if unused or else creation of the service will fail. Default is to auto-allocate a port if the ServiceType of this Service requires one. More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
  nodePort:Int
}
# ServicePort contains information on service's port.
type io_k8s_api_core_v1_ServicePortResult {
  # The name of this port within the service. This must be a DNS_LABEL. All ports within a ServiceSpec must have unique names. When considering the endpoints for a Service, this must match the 'name' field in the EndpointPort. Optional if only one ServicePort is defined on this service.
  name:String
  # The port on each node on which this service is exposed when type=NodePort or LoadBalancer. Usually assigned by the system. If specified, it will be allocated to the service if unused or else creation of the service will fail. Default is to auto-allocate a port if the ServiceType of this Service requires one. More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
  nodePort:Int
  # The port that will be exposed by this service.
  port:Int
  # The IP protocol for this port. Supports "TCP", "UDP", and "SCTP". Default is TCP.
  protocol:String
  # IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number.
  targetPort:String
}
# Service is a named abstraction of software service (for example, mysql) consisting of local port (for example 3306) that the proxy listens on, and the selector that determines which pods will answer requests sent through the proxy.
type io_k8s_api_core_v1_ServiceResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  # ServiceSpec describes the attributes that a user creates on a service.
  spec:io_k8s_api_core_v1_ServiceSpecResult
  # ServiceStatus represents the current status of a service.
  status:io_k8s_api_core_v1_ServiceStatusResult
}
# ServiceSpec describes the attributes that a user creates on a service.
input io_k8s_api_core_v1_ServiceSpecInput {
  # If specified and supported by the platform, this will restrict traffic through the cloud-provider load-balancer will be restricted to the specified client IPs. This field will be ignored if the cloud-provider does not support the feature." More info: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/
  loadBalancerSourceRanges:[String]
  # externalName is the external reference that kubedns or equivalent will return as a CNAME record for this service. No proxying will be involved. Must be a valid RFC-1123 hostname (https://tools.ietf.org/html/rfc1123) and requires Type to be ExternalName.
  externalName:String
  # healthCheckNodePort specifies the healthcheck nodePort for the service. If not specified, HealthCheckNodePort is created by the service api backend with the allocated nodePort. Will use user-specified nodePort value if specified by the client. Only effects when Type is set to LoadBalancer and ExternalTrafficPolicy is set to Local.
  healthCheckNodePort:Int
  # ipFamily specifies whether this Service has a preference for a particular IP family (e.g. IPv4 vs. IPv6).  If a specific IP family is requested, the clusterIP field will be allocated from that family, if it is available in the cluster.  If no IP family is requested, the cluster's primary IP family will be used. Other IP fields (loadBalancerIP, loadBalancerSourceRanges, externalIPs) and controllers which allocate external load-balancers should use the same IP family.  Endpoints for this Service will be of this family.  This field is immutable after creation. Assigning a ServiceIPFamily not available in the cluster (e.g. IPv6 in IPv4 only cluster) is an error condition and will fail during clusterIP assignment.
  ipFamily:String
  # clusterIP is the IP address of the service and is usually assigned randomly by the master. If an address is specified manually and is not in use by others, it will be allocated to the service; otherwise, creation of the service will fail. This field can not be changed through updates. Valid values are "None", empty string (""), or a valid IP address. "None" can be specified for headless services when proxying is not required. Only applies to types ClusterIP, NodePort, and LoadBalancer. Ignored if type is ExternalName. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
  clusterIP:String
  # Only applies to Service Type: LoadBalancer LoadBalancer will get created with the IP specified in this field. This feature depends on whether the underlying cloud-provider supports specifying the loadBalancerIP when a load balancer is created. This field will be ignored if the cloud-provider does not support the feature.
  loadBalancerIP:String
  # The list of ports that are exposed by this service. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
  ports:[io_k8s_api_core_v1_ServicePortInput]
  # topologyKeys is a preference-order list of topology keys which implementations of services should use to preferentially sort endpoints when accessing this Service, it can not be used at the same time as externalTrafficPolicy=Local. Topology keys must be valid label keys and at most 16 keys may be specified. Endpoints are chosen based on the first topology key with available backends. If this field is specified and all entries have no backends that match the topology of the client, the service has no backends for that client and connections should fail. The special value "*" may be used to mean "any topology". This catch-all value, if used, only makes sense as the last value in the list. If this is not specified or empty, no topology constraints will be applied.
  topologyKeys:[String]
  # type determines how the Service is exposed. Defaults to ClusterIP. Valid options are ExternalName, ClusterIP, NodePort, and LoadBalancer. "ExternalName" maps to the specified externalName. "ClusterIP" allocates a cluster-internal IP address for load-balancing to endpoints. Endpoints are determined by the selector or if that is not specified, by manual construction of an Endpoints object. If clusterIP is "None", no virtual IP is allocated and the endpoints are published as a set of endpoints rather than a stable IP. "NodePort" builds on ClusterIP and allocates a port on every node which routes to the clusterIP. "LoadBalancer" builds on NodePort and creates an external load-balancer (if supported in the current cloud) which routes to the clusterIP. More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type:String
  # Supports "ClientIP" and "None". Used to maintain session affinity. Enable client IP based session affinity. Must be ClientIP or None. Defaults to None. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
  sessionAffinity:String
  # SessionAffinityConfig represents the configurations of session affinity.
  sessionAffinityConfig:io_k8s_api_core_v1_SessionAffinityConfigInput
  # externalIPs is a list of IP addresses for which nodes in the cluster will also accept traffic for this service.  These IPs are not managed by Kubernetes.  The user is responsible for ensuring that traffic arrives at a node with this IP.  A common example is external load-balancers that are not part of the Kubernetes system.
  externalIPs:[String]
  # externalTrafficPolicy denotes if this Service desires to route external traffic to node-local or cluster-wide endpoints. "Local" preserves the client source IP and avoids a second hop for LoadBalancer and Nodeport type services, but risks potentially imbalanced traffic spreading. "Cluster" obscures the client source IP and may cause a second hop to another node, but should have good overall load-spreading.
  externalTrafficPolicy:String
  # publishNotReadyAddresses, when set to true, indicates that DNS implementations must publish the notReadyAddresses of subsets for the Endpoints associated with the Service. The default value is false. The primary use case for setting this field is to use a StatefulSet's Headless Service to propagate SRV records for its Pods without respect to their readiness for purpose of peer discovery.
  publishNotReadyAddresses:Boolean
}
# ServiceSpec describes the attributes that a user creates on a service.
type io_k8s_api_core_v1_ServiceSpecResult {
  # clusterIP is the IP address of the service and is usually assigned randomly by the master. If an address is specified manually and is not in use by others, it will be allocated to the service; otherwise, creation of the service will fail. This field can not be changed through updates. Valid values are "None", empty string (""), or a valid IP address. "None" can be specified for headless services when proxying is not required. Only applies to types ClusterIP, NodePort, and LoadBalancer. Ignored if type is ExternalName. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
  clusterIP:String
  # externalIPs is a list of IP addresses for which nodes in the cluster will also accept traffic for this service.  These IPs are not managed by Kubernetes.  The user is responsible for ensuring that traffic arrives at a node with this IP.  A common example is external load-balancers that are not part of the Kubernetes system.
  externalIPs:[String]
  # externalName is the external reference that kubedns or equivalent will return as a CNAME record for this service. No proxying will be involved. Must be a valid RFC-1123 hostname (https://tools.ietf.org/html/rfc1123) and requires Type to be ExternalName.
  externalName:String
  # externalTrafficPolicy denotes if this Service desires to route external traffic to node-local or cluster-wide endpoints. "Local" preserves the client source IP and avoids a second hop for LoadBalancer and Nodeport type services, but risks potentially imbalanced traffic spreading. "Cluster" obscures the client source IP and may cause a second hop to another node, but should have good overall load-spreading.
  externalTrafficPolicy:String
  # healthCheckNodePort specifies the healthcheck nodePort for the service. If not specified, HealthCheckNodePort is created by the service api backend with the allocated nodePort. Will use user-specified nodePort value if specified by the client. Only effects when Type is set to LoadBalancer and ExternalTrafficPolicy is set to Local.
  healthCheckNodePort:Int
  # ipFamily specifies whether this Service has a preference for a particular IP family (e.g. IPv4 vs. IPv6).  If a specific IP family is requested, the clusterIP field will be allocated from that family, if it is available in the cluster.  If no IP family is requested, the cluster's primary IP family will be used. Other IP fields (loadBalancerIP, loadBalancerSourceRanges, externalIPs) and controllers which allocate external load-balancers should use the same IP family.  Endpoints for this Service will be of this family.  This field is immutable after creation. Assigning a ServiceIPFamily not available in the cluster (e.g. IPv6 in IPv4 only cluster) is an error condition and will fail during clusterIP assignment.
  ipFamily:String
  # Only applies to Service Type: LoadBalancer LoadBalancer will get created with the IP specified in this field. This feature depends on whether the underlying cloud-provider supports specifying the loadBalancerIP when a load balancer is created. This field will be ignored if the cloud-provider does not support the feature.
  loadBalancerIP:String
  # If specified and supported by the platform, this will restrict traffic through the cloud-provider load-balancer will be restricted to the specified client IPs. This field will be ignored if the cloud-provider does not support the feature." More info: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/
  loadBalancerSourceRanges:[String]
  # The list of ports that are exposed by this service. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
  ports:[io_k8s_api_core_v1_ServicePortResult]
  # publishNotReadyAddresses, when set to true, indicates that DNS implementations must publish the notReadyAddresses of subsets for the Endpoints associated with the Service. The default value is false. The primary use case for setting this field is to use a StatefulSet's Headless Service to propagate SRV records for its Pods without respect to their readiness for purpose of peer discovery.
  publishNotReadyAddresses:Boolean
  # Supports "ClientIP" and "None". Used to maintain session affinity. Enable client IP based session affinity. Must be ClientIP or None. Defaults to None. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
  sessionAffinity:String
  # SessionAffinityConfig represents the configurations of session affinity.
  sessionAffinityConfig:io_k8s_api_core_v1_SessionAffinityConfigResult
  # topologyKeys is a preference-order list of topology keys which implementations of services should use to preferentially sort endpoints when accessing this Service, it can not be used at the same time as externalTrafficPolicy=Local. Topology keys must be valid label keys and at most 16 keys may be specified. Endpoints are chosen based on the first topology key with available backends. If this field is specified and all entries have no backends that match the topology of the client, the service has no backends for that client and connections should fail. The special value "*" may be used to mean "any topology". This catch-all value, if used, only makes sense as the last value in the list. If this is not specified or empty, no topology constraints will be applied.
  topologyKeys:[String]
  # type determines how the Service is exposed. Defaults to ClusterIP. Valid options are ExternalName, ClusterIP, NodePort, and LoadBalancer. "ExternalName" maps to the specified externalName. "ClusterIP" allocates a cluster-internal IP address for load-balancing to endpoints. Endpoints are determined by the selector or if that is not specified, by manual construction of an Endpoints object. If clusterIP is "None", no virtual IP is allocated and the endpoints are published as a set of endpoints rather than a stable IP. "NodePort" builds on ClusterIP and allocates a port on every node which routes to the clusterIP. "LoadBalancer" builds on NodePort and creates an external load-balancer (if supported in the current cloud) which routes to the clusterIP. More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type:String
}
# ServiceStatus represents the current status of a service.
input io_k8s_api_core_v1_ServiceStatusInput {
  # LoadBalancerStatus represents the status of a load-balancer.
  loadBalancer:io_k8s_api_core_v1_LoadBalancerStatusInput
}
# ServiceStatus represents the current status of a service.
type io_k8s_api_core_v1_ServiceStatusResult {
  # LoadBalancerStatus represents the status of a load-balancer.
  loadBalancer:io_k8s_api_core_v1_LoadBalancerStatusResult
}
# SessionAffinityConfig represents the configurations of session affinity.
input io_k8s_api_core_v1_SessionAffinityConfigInput {
  # ClientIPConfig represents the configurations of Client IP based session affinity.
  clientIP:io_k8s_api_core_v1_ClientIPConfigInput
}
# SessionAffinityConfig represents the configurations of session affinity.
type io_k8s_api_core_v1_SessionAffinityConfigResult {
  # ClientIPConfig represents the configurations of Client IP based session affinity.
  clientIP:io_k8s_api_core_v1_ClientIPConfigResult
}
# Represents a StorageOS persistent volume resource.
input io_k8s_api_core_v1_StorageOSPersistentVolumeSourceInput {
  # ObjectReference contains enough information to let you inspect or modify the referred object.
  secretRef:io_k8s_api_core_v1_ObjectReferenceInput
  # VolumeName is the human-readable name of the StorageOS volume.  Volume names are only unique within a namespace.
  volumeName:String
  # VolumeNamespace specifies the scope of the volume within StorageOS.  If no namespace is specified then the Pod's namespace will be used.  This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to "default" if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created.
  volumeNamespace:String
  # Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
  fsType:String
  # Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
  readOnly:Boolean
}
# Represents a StorageOS persistent volume resource.
type io_k8s_api_core_v1_StorageOSPersistentVolumeSourceResult {
  # Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
  fsType:String
  # Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
  readOnly:Boolean
  # ObjectReference contains enough information to let you inspect or modify the referred object.
  secretRef:io_k8s_api_core_v1_ObjectReferenceResult
  # VolumeName is the human-readable name of the StorageOS volume.  Volume names are only unique within a namespace.
  volumeName:String
  # VolumeNamespace specifies the scope of the volume within StorageOS.  If no namespace is specified then the Pod's namespace will be used.  This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to "default" if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created.
  volumeNamespace:String
}
# Represents a StorageOS persistent volume resource.
input io_k8s_api_core_v1_StorageOSVolumeSourceInput {
  # Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
  readOnly:Boolean
  # LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
  secretRef:io_k8s_api_core_v1_LocalObjectReferenceInput
  # VolumeName is the human-readable name of the StorageOS volume.  Volume names are only unique within a namespace.
  volumeName:String
  # VolumeNamespace specifies the scope of the volume within StorageOS.  If no namespace is specified then the Pod's namespace will be used.  This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to "default" if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created.
  volumeNamespace:String
  # Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
  fsType:String
}
# Represents a StorageOS persistent volume resource.
type io_k8s_api_core_v1_StorageOSVolumeSourceResult {
  # Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
  fsType:String
  # Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
  readOnly:Boolean
  # LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
  secretRef:io_k8s_api_core_v1_LocalObjectReferenceResult
  # VolumeName is the human-readable name of the StorageOS volume.  Volume names are only unique within a namespace.
  volumeName:String
  # VolumeNamespace specifies the scope of the volume within StorageOS.  If no namespace is specified then the Pod's namespace will be used.  This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to "default" if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created.
  volumeNamespace:String
}
# Sysctl defines a kernel parameter to be set
input io_k8s_api_core_v1_SysctlInput {
  # Name of a property to set
  name:String
  # Value of a property to set
  value:String
}
# Sysctl defines a kernel parameter to be set
type io_k8s_api_core_v1_SysctlResult {
  # Name of a property to set
  name:String
  # Value of a property to set
  value:String
}
# TCPSocketAction describes an action based on opening a socket
input io_k8s_api_core_v1_TCPSocketActionInput {
  # Optional: Host name to connect to, defaults to the pod IP.
  host:String
  # IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number.
  port:String
}
# TCPSocketAction describes an action based on opening a socket
type io_k8s_api_core_v1_TCPSocketActionResult {
  # Optional: Host name to connect to, defaults to the pod IP.
  host:String
  # IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number.
  port:String
}
# The node this Taint is attached to has the "effect" on any pod that does not tolerate the Taint.
input io_k8s_api_core_v1_TaintInput {
  # Required. The effect of the taint on pods that do not tolerate the taint. Valid effects are NoSchedule, PreferNoSchedule and NoExecute.
  effect:String
  # Required. The taint key to be applied to a node.
  key:String
  # Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
  timeAdded:String
  # Required. The taint value corresponding to the taint key.
  value:String
}
# The node this Taint is attached to has the "effect" on any pod that does not tolerate the Taint.
type io_k8s_api_core_v1_TaintResult {
  # Required. The effect of the taint on pods that do not tolerate the taint. Valid effects are NoSchedule, PreferNoSchedule and NoExecute.
  effect:String
  # Required. The taint key to be applied to a node.
  key:String
  # Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
  timeAdded:String
  # Required. The taint value corresponding to the taint key.
  value:String
}
# The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.
input io_k8s_api_core_v1_TolerationInput {
  # Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
  effect:String
  # Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
  key:String
  # Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
  operator:String
  # TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
  tolerationSeconds:Int
  # Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
  value:String
}
# The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.
type io_k8s_api_core_v1_TolerationResult {
  # Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
  effect:String
  # Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
  key:String
  # Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
  operator:String
  # TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
  tolerationSeconds:Int
  # Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
  value:String
}
# A topology selector requirement is a selector that matches given label. This is an alpha feature and may change in the future.
input io_k8s_api_core_v1_TopologySelectorLabelRequirementInput {
  # The label key that the selector applies to.
  key:String
  # An array of string values. One value must match the label to be selected. Each entry in Values is ORed.
  values:[String]
}
# A topology selector requirement is a selector that matches given label. This is an alpha feature and may change in the future.
type io_k8s_api_core_v1_TopologySelectorLabelRequirementResult {
  # The label key that the selector applies to.
  key:String
  # An array of string values. One value must match the label to be selected. Each entry in Values is ORed.
  values:[String]
}
# A topology selector term represents the result of label queries. A null or empty topology selector term matches no objects. The requirements of them are ANDed. It provides a subset of functionality as NodeSelectorTerm. This is an alpha feature and may change in the future.
input io_k8s_api_core_v1_TopologySelectorTermInput {
  # A list of topology selector requirements by labels.
  matchLabelExpressions:[io_k8s_api_core_v1_TopologySelectorLabelRequirementInput]
}
# A topology selector term represents the result of label queries. A null or empty topology selector term matches no objects. The requirements of them are ANDed. It provides a subset of functionality as NodeSelectorTerm. This is an alpha feature and may change in the future.
type io_k8s_api_core_v1_TopologySelectorTermResult {
  # A list of topology selector requirements by labels.
  matchLabelExpressions:[io_k8s_api_core_v1_TopologySelectorLabelRequirementResult]
}
# TopologySpreadConstraint specifies how to spread matching pods among the given topology.
input io_k8s_api_core_v1_TopologySpreadConstraintInput {
  # MaxSkew describes the degree to which pods may be unevenly distributed. It's the maximum permitted difference between the number of matching pods in any two topology domains of a given topology type. For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same labelSelector spread as 1/1/0: | zone1 | zone2 | zone3 | |   P   |   P   |       | - if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 1/1/1; scheduling it onto zone1(zone2) would make the ActualSkew(2-0) on zone1(zone2) violate MaxSkew(1). - if MaxSkew is 2, incoming pod can be scheduled onto any zone. It's a required field. Default value is 1 and 0 is not allowed.
  maxSkew:Int
  # TopologyKey is the key of node labels. Nodes that have a label with this key and identical values are considered to be in the same topology. We consider each <key, value> as a "bucket", and try to put balanced number of pods into each bucket. It's a required field.
  topologyKey:String
  # WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy the spread constraint. - DoNotSchedule (default) tells the scheduler not to schedule it - ScheduleAnyway tells the scheduler to still schedule it It's considered as "Unsatisfiable" if and only if placing incoming pod on any topology violates "MaxSkew". For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same labelSelector spread as 3/1/1: | zone1 | zone2 | zone3 | | P P P |   P   |   P   | If WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled to zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies MaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler won't make it *more* imbalanced. It's a required field.
  whenUnsatisfiable:String
  # A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
  labelSelector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorInput
}
# TopologySpreadConstraint specifies how to spread matching pods among the given topology.
type io_k8s_api_core_v1_TopologySpreadConstraintResult {
  # A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
  labelSelector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorResult
  # MaxSkew describes the degree to which pods may be unevenly distributed. It's the maximum permitted difference between the number of matching pods in any two topology domains of a given topology type. For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same labelSelector spread as 1/1/0: | zone1 | zone2 | zone3 | |   P   |   P   |       | - if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 1/1/1; scheduling it onto zone1(zone2) would make the ActualSkew(2-0) on zone1(zone2) violate MaxSkew(1). - if MaxSkew is 2, incoming pod can be scheduled onto any zone. It's a required field. Default value is 1 and 0 is not allowed.
  maxSkew:Int
  # TopologyKey is the key of node labels. Nodes that have a label with this key and identical values are considered to be in the same topology. We consider each <key, value> as a "bucket", and try to put balanced number of pods into each bucket. It's a required field.
  topologyKey:String
  # WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy the spread constraint. - DoNotSchedule (default) tells the scheduler not to schedule it - ScheduleAnyway tells the scheduler to still schedule it It's considered as "Unsatisfiable" if and only if placing incoming pod on any topology violates "MaxSkew". For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same labelSelector spread as 3/1/1: | zone1 | zone2 | zone3 | | P P P |   P   |   P   | If WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled to zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies MaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler won't make it *more* imbalanced. It's a required field.
  whenUnsatisfiable:String
}
# TypedLocalObjectReference contains enough information to let you locate the typed referenced object inside the same namespace.
input io_k8s_api_core_v1_TypedLocalObjectReferenceInput {
  # APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
  apiGroup:String
  # Kind is the type of resource being referenced
  kind:String
  # Name is the name of resource being referenced
  name:String
}
# TypedLocalObjectReference contains enough information to let you locate the typed referenced object inside the same namespace.
type io_k8s_api_core_v1_TypedLocalObjectReferenceResult {
  # APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
  apiGroup:String
  # Kind is the type of resource being referenced
  kind:String
  # Name is the name of resource being referenced
  name:String
}
# volumeDevice describes a mapping of a raw block device within a container.
input io_k8s_api_core_v1_VolumeDeviceInput {
  # devicePath is the path inside of the container that the device will be mapped to.
  devicePath:String
  # name must match the name of a persistentVolumeClaim in the pod
  name:String
}
# volumeDevice describes a mapping of a raw block device within a container.
type io_k8s_api_core_v1_VolumeDeviceResult {
  # devicePath is the path inside of the container that the device will be mapped to.
  devicePath:String
  # name must match the name of a persistentVolumeClaim in the pod
  name:String
}
# Volume represents a named volume in a pod that may be accessed by any container in the pod.
input io_k8s_api_core_v1_VolumeInput {
  # Represents a vSphere volume resource.
  vsphereVolume:io_k8s_api_core_v1_VsphereVirtualDiskVolumeSourceInput
  # FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.
  flexVolume:io_k8s_api_core_v1_FlexVolumeSourceInput
  # Represents an NFS mount that lasts the lifetime of a pod. NFS volumes do not support ownership management or SELinux relabeling.
  nfs:io_k8s_api_core_v1_NFSVolumeSourceInput
  # Represents a Persistent Disk resource in Google Compute Engine.
  # A GCE PD must exist before mounting to a container. The disk must also be in the same GCE project and zone as the kubelet. A GCE PD can only be mounted as read/write once or read-only many times. GCE PDs support ownership management and SELinux relabeling.
  gcePersistentDisk:io_k8s_api_core_v1_GCEPersistentDiskVolumeSourceInput
  # Represents a host path mapped into a pod. Host path volumes do not support ownership management or SELinux relabeling.
  hostPath:io_k8s_api_core_v1_HostPathVolumeSourceInput
  # Represents an ISCSI disk. ISCSI volumes can only be mounted as read/write once. ISCSI volumes support ownership management and SELinux relabeling.
  iscsi:io_k8s_api_core_v1_ISCSIVolumeSourceInput
  # PersistentVolumeClaimVolumeSource references the user's PVC in the same namespace. This volume finds the bound PV and mounts that volume for the pod. A PersistentVolumeClaimVolumeSource is, essentially, a wrapper around another type of volume that is owned by someone else (the system).
  persistentVolumeClaim:io_k8s_api_core_v1_PersistentVolumeClaimVolumeSourceInput
  # Represents a projected volume source
  projected:io_k8s_api_core_v1_ProjectedVolumeSourceInput
  # Adapts a Secret into a volume.
  # The contents of the target Secret's Data field will be presented in a volume as files using the keys in the Data field as the file names. Secret volumes support ownership management and SELinux relabeling.
  secret:io_k8s_api_core_v1_SecretVolumeSourceInput
  # Represents a cinder volume resource in Openstack. A Cinder volume must exist before mounting to a container. The volume must also be in the same region as the kubelet. Cinder volumes support ownership management and SELinux relabeling.
  cinder:io_k8s_api_core_v1_CinderVolumeSourceInput
  # Adapts a ConfigMap into a volume.
  # The contents of the target ConfigMap's Data field will be presented in a volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. ConfigMap volumes support ownership management and SELinux relabeling.
  configMap:io_k8s_api_core_v1_ConfigMapVolumeSourceInput
  # Represents a Fibre Channel volume. Fibre Channel volumes can only be mounted as read/write once. Fibre Channel volumes support ownership management and SELinux relabeling.
  fc:io_k8s_api_core_v1_FCVolumeSourceInput
  # Represents a Flocker volume mounted by the Flocker agent. One and only one of datasetName and datasetUUID should be set. Flocker volumes do not support ownership management or SELinux relabeling.
  flocker:io_k8s_api_core_v1_FlockerVolumeSourceInput
  # Represents a Glusterfs mount that lasts the lifetime of a pod. Glusterfs volumes do not support ownership management or SELinux relabeling.
  glusterfs:io_k8s_api_core_v1_GlusterfsVolumeSourceInput
  # PortworxVolumeSource represents a Portworx volume resource.
  portworxVolume:io_k8s_api_core_v1_PortworxVolumeSourceInput
  # Represents a Persistent Disk resource in AWS.
  # An AWS EBS disk must exist before mounting to a container. The disk must also be in the same AWS zone as the kubelet. An AWS EBS disk can only be mounted as read/write once. AWS EBS volumes support ownership management and SELinux relabeling.
  awsElasticBlockStore:io_k8s_api_core_v1_AWSElasticBlockStoreVolumeSourceInput
  # AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
  azureDisk:io_k8s_api_core_v1_AzureDiskVolumeSourceInput
  # Represents a Ceph Filesystem mount that lasts the lifetime of a pod Cephfs volumes do not support ownership management or SELinux relabeling.
  cephfs:io_k8s_api_core_v1_CephFSVolumeSourceInput
  # Represents a source location of a volume to mount, managed by an external CSI driver
  csi:io_k8s_api_core_v1_CSIVolumeSourceInput
  # Represents a Photon Controller persistent disk resource.
  photonPersistentDisk:io_k8s_api_core_v1_PhotonPersistentDiskVolumeSourceInput
  # ScaleIOVolumeSource represents a persistent ScaleIO volume
  scaleIO:io_k8s_api_core_v1_ScaleIOVolumeSourceInput
  # Represents a Quobyte mount that lasts the lifetime of a pod. Quobyte volumes do not support ownership management or SELinux relabeling.
  quobyte:io_k8s_api_core_v1_QuobyteVolumeSourceInput
  # Represents an empty directory for a pod. Empty directory volumes support ownership management and SELinux relabeling.
  emptyDir:io_k8s_api_core_v1_EmptyDirVolumeSourceInput
  # Represents a volume that is populated with the contents of a git repository. Git repo volumes do not support ownership management. Git repo volumes support SELinux relabeling.
  # DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.
  gitRepo:io_k8s_api_core_v1_GitRepoVolumeSourceInput
  # AzureFile represents an Azure File Service mount on the host and bind mount to the pod.
  azureFile:io_k8s_api_core_v1_AzureFileVolumeSourceInput
  # Represents a Rados Block Device mount that lasts the lifetime of a pod. RBD volumes support ownership management and SELinux relabeling.
  rbd:io_k8s_api_core_v1_RBDVolumeSourceInput
  # Represents a StorageOS persistent volume resource.
  storageos:io_k8s_api_core_v1_StorageOSVolumeSourceInput
  # DownwardAPIVolumeSource represents a volume containing downward API info. Downward API volumes support ownership management and SELinux relabeling.
  downwardAPI:io_k8s_api_core_v1_DownwardAPIVolumeSourceInput
  # Volume's name. Must be a DNS_LABEL and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
  name:String
}
# VolumeMount describes a mounting of a Volume within a container.
input io_k8s_api_core_v1_VolumeMountInput {
  # Path within the container at which the volume should be mounted.  Must not contain ':'.
  mountPath:String
  # mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.
  mountPropagation:String
  # This must match the Name of a Volume.
  name:String
  # Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
  readOnly:Boolean
  # Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
  subPath:String
  # Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to "" (volume's root). SubPathExpr and SubPath are mutually exclusive.
  subPathExpr:String
}
# VolumeMount describes a mounting of a Volume within a container.
type io_k8s_api_core_v1_VolumeMountResult {
  # Path within the container at which the volume should be mounted.  Must not contain ':'.
  mountPath:String
  # mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.
  mountPropagation:String
  # This must match the Name of a Volume.
  name:String
  # Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
  readOnly:Boolean
  # Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
  subPath:String
  # Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to "" (volume's root). SubPathExpr and SubPath are mutually exclusive.
  subPathExpr:String
}
# VolumeNodeAffinity defines constraints that limit what nodes this volume can be accessed from.
input io_k8s_api_core_v1_VolumeNodeAffinityInput {
  # A node selector represents the union of the results of one or more label queries over a set of nodes; that is, it represents the OR of the selectors represented by the node selector terms.
  required:io_k8s_api_core_v1_NodeSelectorInput
}
# VolumeNodeAffinity defines constraints that limit what nodes this volume can be accessed from.
type io_k8s_api_core_v1_VolumeNodeAffinityResult {
  # A node selector represents the union of the results of one or more label queries over a set of nodes; that is, it represents the OR of the selectors represented by the node selector terms.
  required:io_k8s_api_core_v1_NodeSelectorResult
}
# Projection that may be projected along with other supported volume types
input io_k8s_api_core_v1_VolumeProjectionInput {
  # Adapts a ConfigMap into a projected volume.
  # The contents of the target ConfigMap's Data field will be presented in a projected volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. Note that this is identical to a configmap volume source without the default mode.
  configMap:io_k8s_api_core_v1_ConfigMapProjectionInput
  # Represents downward API info for projecting into a projected volume. Note that this is identical to a downwardAPI volume source without the default mode.
  downwardAPI:io_k8s_api_core_v1_DownwardAPIProjectionInput
  # Adapts a secret into a projected volume.
  # The contents of the target Secret's Data field will be presented in a projected volume as files using the keys in the Data field as the file names. Note that this is identical to a secret volume source without the default mode.
  secret:io_k8s_api_core_v1_SecretProjectionInput
  # ServiceAccountTokenProjection represents a projected service account token volume. This projection can be used to insert a service account token into the pods runtime filesystem for use against APIs (Kubernetes API Server or otherwise).
  serviceAccountToken:io_k8s_api_core_v1_ServiceAccountTokenProjectionInput
}
# Projection that may be projected along with other supported volume types
type io_k8s_api_core_v1_VolumeProjectionResult {
  # Adapts a ConfigMap into a projected volume.
  # The contents of the target ConfigMap's Data field will be presented in a projected volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. Note that this is identical to a configmap volume source without the default mode.
  configMap:io_k8s_api_core_v1_ConfigMapProjectionResult
  # Represents downward API info for projecting into a projected volume. Note that this is identical to a downwardAPI volume source without the default mode.
  downwardAPI:io_k8s_api_core_v1_DownwardAPIProjectionResult
  # Adapts a secret into a projected volume.
  # The contents of the target Secret's Data field will be presented in a projected volume as files using the keys in the Data field as the file names. Note that this is identical to a secret volume source without the default mode.
  secret:io_k8s_api_core_v1_SecretProjectionResult
  # ServiceAccountTokenProjection represents a projected service account token volume. This projection can be used to insert a service account token into the pods runtime filesystem for use against APIs (Kubernetes API Server or otherwise).
  serviceAccountToken:io_k8s_api_core_v1_ServiceAccountTokenProjectionResult
}
# Volume represents a named volume in a pod that may be accessed by any container in the pod.
type io_k8s_api_core_v1_VolumeResult {
  # Represents a Persistent Disk resource in AWS.
  # An AWS EBS disk must exist before mounting to a container. The disk must also be in the same AWS zone as the kubelet. An AWS EBS disk can only be mounted as read/write once. AWS EBS volumes support ownership management and SELinux relabeling.
  awsElasticBlockStore:io_k8s_api_core_v1_AWSElasticBlockStoreVolumeSourceResult
  # AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
  azureDisk:io_k8s_api_core_v1_AzureDiskVolumeSourceResult
  # AzureFile represents an Azure File Service mount on the host and bind mount to the pod.
  azureFile:io_k8s_api_core_v1_AzureFileVolumeSourceResult
  # Represents a Ceph Filesystem mount that lasts the lifetime of a pod Cephfs volumes do not support ownership management or SELinux relabeling.
  cephfs:io_k8s_api_core_v1_CephFSVolumeSourceResult
  # Represents a cinder volume resource in Openstack. A Cinder volume must exist before mounting to a container. The volume must also be in the same region as the kubelet. Cinder volumes support ownership management and SELinux relabeling.
  cinder:io_k8s_api_core_v1_CinderVolumeSourceResult
  # Adapts a ConfigMap into a volume.
  # The contents of the target ConfigMap's Data field will be presented in a volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. ConfigMap volumes support ownership management and SELinux relabeling.
  configMap:io_k8s_api_core_v1_ConfigMapVolumeSourceResult
  # Represents a source location of a volume to mount, managed by an external CSI driver
  csi:io_k8s_api_core_v1_CSIVolumeSourceResult
  # DownwardAPIVolumeSource represents a volume containing downward API info. Downward API volumes support ownership management and SELinux relabeling.
  downwardAPI:io_k8s_api_core_v1_DownwardAPIVolumeSourceResult
  # Represents an empty directory for a pod. Empty directory volumes support ownership management and SELinux relabeling.
  emptyDir:io_k8s_api_core_v1_EmptyDirVolumeSourceResult
  # Represents a Fibre Channel volume. Fibre Channel volumes can only be mounted as read/write once. Fibre Channel volumes support ownership management and SELinux relabeling.
  fc:io_k8s_api_core_v1_FCVolumeSourceResult
  # FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.
  flexVolume:io_k8s_api_core_v1_FlexVolumeSourceResult
  # Represents a Flocker volume mounted by the Flocker agent. One and only one of datasetName and datasetUUID should be set. Flocker volumes do not support ownership management or SELinux relabeling.
  flocker:io_k8s_api_core_v1_FlockerVolumeSourceResult
  # Represents a Persistent Disk resource in Google Compute Engine.
  # A GCE PD must exist before mounting to a container. The disk must also be in the same GCE project and zone as the kubelet. A GCE PD can only be mounted as read/write once or read-only many times. GCE PDs support ownership management and SELinux relabeling.
  gcePersistentDisk:io_k8s_api_core_v1_GCEPersistentDiskVolumeSourceResult
  # Represents a volume that is populated with the contents of a git repository. Git repo volumes do not support ownership management. Git repo volumes support SELinux relabeling.
  # DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.
  gitRepo:io_k8s_api_core_v1_GitRepoVolumeSourceResult
  # Represents a Glusterfs mount that lasts the lifetime of a pod. Glusterfs volumes do not support ownership management or SELinux relabeling.
  glusterfs:io_k8s_api_core_v1_GlusterfsVolumeSourceResult
  # Represents a host path mapped into a pod. Host path volumes do not support ownership management or SELinux relabeling.
  hostPath:io_k8s_api_core_v1_HostPathVolumeSourceResult
  # Represents an ISCSI disk. ISCSI volumes can only be mounted as read/write once. ISCSI volumes support ownership management and SELinux relabeling.
  iscsi:io_k8s_api_core_v1_ISCSIVolumeSourceResult
  # Volume's name. Must be a DNS_LABEL and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
  name:String
  # Represents an NFS mount that lasts the lifetime of a pod. NFS volumes do not support ownership management or SELinux relabeling.
  nfs:io_k8s_api_core_v1_NFSVolumeSourceResult
  # PersistentVolumeClaimVolumeSource references the user's PVC in the same namespace. This volume finds the bound PV and mounts that volume for the pod. A PersistentVolumeClaimVolumeSource is, essentially, a wrapper around another type of volume that is owned by someone else (the system).
  persistentVolumeClaim:io_k8s_api_core_v1_PersistentVolumeClaimVolumeSourceResult
  # Represents a Photon Controller persistent disk resource.
  photonPersistentDisk:io_k8s_api_core_v1_PhotonPersistentDiskVolumeSourceResult
  # PortworxVolumeSource represents a Portworx volume resource.
  portworxVolume:io_k8s_api_core_v1_PortworxVolumeSourceResult
  # Represents a projected volume source
  projected:io_k8s_api_core_v1_ProjectedVolumeSourceResult
  # Represents a Quobyte mount that lasts the lifetime of a pod. Quobyte volumes do not support ownership management or SELinux relabeling.
  quobyte:io_k8s_api_core_v1_QuobyteVolumeSourceResult
  # Represents a Rados Block Device mount that lasts the lifetime of a pod. RBD volumes support ownership management and SELinux relabeling.
  rbd:io_k8s_api_core_v1_RBDVolumeSourceResult
  # ScaleIOVolumeSource represents a persistent ScaleIO volume
  scaleIO:io_k8s_api_core_v1_ScaleIOVolumeSourceResult
  # Adapts a Secret into a volume.
  # The contents of the target Secret's Data field will be presented in a volume as files using the keys in the Data field as the file names. Secret volumes support ownership management and SELinux relabeling.
  secret:io_k8s_api_core_v1_SecretVolumeSourceResult
  # Represents a StorageOS persistent volume resource.
  storageos:io_k8s_api_core_v1_StorageOSVolumeSourceResult
  # Represents a vSphere volume resource.
  vsphereVolume:io_k8s_api_core_v1_VsphereVirtualDiskVolumeSourceResult
}
# Represents a vSphere volume resource.
input io_k8s_api_core_v1_VsphereVirtualDiskVolumeSourceInput {
  # Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
  fsType:String
  # Storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.
  storagePolicyID:String
  # Storage Policy Based Management (SPBM) profile name.
  storagePolicyName:String
  # Path that identifies vSphere volume vmdk
  volumePath:String
}
# Represents a vSphere volume resource.
type io_k8s_api_core_v1_VsphereVirtualDiskVolumeSourceResult {
  # Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
  fsType:String
  # Storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.
  storagePolicyID:String
  # Storage Policy Based Management (SPBM) profile name.
  storagePolicyName:String
  # Path that identifies vSphere volume vmdk
  volumePath:String
}
# The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
input io_k8s_api_core_v1_WeightedPodAffinityTermInput {
  # Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
  podAffinityTerm:io_k8s_api_core_v1_PodAffinityTermInput
  # weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
  weight:Int
}
# The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
type io_k8s_api_core_v1_WeightedPodAffinityTermResult {
  # Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
  podAffinityTerm:io_k8s_api_core_v1_PodAffinityTermResult
  # weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
  weight:Int
}
# WindowsSecurityContextOptions contain Windows-specific options and credentials.
input io_k8s_api_core_v1_WindowsSecurityContextOptionsInput {
  # GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.
  gmsaCredentialSpec:String
  # GMSACredentialSpecName is the name of the GMSA credential spec to use. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.
  gmsaCredentialSpecName:String
  # The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. This field is beta-level and may be disabled with the WindowsRunAsUserName feature flag.
  runAsUserName:String
}
# WindowsSecurityContextOptions contain Windows-specific options and credentials.
type io_k8s_api_core_v1_WindowsSecurityContextOptionsResult {
  # GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.
  gmsaCredentialSpec:String
  # GMSACredentialSpecName is the name of the GMSA credential spec to use. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.
  gmsaCredentialSpecName:String
  # The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. This field is beta-level and may be disabled with the WindowsRunAsUserName feature flag.
  runAsUserName:String
}
# EndpointConditions represents the current condition of an endpoint.
input io_k8s_api_discovery_v1beta1_EndpointConditionsInput {
  # ready indicates that this endpoint is prepared to receive traffic, according to whatever system is managing the endpoint. A nil value indicates an unknown state. In most cases consumers should interpret this unknown state as ready.
  ready:Boolean
}
# EndpointConditions represents the current condition of an endpoint.
type io_k8s_api_discovery_v1beta1_EndpointConditionsResult {
  # ready indicates that this endpoint is prepared to receive traffic, according to whatever system is managing the endpoint. A nil value indicates an unknown state. In most cases consumers should interpret this unknown state as ready.
  ready:Boolean
}
# Endpoint represents a single logical "backend" implementing a service.
input io_k8s_api_discovery_v1beta1_EndpointInput {
  # addresses of this endpoint. The contents of this field are interpreted according to the corresponding EndpointSlice addressType field. Consumers must handle different types of addresses in the context of their own capabilities. This must contain at least one address but no more than 100.
  addresses:[String]
  # EndpointConditions represents the current condition of an endpoint.
  conditions:io_k8s_api_discovery_v1beta1_EndpointConditionsInput
  # hostname of this endpoint. This field may be used by consumers of endpoints to distinguish endpoints from each other (e.g. in DNS names). Multiple endpoints which use the same hostname should be considered fungible (e.g. multiple A values in DNS). Must pass DNS Label (RFC 1123) validation.
  hostname:String
  # ObjectReference contains enough information to let you inspect or modify the referred object.
  targetRef:io_k8s_api_core_v1_ObjectReferenceInput
}
# EndpointPort represents a Port used by an EndpointSlice
input io_k8s_api_discovery_v1beta1_EndpointPortInput {
  # The application protocol for this port. This field follows standard Kubernetes label syntax. Un-prefixed names are reserved for IANA standard service names (as per RFC-6335 and http://www.iana.org/assignments/service-names). Non-standard protocols should use prefixed names. Default is empty string.
  appProtocol:String
  # The name of this port. All ports in an EndpointSlice must have a unique name. If the EndpointSlice is dervied from a Kubernetes service, this corresponds to the Service.ports[].name. Name must either be an empty string or pass DNS_LABEL validation: * must be no more than 63 characters long. * must consist of lower case alphanumeric characters or '-'. * must start and end with an alphanumeric character. Default is empty string.
  name:String
  # The port number of the endpoint. If this is not specified, ports are not restricted and must be interpreted in the context of the specific consumer.
  port:Int
  # The IP protocol for this port. Must be UDP, TCP, or SCTP. Default is TCP.
  protocol:String
}
# EndpointPort represents a Port used by an EndpointSlice
type io_k8s_api_discovery_v1beta1_EndpointPortResult {
  # The application protocol for this port. This field follows standard Kubernetes label syntax. Un-prefixed names are reserved for IANA standard service names (as per RFC-6335 and http://www.iana.org/assignments/service-names). Non-standard protocols should use prefixed names. Default is empty string.
  appProtocol:String
  # The name of this port. All ports in an EndpointSlice must have a unique name. If the EndpointSlice is dervied from a Kubernetes service, this corresponds to the Service.ports[].name. Name must either be an empty string or pass DNS_LABEL validation: * must be no more than 63 characters long. * must consist of lower case alphanumeric characters or '-'. * must start and end with an alphanumeric character. Default is empty string.
  name:String
  # The port number of the endpoint. If this is not specified, ports are not restricted and must be interpreted in the context of the specific consumer.
  port:Int
  # The IP protocol for this port. Must be UDP, TCP, or SCTP. Default is TCP.
  protocol:String
}
# Endpoint represents a single logical "backend" implementing a service.
type io_k8s_api_discovery_v1beta1_EndpointResult {
  # addresses of this endpoint. The contents of this field are interpreted according to the corresponding EndpointSlice addressType field. Consumers must handle different types of addresses in the context of their own capabilities. This must contain at least one address but no more than 100.
  addresses:[String]
  # EndpointConditions represents the current condition of an endpoint.
  conditions:io_k8s_api_discovery_v1beta1_EndpointConditionsResult
  # hostname of this endpoint. This field may be used by consumers of endpoints to distinguish endpoints from each other (e.g. in DNS names). Multiple endpoints which use the same hostname should be considered fungible (e.g. multiple A values in DNS). Must pass DNS Label (RFC 1123) validation.
  hostname:String
  # ObjectReference contains enough information to let you inspect or modify the referred object.
  targetRef:io_k8s_api_core_v1_ObjectReferenceResult
}
# EndpointSlice represents a subset of the endpoints that implement a service. For a given service there may be multiple EndpointSlice objects, selected by labels, which must be joined to produce the full set of endpoints.
input io_k8s_api_discovery_v1beta1_EndpointSliceInput {
  # endpoints is a list of unique endpoints in this slice. Each slice may include a maximum of 1000 endpoints.
  endpoints:[io_k8s_api_discovery_v1beta1_EndpointInput]
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  # ports specifies the list of network ports exposed by each endpoint in this slice. Each port must have a unique name. When ports is empty, it indicates that there are no defined ports. When a port is defined with a nil port value, it indicates "all ports". Each slice may include a maximum of 100 ports.
  ports:[io_k8s_api_discovery_v1beta1_EndpointPortInput]
  # addressType specifies the type of address carried by this EndpointSlice. All addresses in this slice must be the same type. This field is immutable after creation. The following address types are currently supported: * IPv4: Represents an IPv4 Address. * IPv6: Represents an IPv6 Address. * FQDN: Represents a Fully Qualified Domain Name.
  addressType:String
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
}
# EndpointSliceList represents a list of endpoint slices
type io_k8s_api_discovery_v1beta1_EndpointSliceListResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # List of endpoint slices
  items:[io_k8s_api_discovery_v1beta1_EndpointSliceResult]
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
# EndpointSlice represents a subset of the endpoints that implement a service. For a given service there may be multiple EndpointSlice objects, selected by labels, which must be joined to produce the full set of endpoints.
type io_k8s_api_discovery_v1beta1_EndpointSliceResult {
  # addressType specifies the type of address carried by this EndpointSlice. All addresses in this slice must be the same type. This field is immutable after creation. The following address types are currently supported: * IPv4: Represents an IPv4 Address. * IPv6: Represents an IPv6 Address. * FQDN: Represents a Fully Qualified Domain Name.
  addressType:String
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # endpoints is a list of unique endpoints in this slice. Each slice may include a maximum of 1000 endpoints.
  endpoints:[io_k8s_api_discovery_v1beta1_EndpointResult]
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  # ports specifies the list of network ports exposed by each endpoint in this slice. Each port must have a unique name. When ports is empty, it indicates that there are no defined ports. When a port is defined with a nil port value, it indicates "all ports". Each slice may include a maximum of 100 ports.
  ports:[io_k8s_api_discovery_v1beta1_EndpointPortResult]
}
# Event is a report of an event somewhere in the cluster. It generally denotes some state change in the system.
input io_k8s_api_events_v1beta1_EventInput {
  # ObjectReference contains enough information to let you inspect or modify the referred object.
  regarding:io_k8s_api_core_v1_ObjectReferenceInput
  # Deprecated field assuring backward compatibility with core.v1 Event type
  deprecatedCount:Int
  # Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
  deprecatedLastTimestamp:String
  # EventSource contains information for an event.
  deprecatedSource:io_k8s_api_core_v1_EventSourceInput
  # Optional. A human-readable description of the status of this operation. Maximal length of the note is 1kB, but libraries should be prepared to handle values up to 64kB.
  note:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # Type of this event (Normal, Warning), new types could be added in the future.
  type:String
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  # ObjectReference contains enough information to let you inspect or modify the referred object.
  related:io_k8s_api_core_v1_ObjectReferenceInput
  # EventSeries contain information on series of events, i.e. thing that was/is happening continuously for some time.
  series:io_k8s_api_events_v1beta1_EventSeriesInput
  # Name of the controller that emitted this Event, e.g. `kubernetes.io/kubelet`.
  reportingController:String
  # ID of the controller instance, e.g. `kubelet-xyzf`.
  reportingInstance:String
  # What action was taken/failed regarding to the regarding object.
  action:String
  # Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
  deprecatedFirstTimestamp:String
  # MicroTime is version of Time with microsecond level precision.
  eventTime:String
  # Why the action was taken.
  reason:String
}
# EventList is a list of Event objects.
type io_k8s_api_events_v1beta1_EventListResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Items is a list of schema objects.
  items:[io_k8s_api_events_v1beta1_EventResult]
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
# Event is a report of an event somewhere in the cluster. It generally denotes some state change in the system.
type io_k8s_api_events_v1beta1_EventResult {
  # What action was taken/failed regarding to the regarding object.
  action:String
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Deprecated field assuring backward compatibility with core.v1 Event type
  deprecatedCount:Int
  # Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
  deprecatedFirstTimestamp:String
  # Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
  deprecatedLastTimestamp:String
  # EventSource contains information for an event.
  deprecatedSource:io_k8s_api_core_v1_EventSourceResult
  # MicroTime is version of Time with microsecond level precision.
  eventTime:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  # Optional. A human-readable description of the status of this operation. Maximal length of the note is 1kB, but libraries should be prepared to handle values up to 64kB.
  note:String
  # Why the action was taken.
  reason:String
  # ObjectReference contains enough information to let you inspect or modify the referred object.
  regarding:io_k8s_api_core_v1_ObjectReferenceResult
  # ObjectReference contains enough information to let you inspect or modify the referred object.
  related:io_k8s_api_core_v1_ObjectReferenceResult
  # Name of the controller that emitted this Event, e.g. `kubernetes.io/kubelet`.
  reportingController:String
  # ID of the controller instance, e.g. `kubelet-xyzf`.
  reportingInstance:String
  # EventSeries contain information on series of events, i.e. thing that was/is happening continuously for some time.
  series:io_k8s_api_events_v1beta1_EventSeriesResult
  # Type of this event (Normal, Warning), new types could be added in the future.
  type:String
}
# EventSeries contain information on series of events, i.e. thing that was/is happening continuously for some time.
input io_k8s_api_events_v1beta1_EventSeriesInput {
  # Information whether this series is ongoing or finished. Deprecated. Planned removal for 1.18
  state:String
  # Number of occurrences in this series up to the last heartbeat time
  count:Int
  # MicroTime is version of Time with microsecond level precision.
  lastObservedTime:String
}
# EventSeries contain information on series of events, i.e. thing that was/is happening continuously for some time.
type io_k8s_api_events_v1beta1_EventSeriesResult {
  # Number of occurrences in this series up to the last heartbeat time
  count:Int
  # MicroTime is version of Time with microsecond level precision.
  lastObservedTime:String
  # Information whether this series is ongoing or finished. Deprecated. Planned removal for 1.18
  state:String
}
# HTTPIngressPath associates a path regex with a backend. Incoming urls matching the path are forwarded to the backend.
input io_k8s_api_extensions_v1beta1_HTTPIngressPathInput {
  # IngressBackend describes all endpoints for a given service and port.
  backend:io_k8s_api_extensions_v1beta1_IngressBackendInput
  # Path is an extended POSIX regex as defined by IEEE Std 1003.1, (i.e this follows the egrep/unix syntax, not the perl syntax) matched against the path of an incoming request. Currently it can contain characters disallowed from the conventional "path" part of a URL as defined by RFC 3986. Paths must begin with a '/'. If unspecified, the path defaults to a catch all sending traffic to the backend.
  path:String
}
# HTTPIngressPath associates a path regex with a backend. Incoming urls matching the path are forwarded to the backend.
type io_k8s_api_extensions_v1beta1_HTTPIngressPathResult {
  # IngressBackend describes all endpoints for a given service and port.
  backend:io_k8s_api_extensions_v1beta1_IngressBackendResult
  # Path is an extended POSIX regex as defined by IEEE Std 1003.1, (i.e this follows the egrep/unix syntax, not the perl syntax) matched against the path of an incoming request. Currently it can contain characters disallowed from the conventional "path" part of a URL as defined by RFC 3986. Paths must begin with a '/'. If unspecified, the path defaults to a catch all sending traffic to the backend.
  path:String
}
# HTTPIngressRuleValue is a list of http selectors pointing to backends. In the example: http://<host>/<path>?<searchpart> -> backend where where parts of the url correspond to RFC 3986, this resource will be used to match against everything after the last '/' and before the first '?' or '#'.
input io_k8s_api_extensions_v1beta1_HTTPIngressRuleValueInput {
  # A collection of paths that map requests to backends.
  paths:[io_k8s_api_extensions_v1beta1_HTTPIngressPathInput]
}
# HTTPIngressRuleValue is a list of http selectors pointing to backends. In the example: http://<host>/<path>?<searchpart> -> backend where where parts of the url correspond to RFC 3986, this resource will be used to match against everything after the last '/' and before the first '?' or '#'.
type io_k8s_api_extensions_v1beta1_HTTPIngressRuleValueResult {
  # A collection of paths that map requests to backends.
  paths:[io_k8s_api_extensions_v1beta1_HTTPIngressPathResult]
}
# IngressBackend describes all endpoints for a given service and port.
input io_k8s_api_extensions_v1beta1_IngressBackendInput {
  # Specifies the name of the referenced service.
  serviceName:String
  # IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number.
  servicePort:String
}
# IngressBackend describes all endpoints for a given service and port.
type io_k8s_api_extensions_v1beta1_IngressBackendResult {
  # Specifies the name of the referenced service.
  serviceName:String
  # IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number.
  servicePort:String
}
# Ingress is a collection of rules that allow inbound connections to reach the endpoints defined by a backend. An Ingress can be configured to give services externally-reachable urls, load balance traffic, terminate SSL, offer name based virtual hosting etc. DEPRECATED - This group version of Ingress is deprecated by networking.k8s.io/v1beta1 Ingress. See the release notes for more information.
input io_k8s_api_extensions_v1beta1_IngressInput {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  # IngressSpec describes the Ingress the user wishes to exist.
  spec:io_k8s_api_extensions_v1beta1_IngressSpecInput
  # IngressStatus describe the current state of the Ingress.
  status:io_k8s_api_extensions_v1beta1_IngressStatusInput
}
# IngressList is a collection of Ingress.
type io_k8s_api_extensions_v1beta1_IngressListResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Items is the list of Ingress.
  items:[io_k8s_api_extensions_v1beta1_IngressResult]
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
# Ingress is a collection of rules that allow inbound connections to reach the endpoints defined by a backend. An Ingress can be configured to give services externally-reachable urls, load balance traffic, terminate SSL, offer name based virtual hosting etc. DEPRECATED - This group version of Ingress is deprecated by networking.k8s.io/v1beta1 Ingress. See the release notes for more information.
type io_k8s_api_extensions_v1beta1_IngressResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  # IngressSpec describes the Ingress the user wishes to exist.
  spec:io_k8s_api_extensions_v1beta1_IngressSpecResult
  # IngressStatus describe the current state of the Ingress.
  status:io_k8s_api_extensions_v1beta1_IngressStatusResult
}
# IngressRule represents the rules mapping the paths under a specified host to the related backend services. Incoming requests are first evaluated for a host match, then routed to the backend associated with the matching IngressRuleValue.
input io_k8s_api_extensions_v1beta1_IngressRuleInput {
  # Host is the fully qualified domain name of a network host, as defined by RFC 3986. Note the following deviations from the "host" part of the URI as defined in the RFC: 1. IPs are not allowed. Currently an IngressRuleValue can only apply to the
  # 	  IP in the Spec of the parent Ingress.
  # 2. The `:` delimiter is not respected because ports are not allowed.
  # 	  Currently the port of an Ingress is implicitly :80 for http and
  # 	  :443 for https.
  # Both these may change in the future. Incoming requests are matched against the host before the IngressRuleValue. If the host is unspecified, the Ingress routes all traffic based on the specified IngressRuleValue.
  host:String
  # HTTPIngressRuleValue is a list of http selectors pointing to backends. In the example: http://<host>/<path>?<searchpart> -> backend where where parts of the url correspond to RFC 3986, this resource will be used to match against everything after the last '/' and before the first '?' or '#'.
  http:io_k8s_api_extensions_v1beta1_HTTPIngressRuleValueInput
}
# IngressRule represents the rules mapping the paths under a specified host to the related backend services. Incoming requests are first evaluated for a host match, then routed to the backend associated with the matching IngressRuleValue.
type io_k8s_api_extensions_v1beta1_IngressRuleResult {
  # Host is the fully qualified domain name of a network host, as defined by RFC 3986. Note the following deviations from the "host" part of the URI as defined in the RFC: 1. IPs are not allowed. Currently an IngressRuleValue can only apply to the
  # 	  IP in the Spec of the parent Ingress.
  # 2. The `:` delimiter is not respected because ports are not allowed.
  # 	  Currently the port of an Ingress is implicitly :80 for http and
  # 	  :443 for https.
  # Both these may change in the future. Incoming requests are matched against the host before the IngressRuleValue. If the host is unspecified, the Ingress routes all traffic based on the specified IngressRuleValue.
  host:String
  # HTTPIngressRuleValue is a list of http selectors pointing to backends. In the example: http://<host>/<path>?<searchpart> -> backend where where parts of the url correspond to RFC 3986, this resource will be used to match against everything after the last '/' and before the first '?' or '#'.
  http:io_k8s_api_extensions_v1beta1_HTTPIngressRuleValueResult
}
# IngressSpec describes the Ingress the user wishes to exist.
input io_k8s_api_extensions_v1beta1_IngressSpecInput {
  # IngressBackend describes all endpoints for a given service and port.
  backend:io_k8s_api_extensions_v1beta1_IngressBackendInput
  # A list of host rules used to configure the Ingress. If unspecified, or no rule matches, all traffic is sent to the default backend.
  rules:[io_k8s_api_extensions_v1beta1_IngressRuleInput]
  # TLS configuration. Currently the Ingress only supports a single TLS port, 443. If multiple members of this list specify different hosts, they will be multiplexed on the same port according to the hostname specified through the SNI TLS extension, if the ingress controller fulfilling the ingress supports SNI.
  tls:[io_k8s_api_extensions_v1beta1_IngressTLSInput]
}
# IngressSpec describes the Ingress the user wishes to exist.
type io_k8s_api_extensions_v1beta1_IngressSpecResult {
  # IngressBackend describes all endpoints for a given service and port.
  backend:io_k8s_api_extensions_v1beta1_IngressBackendResult
  # A list of host rules used to configure the Ingress. If unspecified, or no rule matches, all traffic is sent to the default backend.
  rules:[io_k8s_api_extensions_v1beta1_IngressRuleResult]
  # TLS configuration. Currently the Ingress only supports a single TLS port, 443. If multiple members of this list specify different hosts, they will be multiplexed on the same port according to the hostname specified through the SNI TLS extension, if the ingress controller fulfilling the ingress supports SNI.
  tls:[io_k8s_api_extensions_v1beta1_IngressTLSResult]
}
# IngressStatus describe the current state of the Ingress.
input io_k8s_api_extensions_v1beta1_IngressStatusInput {
  # LoadBalancerStatus represents the status of a load-balancer.
  loadBalancer:io_k8s_api_core_v1_LoadBalancerStatusInput
}
# IngressStatus describe the current state of the Ingress.
type io_k8s_api_extensions_v1beta1_IngressStatusResult {
  # LoadBalancerStatus represents the status of a load-balancer.
  loadBalancer:io_k8s_api_core_v1_LoadBalancerStatusResult
}
# IngressTLS describes the transport layer security associated with an Ingress.
input io_k8s_api_extensions_v1beta1_IngressTLSInput {
  # Hosts are a list of hosts included in the TLS certificate. The values in this list must match the name/s used in the tlsSecret. Defaults to the wildcard host setting for the loadbalancer controller fulfilling this Ingress, if left unspecified.
  hosts:[String]
  # SecretName is the name of the secret used to terminate SSL traffic on 443. Field is left optional to allow SSL routing based on SNI hostname alone. If the SNI host in a listener conflicts with the "Host" header field used by an IngressRule, the SNI host is used for termination and value of the Host header is used for routing.
  secretName:String
}
# IngressTLS describes the transport layer security associated with an Ingress.
type io_k8s_api_extensions_v1beta1_IngressTLSResult {
  # Hosts are a list of hosts included in the TLS certificate. The values in this list must match the name/s used in the tlsSecret. Defaults to the wildcard host setting for the loadbalancer controller fulfilling this Ingress, if left unspecified.
  hosts:[String]
  # SecretName is the name of the secret used to terminate SSL traffic on 443. Field is left optional to allow SSL routing based on SNI hostname alone. If the SNI host in a listener conflicts with the "Host" header field used by an IngressRule, the SNI host is used for termination and value of the Host header is used for routing.
  secretName:String
}
# IPBlock describes a particular CIDR (Ex. "192.168.1.1/24") that is allowed to the pods matched by a NetworkPolicySpec's podSelector. The except entry describes CIDRs that should not be included within this rule.
input io_k8s_api_networking_v1_IPBlockInput {
  # CIDR is a string representing the IP Block Valid examples are "192.168.1.1/24"
  cidr:String
  # Except is a slice of CIDRs that should not be included within an IP Block Valid examples are "192.168.1.1/24" Except values will be rejected if they are outside the CIDR range
  except:[String]
}
# IPBlock describes a particular CIDR (Ex. "192.168.1.1/24") that is allowed to the pods matched by a NetworkPolicySpec's podSelector. The except entry describes CIDRs that should not be included within this rule.
type io_k8s_api_networking_v1_IPBlockResult {
  # CIDR is a string representing the IP Block Valid examples are "192.168.1.1/24"
  cidr:String
  # Except is a slice of CIDRs that should not be included within an IP Block Valid examples are "192.168.1.1/24" Except values will be rejected if they are outside the CIDR range
  except:[String]
}
# NetworkPolicyEgressRule describes a particular set of traffic that is allowed out of pods matched by a NetworkPolicySpec's podSelector. The traffic must match both ports and to. This type is beta-level in 1.8
input io_k8s_api_networking_v1_NetworkPolicyEgressRuleInput {
  # List of destination ports for outgoing traffic. Each item in this list is combined using a logical OR. If this field is empty or missing, this rule matches all ports (traffic not restricted by port). If this field is present and contains at least one item, then this rule allows traffic only if the traffic matches at least one port in the list.
  ports:[io_k8s_api_networking_v1_NetworkPolicyPortInput]
  # List of destinations for outgoing traffic of pods selected for this rule. Items in this list are combined using a logical OR operation. If this field is empty or missing, this rule matches all destinations (traffic not restricted by destination). If this field is present and contains at least one item, this rule allows traffic only if the traffic matches at least one item in the to list.
  to:[io_k8s_api_networking_v1_NetworkPolicyPeerInput]
}
# NetworkPolicyEgressRule describes a particular set of traffic that is allowed out of pods matched by a NetworkPolicySpec's podSelector. The traffic must match both ports and to. This type is beta-level in 1.8
type io_k8s_api_networking_v1_NetworkPolicyEgressRuleResult {
  # List of destination ports for outgoing traffic. Each item in this list is combined using a logical OR. If this field is empty or missing, this rule matches all ports (traffic not restricted by port). If this field is present and contains at least one item, then this rule allows traffic only if the traffic matches at least one port in the list.
  ports:[io_k8s_api_networking_v1_NetworkPolicyPortResult]
  # List of destinations for outgoing traffic of pods selected for this rule. Items in this list are combined using a logical OR operation. If this field is empty or missing, this rule matches all destinations (traffic not restricted by destination). If this field is present and contains at least one item, this rule allows traffic only if the traffic matches at least one item in the to list.
  to:[io_k8s_api_networking_v1_NetworkPolicyPeerResult]
}
# NetworkPolicyIngressRule describes a particular set of traffic that is allowed to the pods matched by a NetworkPolicySpec's podSelector. The traffic must match both ports and from.
input io_k8s_api_networking_v1_NetworkPolicyIngressRuleInput {
  # List of sources which should be able to access the pods selected for this rule. Items in this list are combined using a logical OR operation. If this field is empty or missing, this rule matches all sources (traffic not restricted by source). If this field is present and contains at least one item, this rule allows traffic only if the traffic matches at least one item in the from list.
  from:[io_k8s_api_networking_v1_NetworkPolicyPeerInput]
  # List of ports which should be made accessible on the pods selected for this rule. Each item in this list is combined using a logical OR. If this field is empty or missing, this rule matches all ports (traffic not restricted by port). If this field is present and contains at least one item, then this rule allows traffic only if the traffic matches at least one port in the list.
  ports:[io_k8s_api_networking_v1_NetworkPolicyPortInput]
}
# NetworkPolicyIngressRule describes a particular set of traffic that is allowed to the pods matched by a NetworkPolicySpec's podSelector. The traffic must match both ports and from.
type io_k8s_api_networking_v1_NetworkPolicyIngressRuleResult {
  # List of sources which should be able to access the pods selected for this rule. Items in this list are combined using a logical OR operation. If this field is empty or missing, this rule matches all sources (traffic not restricted by source). If this field is present and contains at least one item, this rule allows traffic only if the traffic matches at least one item in the from list.
  from:[io_k8s_api_networking_v1_NetworkPolicyPeerResult]
  # List of ports which should be made accessible on the pods selected for this rule. Each item in this list is combined using a logical OR. If this field is empty or missing, this rule matches all ports (traffic not restricted by port). If this field is present and contains at least one item, then this rule allows traffic only if the traffic matches at least one port in the list.
  ports:[io_k8s_api_networking_v1_NetworkPolicyPortResult]
}
# NetworkPolicy describes what network traffic is allowed for a set of Pods
input io_k8s_api_networking_v1_NetworkPolicyInput {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  # NetworkPolicySpec provides the specification of a NetworkPolicy
  spec:io_k8s_api_networking_v1_NetworkPolicySpecInput
}
# NetworkPolicyList is a list of NetworkPolicy objects.
type io_k8s_api_networking_v1_NetworkPolicyListResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Items is a list of schema objects.
  items:[io_k8s_api_networking_v1_NetworkPolicyResult]
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
# NetworkPolicyPeer describes a peer to allow traffic from. Only certain combinations of fields are allowed
input io_k8s_api_networking_v1_NetworkPolicyPeerInput {
  # IPBlock describes a particular CIDR (Ex. "192.168.1.1/24") that is allowed to the pods matched by a NetworkPolicySpec's podSelector. The except entry describes CIDRs that should not be included within this rule.
  ipBlock:io_k8s_api_networking_v1_IPBlockInput
  # A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
  namespaceSelector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorInput
  # A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
  podSelector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorInput
}
# NetworkPolicyPeer describes a peer to allow traffic from. Only certain combinations of fields are allowed
type io_k8s_api_networking_v1_NetworkPolicyPeerResult {
  # IPBlock describes a particular CIDR (Ex. "192.168.1.1/24") that is allowed to the pods matched by a NetworkPolicySpec's podSelector. The except entry describes CIDRs that should not be included within this rule.
  ipBlock:io_k8s_api_networking_v1_IPBlockResult
  # A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
  namespaceSelector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorResult
  # A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
  podSelector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorResult
}
# NetworkPolicyPort describes a port to allow traffic on
input io_k8s_api_networking_v1_NetworkPolicyPortInput {
  # The protocol (TCP, UDP, or SCTP) which traffic must match. If not specified, this field defaults to TCP.
  protocol:String
  # IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number.
  port:String
}
# NetworkPolicyPort describes a port to allow traffic on
type io_k8s_api_networking_v1_NetworkPolicyPortResult {
  # IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number.
  port:String
  # The protocol (TCP, UDP, or SCTP) which traffic must match. If not specified, this field defaults to TCP.
  protocol:String
}
# NetworkPolicy describes what network traffic is allowed for a set of Pods
type io_k8s_api_networking_v1_NetworkPolicyResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  # NetworkPolicySpec provides the specification of a NetworkPolicy
  spec:io_k8s_api_networking_v1_NetworkPolicySpecResult
}
# NetworkPolicySpec provides the specification of a NetworkPolicy
input io_k8s_api_networking_v1_NetworkPolicySpecInput {
  # List of egress rules to be applied to the selected pods. Outgoing traffic is allowed if there are no NetworkPolicies selecting the pod (and cluster policy otherwise allows the traffic), OR if the traffic matches at least one egress rule across all of the NetworkPolicy objects whose podSelector matches the pod. If this field is empty then this NetworkPolicy limits all outgoing traffic (and serves solely to ensure that the pods it selects are isolated by default). This field is beta-level in 1.8
  egress:[io_k8s_api_networking_v1_NetworkPolicyEgressRuleInput]
  # List of ingress rules to be applied to the selected pods. Traffic is allowed to a pod if there are no NetworkPolicies selecting the pod (and cluster policy otherwise allows the traffic), OR if the traffic source is the pod's local node, OR if the traffic matches at least one ingress rule across all of the NetworkPolicy objects whose podSelector matches the pod. If this field is empty then this NetworkPolicy does not allow any traffic (and serves solely to ensure that the pods it selects are isolated by default)
  ingress:[io_k8s_api_networking_v1_NetworkPolicyIngressRuleInput]
  # A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
  podSelector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorInput
  # List of rule types that the NetworkPolicy relates to. Valid options are "Ingress", "Egress", or "Ingress,Egress". If this field is not specified, it will default based on the existence of Ingress or Egress rules; policies that contain an Egress section are assumed to affect Egress, and all policies (whether or not they contain an Ingress section) are assumed to affect Ingress. If you want to write an egress-only policy, you must explicitly specify policyTypes [ "Egress" ]. Likewise, if you want to write a policy that specifies that no egress is allowed, you must specify a policyTypes value that include "Egress" (since such a policy would not include an Egress section and would otherwise default to just [ "Ingress" ]). This field is beta-level in 1.8
  policyTypes:[String]
}
# NetworkPolicySpec provides the specification of a NetworkPolicy
type io_k8s_api_networking_v1_NetworkPolicySpecResult {
  # List of egress rules to be applied to the selected pods. Outgoing traffic is allowed if there are no NetworkPolicies selecting the pod (and cluster policy otherwise allows the traffic), OR if the traffic matches at least one egress rule across all of the NetworkPolicy objects whose podSelector matches the pod. If this field is empty then this NetworkPolicy limits all outgoing traffic (and serves solely to ensure that the pods it selects are isolated by default). This field is beta-level in 1.8
  egress:[io_k8s_api_networking_v1_NetworkPolicyEgressRuleResult]
  # List of ingress rules to be applied to the selected pods. Traffic is allowed to a pod if there are no NetworkPolicies selecting the pod (and cluster policy otherwise allows the traffic), OR if the traffic source is the pod's local node, OR if the traffic matches at least one ingress rule across all of the NetworkPolicy objects whose podSelector matches the pod. If this field is empty then this NetworkPolicy does not allow any traffic (and serves solely to ensure that the pods it selects are isolated by default)
  ingress:[io_k8s_api_networking_v1_NetworkPolicyIngressRuleResult]
  # A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
  podSelector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorResult
  # List of rule types that the NetworkPolicy relates to. Valid options are "Ingress", "Egress", or "Ingress,Egress". If this field is not specified, it will default based on the existence of Ingress or Egress rules; policies that contain an Egress section are assumed to affect Egress, and all policies (whether or not they contain an Ingress section) are assumed to affect Ingress. If you want to write an egress-only policy, you must explicitly specify policyTypes [ "Egress" ]. Likewise, if you want to write a policy that specifies that no egress is allowed, you must specify a policyTypes value that include "Egress" (since such a policy would not include an Egress section and would otherwise default to just [ "Ingress" ]). This field is beta-level in 1.8
  policyTypes:[String]
}
# HTTPIngressPath associates a path regex with a backend. Incoming urls matching the path are forwarded to the backend.
input io_k8s_api_networking_v1beta1_HTTPIngressPathInput {
  # IngressBackend describes all endpoints for a given service and port.
  backend:io_k8s_api_networking_v1beta1_IngressBackendInput
  # Path is an extended POSIX regex as defined by IEEE Std 1003.1, (i.e this follows the egrep/unix syntax, not the perl syntax) matched against the path of an incoming request. Currently it can contain characters disallowed from the conventional "path" part of a URL as defined by RFC 3986. Paths must begin with a '/'. If unspecified, the path defaults to a catch all sending traffic to the backend.
  path:String
}
# HTTPIngressPath associates a path regex with a backend. Incoming urls matching the path are forwarded to the backend.
type io_k8s_api_networking_v1beta1_HTTPIngressPathResult {
  # IngressBackend describes all endpoints for a given service and port.
  backend:io_k8s_api_networking_v1beta1_IngressBackendResult
  # Path is an extended POSIX regex as defined by IEEE Std 1003.1, (i.e this follows the egrep/unix syntax, not the perl syntax) matched against the path of an incoming request. Currently it can contain characters disallowed from the conventional "path" part of a URL as defined by RFC 3986. Paths must begin with a '/'. If unspecified, the path defaults to a catch all sending traffic to the backend.
  path:String
}
# HTTPIngressRuleValue is a list of http selectors pointing to backends. In the example: http://<host>/<path>?<searchpart> -> backend where where parts of the url correspond to RFC 3986, this resource will be used to match against everything after the last '/' and before the first '?' or '#'.
input io_k8s_api_networking_v1beta1_HTTPIngressRuleValueInput {
  # A collection of paths that map requests to backends.
  paths:[io_k8s_api_networking_v1beta1_HTTPIngressPathInput]
}
# HTTPIngressRuleValue is a list of http selectors pointing to backends. In the example: http://<host>/<path>?<searchpart> -> backend where where parts of the url correspond to RFC 3986, this resource will be used to match against everything after the last '/' and before the first '?' or '#'.
type io_k8s_api_networking_v1beta1_HTTPIngressRuleValueResult {
  # A collection of paths that map requests to backends.
  paths:[io_k8s_api_networking_v1beta1_HTTPIngressPathResult]
}
# IngressBackend describes all endpoints for a given service and port.
input io_k8s_api_networking_v1beta1_IngressBackendInput {
  # Specifies the name of the referenced service.
  serviceName:String
  # IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number.
  servicePort:String
}
# IngressBackend describes all endpoints for a given service and port.
type io_k8s_api_networking_v1beta1_IngressBackendResult {
  # Specifies the name of the referenced service.
  serviceName:String
  # IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number.
  servicePort:String
}
# Ingress is a collection of rules that allow inbound connections to reach the endpoints defined by a backend. An Ingress can be configured to give services externally-reachable urls, load balance traffic, terminate SSL, offer name based virtual hosting etc.
input io_k8s_api_networking_v1beta1_IngressInput {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  # IngressSpec describes the Ingress the user wishes to exist.
  spec:io_k8s_api_networking_v1beta1_IngressSpecInput
  # IngressStatus describe the current state of the Ingress.
  status:io_k8s_api_networking_v1beta1_IngressStatusInput
}
# IngressList is a collection of Ingress.
type io_k8s_api_networking_v1beta1_IngressListResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Items is the list of Ingress.
  items:[io_k8s_api_networking_v1beta1_IngressResult]
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
# Ingress is a collection of rules that allow inbound connections to reach the endpoints defined by a backend. An Ingress can be configured to give services externally-reachable urls, load balance traffic, terminate SSL, offer name based virtual hosting etc.
type io_k8s_api_networking_v1beta1_IngressResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  # IngressSpec describes the Ingress the user wishes to exist.
  spec:io_k8s_api_networking_v1beta1_IngressSpecResult
  # IngressStatus describe the current state of the Ingress.
  status:io_k8s_api_networking_v1beta1_IngressStatusResult
}
# IngressRule represents the rules mapping the paths under a specified host to the related backend services. Incoming requests are first evaluated for a host match, then routed to the backend associated with the matching IngressRuleValue.
input io_k8s_api_networking_v1beta1_IngressRuleInput {
  # Host is the fully qualified domain name of a network host, as defined by RFC 3986. Note the following deviations from the "host" part of the URI as defined in the RFC: 1. IPs are not allowed. Currently an IngressRuleValue can only apply to the
  # 	  IP in the Spec of the parent Ingress.
  # 2. The `:` delimiter is not respected because ports are not allowed.
  # 	  Currently the port of an Ingress is implicitly :80 for http and
  # 	  :443 for https.
  # Both these may change in the future. Incoming requests are matched against the host before the IngressRuleValue. If the host is unspecified, the Ingress routes all traffic based on the specified IngressRuleValue.
  host:String
  # HTTPIngressRuleValue is a list of http selectors pointing to backends. In the example: http://<host>/<path>?<searchpart> -> backend where where parts of the url correspond to RFC 3986, this resource will be used to match against everything after the last '/' and before the first '?' or '#'.
  http:io_k8s_api_networking_v1beta1_HTTPIngressRuleValueInput
}
# IngressRule represents the rules mapping the paths under a specified host to the related backend services. Incoming requests are first evaluated for a host match, then routed to the backend associated with the matching IngressRuleValue.
type io_k8s_api_networking_v1beta1_IngressRuleResult {
  # Host is the fully qualified domain name of a network host, as defined by RFC 3986. Note the following deviations from the "host" part of the URI as defined in the RFC: 1. IPs are not allowed. Currently an IngressRuleValue can only apply to the
  # 	  IP in the Spec of the parent Ingress.
  # 2. The `:` delimiter is not respected because ports are not allowed.
  # 	  Currently the port of an Ingress is implicitly :80 for http and
  # 	  :443 for https.
  # Both these may change in the future. Incoming requests are matched against the host before the IngressRuleValue. If the host is unspecified, the Ingress routes all traffic based on the specified IngressRuleValue.
  host:String
  # HTTPIngressRuleValue is a list of http selectors pointing to backends. In the example: http://<host>/<path>?<searchpart> -> backend where where parts of the url correspond to RFC 3986, this resource will be used to match against everything after the last '/' and before the first '?' or '#'.
  http:io_k8s_api_networking_v1beta1_HTTPIngressRuleValueResult
}
# IngressSpec describes the Ingress the user wishes to exist.
input io_k8s_api_networking_v1beta1_IngressSpecInput {
  # IngressBackend describes all endpoints for a given service and port.
  backend:io_k8s_api_networking_v1beta1_IngressBackendInput
  # A list of host rules used to configure the Ingress. If unspecified, or no rule matches, all traffic is sent to the default backend.
  rules:[io_k8s_api_networking_v1beta1_IngressRuleInput]
  # TLS configuration. Currently the Ingress only supports a single TLS port, 443. If multiple members of this list specify different hosts, they will be multiplexed on the same port according to the hostname specified through the SNI TLS extension, if the ingress controller fulfilling the ingress supports SNI.
  tls:[io_k8s_api_networking_v1beta1_IngressTLSInput]
}
# IngressSpec describes the Ingress the user wishes to exist.
type io_k8s_api_networking_v1beta1_IngressSpecResult {
  # IngressBackend describes all endpoints for a given service and port.
  backend:io_k8s_api_networking_v1beta1_IngressBackendResult
  # A list of host rules used to configure the Ingress. If unspecified, or no rule matches, all traffic is sent to the default backend.
  rules:[io_k8s_api_networking_v1beta1_IngressRuleResult]
  # TLS configuration. Currently the Ingress only supports a single TLS port, 443. If multiple members of this list specify different hosts, they will be multiplexed on the same port according to the hostname specified through the SNI TLS extension, if the ingress controller fulfilling the ingress supports SNI.
  tls:[io_k8s_api_networking_v1beta1_IngressTLSResult]
}
# IngressStatus describe the current state of the Ingress.
input io_k8s_api_networking_v1beta1_IngressStatusInput {
  # LoadBalancerStatus represents the status of a load-balancer.
  loadBalancer:io_k8s_api_core_v1_LoadBalancerStatusInput
}
# IngressStatus describe the current state of the Ingress.
type io_k8s_api_networking_v1beta1_IngressStatusResult {
  # LoadBalancerStatus represents the status of a load-balancer.
  loadBalancer:io_k8s_api_core_v1_LoadBalancerStatusResult
}
# IngressTLS describes the transport layer security associated with an Ingress.
input io_k8s_api_networking_v1beta1_IngressTLSInput {
  # SecretName is the name of the secret used to terminate SSL traffic on 443. Field is left optional to allow SSL routing based on SNI hostname alone. If the SNI host in a listener conflicts with the "Host" header field used by an IngressRule, the SNI host is used for termination and value of the Host header is used for routing.
  secretName:String
  # Hosts are a list of hosts included in the TLS certificate. The values in this list must match the name/s used in the tlsSecret. Defaults to the wildcard host setting for the loadbalancer controller fulfilling this Ingress, if left unspecified.
  hosts:[String]
}
# IngressTLS describes the transport layer security associated with an Ingress.
type io_k8s_api_networking_v1beta1_IngressTLSResult {
  # Hosts are a list of hosts included in the TLS certificate. The values in this list must match the name/s used in the tlsSecret. Defaults to the wildcard host setting for the loadbalancer controller fulfilling this Ingress, if left unspecified.
  hosts:[String]
  # SecretName is the name of the secret used to terminate SSL traffic on 443. Field is left optional to allow SSL routing based on SNI hostname alone. If the SNI host in a listener conflicts with the "Host" header field used by an IngressRule, the SNI host is used for termination and value of the Host header is used for routing.
  secretName:String
}
# RuntimeClass defines a class of container runtime supported in the cluster. The RuntimeClass is used to determine which container runtime is used to run all containers in a pod. RuntimeClasses are (currently) manually defined by a user or cluster provisioner, and referenced in the PodSpec. The Kubelet is responsible for resolving the RuntimeClassName reference before running the pod.  For more details, see https://git.k8s.io/enhancements/keps/sig-node/runtime-class.md
input io_k8s_api_node_v1beta1_RuntimeClassInput {
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  # Scheduling specifies the scheduling constraints for nodes supporting a RuntimeClass.
  scheduling:io_k8s_api_node_v1beta1_SchedulingInput
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Handler specifies the underlying runtime and configuration that the CRI implementation will use to handle pods of this class. The possible values are specific to the node & CRI configuration.  It is assumed that all handlers are available on every node, and handlers of the same name are equivalent on every node. For example, a handler called "runc" might specify that the runc OCI runtime (using native Linux containers) will be used to run the containers in a pod. The Handler must conform to the DNS Label (RFC 1123) requirements, and is immutable.
  handler:String
}
# RuntimeClassList is a list of RuntimeClass objects.
type io_k8s_api_node_v1beta1_RuntimeClassListResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Items is a list of schema objects.
  items:[io_k8s_api_node_v1beta1_RuntimeClassResult]
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
# RuntimeClass defines a class of container runtime supported in the cluster. The RuntimeClass is used to determine which container runtime is used to run all containers in a pod. RuntimeClasses are (currently) manually defined by a user or cluster provisioner, and referenced in the PodSpec. The Kubelet is responsible for resolving the RuntimeClassName reference before running the pod.  For more details, see https://git.k8s.io/enhancements/keps/sig-node/runtime-class.md
type io_k8s_api_node_v1beta1_RuntimeClassResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Handler specifies the underlying runtime and configuration that the CRI implementation will use to handle pods of this class. The possible values are specific to the node & CRI configuration.  It is assumed that all handlers are available on every node, and handlers of the same name are equivalent on every node. For example, a handler called "runc" might specify that the runc OCI runtime (using native Linux containers) will be used to run the containers in a pod. The Handler must conform to the DNS Label (RFC 1123) requirements, and is immutable.
  handler:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  # Scheduling specifies the scheduling constraints for nodes supporting a RuntimeClass.
  scheduling:io_k8s_api_node_v1beta1_SchedulingResult
}
# Scheduling specifies the scheduling constraints for nodes supporting a RuntimeClass.
input io_k8s_api_node_v1beta1_SchedulingInput {
  # tolerations are appended (excluding duplicates) to pods running with this RuntimeClass during admission, effectively unioning the set of nodes tolerated by the pod and the RuntimeClass.
  tolerations:[io_k8s_api_core_v1_TolerationInput]
}
# Scheduling specifies the scheduling constraints for nodes supporting a RuntimeClass.
type io_k8s_api_node_v1beta1_SchedulingResult {
  # tolerations are appended (excluding duplicates) to pods running with this RuntimeClass during admission, effectively unioning the set of nodes tolerated by the pod and the RuntimeClass.
  tolerations:[io_k8s_api_core_v1_TolerationResult]
}
# AllowedCSIDriver represents a single inline CSI Driver that is allowed to be used.
input io_k8s_api_policy_v1beta1_AllowedCSIDriverInput {
  # Name is the registered name of the CSI driver
  name:String
}
# AllowedCSIDriver represents a single inline CSI Driver that is allowed to be used.
type io_k8s_api_policy_v1beta1_AllowedCSIDriverResult {
  # Name is the registered name of the CSI driver
  name:String
}
# AllowedFlexVolume represents a single Flexvolume that is allowed to be used.
input io_k8s_api_policy_v1beta1_AllowedFlexVolumeInput {
  # driver is the name of the Flexvolume driver.
  driver:String
}
# AllowedFlexVolume represents a single Flexvolume that is allowed to be used.
type io_k8s_api_policy_v1beta1_AllowedFlexVolumeResult {
  # driver is the name of the Flexvolume driver.
  driver:String
}
# AllowedHostPath defines the host volume conditions that will be enabled by a policy for pods to use. It requires the path prefix to be defined.
input io_k8s_api_policy_v1beta1_AllowedHostPathInput {
  # pathPrefix is the path prefix that the host volume must match. It does not support `*`. Trailing slashes are trimmed when validating the path prefix with a host path.
  # Examples: `/foo` would allow `/foo`, `/foo/` and `/foo/bar` `/foo` would not allow `/food` or `/etc/foo`
  pathPrefix:String
  # when set to true, will allow host volumes matching the pathPrefix only if all volume mounts are readOnly.
  readOnly:Boolean
}
# AllowedHostPath defines the host volume conditions that will be enabled by a policy for pods to use. It requires the path prefix to be defined.
type io_k8s_api_policy_v1beta1_AllowedHostPathResult {
  # pathPrefix is the path prefix that the host volume must match. It does not support `*`. Trailing slashes are trimmed when validating the path prefix with a host path.
  # Examples: `/foo` would allow `/foo`, `/foo/` and `/foo/bar` `/foo` would not allow `/food` or `/etc/foo`
  pathPrefix:String
  # when set to true, will allow host volumes matching the pathPrefix only if all volume mounts are readOnly.
  readOnly:Boolean
}
# Eviction evicts a pod from its node subject to certain policies and safety constraints. This is a subresource of Pod.  A request to cause such an eviction is created by POSTing to .../pods/<pod name>/evictions.
input io_k8s_api_policy_v1beta1_EvictionInput {
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # DeleteOptions may be provided when deleting an API object.
  deleteOptions:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
}
# Eviction evicts a pod from its node subject to certain policies and safety constraints. This is a subresource of Pod.  A request to cause such an eviction is created by POSTing to .../pods/<pod name>/evictions.
type io_k8s_api_policy_v1beta1_EvictionResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # DeleteOptions may be provided when deleting an API object.
  deleteOptions:io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsResult
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
}
# FSGroupStrategyOptions defines the strategy type and options used to create the strategy.
input io_k8s_api_policy_v1beta1_FSGroupStrategyOptionsInput {
  # ranges are the allowed ranges of fs groups.  If you would like to force a single fs group then supply a single range with the same start and end. Required for MustRunAs.
  ranges:[io_k8s_api_policy_v1beta1_IDRangeInput]
  # rule is the strategy that will dictate what FSGroup is used in the SecurityContext.
  rule:String
}
# FSGroupStrategyOptions defines the strategy type and options used to create the strategy.
type io_k8s_api_policy_v1beta1_FSGroupStrategyOptionsResult {
  # ranges are the allowed ranges of fs groups.  If you would like to force a single fs group then supply a single range with the same start and end. Required for MustRunAs.
  ranges:[io_k8s_api_policy_v1beta1_IDRangeResult]
  # rule is the strategy that will dictate what FSGroup is used in the SecurityContext.
  rule:String
}
# HostPortRange defines a range of host ports that will be enabled by a policy for pods to use.  It requires both the start and end to be defined.
input io_k8s_api_policy_v1beta1_HostPortRangeInput {
  # max is the end of the range, inclusive.
  max:Int
  # min is the start of the range, inclusive.
  min:Int
}
# HostPortRange defines a range of host ports that will be enabled by a policy for pods to use.  It requires both the start and end to be defined.
type io_k8s_api_policy_v1beta1_HostPortRangeResult {
  # max is the end of the range, inclusive.
  max:Int
  # min is the start of the range, inclusive.
  min:Int
}
# IDRange provides a min/max of an allowed range of IDs.
input io_k8s_api_policy_v1beta1_IDRangeInput {
  # min is the start of the range, inclusive.
  min:Int
  # max is the end of the range, inclusive.
  max:Int
}
# IDRange provides a min/max of an allowed range of IDs.
type io_k8s_api_policy_v1beta1_IDRangeResult {
  # max is the end of the range, inclusive.
  max:Int
  # min is the start of the range, inclusive.
  min:Int
}
# PodDisruptionBudget is an object to define the max disruption that can be caused to a collection of pods
input io_k8s_api_policy_v1beta1_PodDisruptionBudgetInput {
  # PodDisruptionBudgetSpec is a description of a PodDisruptionBudget.
  spec:io_k8s_api_policy_v1beta1_PodDisruptionBudgetSpecInput
  # PodDisruptionBudgetStatus represents information about the status of a PodDisruptionBudget. Status may trail the actual state of a system.
  status:io_k8s_api_policy_v1beta1_PodDisruptionBudgetStatusInput
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
}
# PodDisruptionBudgetList is a collection of PodDisruptionBudgets.
type io_k8s_api_policy_v1beta1_PodDisruptionBudgetListResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  items:[io_k8s_api_policy_v1beta1_PodDisruptionBudgetResult]
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
# PodDisruptionBudget is an object to define the max disruption that can be caused to a collection of pods
type io_k8s_api_policy_v1beta1_PodDisruptionBudgetResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  # PodDisruptionBudgetSpec is a description of a PodDisruptionBudget.
  spec:io_k8s_api_policy_v1beta1_PodDisruptionBudgetSpecResult
  # PodDisruptionBudgetStatus represents information about the status of a PodDisruptionBudget. Status may trail the actual state of a system.
  status:io_k8s_api_policy_v1beta1_PodDisruptionBudgetStatusResult
}
# PodDisruptionBudgetSpec is a description of a PodDisruptionBudget.
input io_k8s_api_policy_v1beta1_PodDisruptionBudgetSpecInput {
  # IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number.
  maxUnavailable:String
  # IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number.
  minAvailable:String
  # A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
  selector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorInput
}
# PodDisruptionBudgetSpec is a description of a PodDisruptionBudget.
type io_k8s_api_policy_v1beta1_PodDisruptionBudgetSpecResult {
  # IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number.
  maxUnavailable:String
  # IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number.
  minAvailable:String
  # A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
  selector:io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorResult
}
# PodDisruptionBudgetStatus represents information about the status of a PodDisruptionBudget. Status may trail the actual state of a system.
input io_k8s_api_policy_v1beta1_PodDisruptionBudgetStatusInput {
  # minimum desired number of healthy pods
  desiredHealthy:Int
  # Number of pod disruptions that are currently allowed.
  disruptionsAllowed:Int
  # total number of pods counted by this disruption budget
  expectedPods:Int
  # Most recent generation observed when updating this PDB status. PodDisruptionsAllowed and other status information is valid only if observedGeneration equals to PDB's object generation.
  observedGeneration:Int
  # current number of healthy pods
  currentHealthy:Int
}
# PodDisruptionBudgetStatus represents information about the status of a PodDisruptionBudget. Status may trail the actual state of a system.
type io_k8s_api_policy_v1beta1_PodDisruptionBudgetStatusResult {
  # current number of healthy pods
  currentHealthy:Int
  # minimum desired number of healthy pods
  desiredHealthy:Int
  # Number of pod disruptions that are currently allowed.
  disruptionsAllowed:Int
  # total number of pods counted by this disruption budget
  expectedPods:Int
  # Most recent generation observed when updating this PDB status. PodDisruptionsAllowed and other status information is valid only if observedGeneration equals to PDB's object generation.
  observedGeneration:Int
}
# PodSecurityPolicy governs the ability to make requests that affect the Security Context that will be applied to a pod and container.
input io_k8s_api_policy_v1beta1_PodSecurityPolicyInput {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  # PodSecurityPolicySpec defines the policy enforced.
  spec:io_k8s_api_policy_v1beta1_PodSecurityPolicySpecInput
}
# PodSecurityPolicyList is a list of PodSecurityPolicy objects.
type io_k8s_api_policy_v1beta1_PodSecurityPolicyListResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # items is a list of schema objects.
  items:[io_k8s_api_policy_v1beta1_PodSecurityPolicyResult]
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
# PodSecurityPolicy governs the ability to make requests that affect the Security Context that will be applied to a pod and container.
type io_k8s_api_policy_v1beta1_PodSecurityPolicyResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  # PodSecurityPolicySpec defines the policy enforced.
  spec:io_k8s_api_policy_v1beta1_PodSecurityPolicySpecResult
}
# PodSecurityPolicySpec defines the policy enforced.
input io_k8s_api_policy_v1beta1_PodSecurityPolicySpecInput {
  # allowedFlexVolumes is a whitelist of allowed Flexvolumes.  Empty or nil indicates that all Flexvolumes may be used.  This parameter is effective only when the usage of the Flexvolumes is allowed in the "volumes" field.
  allowedFlexVolumes:[io_k8s_api_policy_v1beta1_AllowedFlexVolumeInput]
  # privileged determines if a pod can request to be run as privileged.
  privileged:Boolean
  # RuntimeClassStrategyOptions define the strategy that will dictate the allowable RuntimeClasses for a pod.
  runtimeClass:io_k8s_api_policy_v1beta1_RuntimeClassStrategyOptionsInput
  # allowPrivilegeEscalation determines if a pod can request to allow privilege escalation. If unspecified, defaults to true.
  allowPrivilegeEscalation:Boolean
  # hostIPC determines if the policy allows the use of HostIPC in the pod spec.
  hostIPC:Boolean
  # hostNetwork determines if the policy allows the use of HostNetwork in the pod spec.
  hostNetwork:Boolean
  # hostPID determines if the policy allows the use of HostPID in the pod spec.
  hostPID:Boolean
  # SELinuxStrategyOptions defines the strategy type and any options used to create the strategy.
  seLinux:io_k8s_api_policy_v1beta1_SELinuxStrategyOptionsInput
  # readOnlyRootFilesystem when set to true will force containers to run with a read only root file system.  If the container specifically requests to run with a non-read only root file system the PSP should deny the pod. If set to false the container may run with a read only root file system if it wishes but it will not be forced to.
  readOnlyRootFilesystem:Boolean
  # requiredDropCapabilities are the capabilities that will be dropped from the container.  These are required to be dropped and cannot be added.
  requiredDropCapabilities:[String]
  # SupplementalGroupsStrategyOptions defines the strategy type and options used to create the strategy.
  supplementalGroups:io_k8s_api_policy_v1beta1_SupplementalGroupsStrategyOptionsInput
  # AllowedCSIDrivers is a whitelist of inline CSI drivers that must be explicitly set to be embedded within a pod spec. An empty value indicates that any CSI driver can be used for inline ephemeral volumes. This is an alpha field, and is only honored if the API server enables the CSIInlineVolume feature gate.
  allowedCSIDrivers:[io_k8s_api_policy_v1beta1_AllowedCSIDriverInput]
  # AllowedProcMountTypes is a whitelist of allowed ProcMountTypes. Empty or nil indicates that only the DefaultProcMountType may be used. This requires the ProcMountType feature flag to be enabled.
  allowedProcMountTypes:[String]
  # allowedUnsafeSysctls is a list of explicitly allowed unsafe sysctls, defaults to none. Each entry is either a plain sysctl name or ends in "*" in which case it is considered as a prefix of allowed sysctls. Single * means all unsafe sysctls are allowed. Kubelet has to whitelist all allowed unsafe sysctls explicitly to avoid rejection.
  # Examples: e.g. "foo/*" allows "foo/bar", "foo/baz", etc. e.g. "foo.*" allows "foo.bar", "foo.baz", etc.
  allowedUnsafeSysctls:[String]
  # forbiddenSysctls is a list of explicitly forbidden sysctls, defaults to none. Each entry is either a plain sysctl name or ends in "*" in which case it is considered as a prefix of forbidden sysctls. Single * means all sysctls are forbidden.
  # Examples: e.g. "foo/*" forbids "foo/bar", "foo/baz", etc. e.g. "foo.*" forbids "foo.bar", "foo.baz", etc.
  forbiddenSysctls:[String]
  # hostPorts determines which host port ranges are allowed to be exposed.
  hostPorts:[io_k8s_api_policy_v1beta1_HostPortRangeInput]
  # RunAsGroupStrategyOptions defines the strategy type and any options used to create the strategy.
  runAsGroup:io_k8s_api_policy_v1beta1_RunAsGroupStrategyOptionsInput
  # RunAsUserStrategyOptions defines the strategy type and any options used to create the strategy.
  runAsUser:io_k8s_api_policy_v1beta1_RunAsUserStrategyOptionsInput
  # volumes is a white list of allowed volume plugins. Empty indicates that no volumes may be used. To allow all volumes you may use '*'.
  volumes:[String]
  # allowedCapabilities is a list of capabilities that can be requested to add to the container. Capabilities in this field may be added at the pod author's discretion. You must not list a capability in both allowedCapabilities and requiredDropCapabilities.
  allowedCapabilities:[String]
  # allowedHostPaths is a white list of allowed host paths. Empty indicates that all host paths may be used.
  allowedHostPaths:[io_k8s_api_policy_v1beta1_AllowedHostPathInput]
  # defaultAddCapabilities is the default set of capabilities that will be added to the container unless the pod spec specifically drops the capability.  You may not list a capability in both defaultAddCapabilities and requiredDropCapabilities. Capabilities added here are implicitly allowed, and need not be included in the allowedCapabilities list.
  defaultAddCapabilities:[String]
  # defaultAllowPrivilegeEscalation controls the default setting for whether a process can gain more privileges than its parent process.
  defaultAllowPrivilegeEscalation:Boolean
  # FSGroupStrategyOptions defines the strategy type and options used to create the strategy.
  fsGroup:io_k8s_api_policy_v1beta1_FSGroupStrategyOptionsInput
}
# PodSecurityPolicySpec defines the policy enforced.
type io_k8s_api_policy_v1beta1_PodSecurityPolicySpecResult {
  # allowPrivilegeEscalation determines if a pod can request to allow privilege escalation. If unspecified, defaults to true.
  allowPrivilegeEscalation:Boolean
  # AllowedCSIDrivers is a whitelist of inline CSI drivers that must be explicitly set to be embedded within a pod spec. An empty value indicates that any CSI driver can be used for inline ephemeral volumes. This is an alpha field, and is only honored if the API server enables the CSIInlineVolume feature gate.
  allowedCSIDrivers:[io_k8s_api_policy_v1beta1_AllowedCSIDriverResult]
  # allowedCapabilities is a list of capabilities that can be requested to add to the container. Capabilities in this field may be added at the pod author's discretion. You must not list a capability in both allowedCapabilities and requiredDropCapabilities.
  allowedCapabilities:[String]
  # allowedFlexVolumes is a whitelist of allowed Flexvolumes.  Empty or nil indicates that all Flexvolumes may be used.  This parameter is effective only when the usage of the Flexvolumes is allowed in the "volumes" field.
  allowedFlexVolumes:[io_k8s_api_policy_v1beta1_AllowedFlexVolumeResult]
  # allowedHostPaths is a white list of allowed host paths. Empty indicates that all host paths may be used.
  allowedHostPaths:[io_k8s_api_policy_v1beta1_AllowedHostPathResult]
  # AllowedProcMountTypes is a whitelist of allowed ProcMountTypes. Empty or nil indicates that only the DefaultProcMountType may be used. This requires the ProcMountType feature flag to be enabled.
  allowedProcMountTypes:[String]
  # allowedUnsafeSysctls is a list of explicitly allowed unsafe sysctls, defaults to none. Each entry is either a plain sysctl name or ends in "*" in which case it is considered as a prefix of allowed sysctls. Single * means all unsafe sysctls are allowed. Kubelet has to whitelist all allowed unsafe sysctls explicitly to avoid rejection.
  # Examples: e.g. "foo/*" allows "foo/bar", "foo/baz", etc. e.g. "foo.*" allows "foo.bar", "foo.baz", etc.
  allowedUnsafeSysctls:[String]
  # defaultAddCapabilities is the default set of capabilities that will be added to the container unless the pod spec specifically drops the capability.  You may not list a capability in both defaultAddCapabilities and requiredDropCapabilities. Capabilities added here are implicitly allowed, and need not be included in the allowedCapabilities list.
  defaultAddCapabilities:[String]
  # defaultAllowPrivilegeEscalation controls the default setting for whether a process can gain more privileges than its parent process.
  defaultAllowPrivilegeEscalation:Boolean
  # forbiddenSysctls is a list of explicitly forbidden sysctls, defaults to none. Each entry is either a plain sysctl name or ends in "*" in which case it is considered as a prefix of forbidden sysctls. Single * means all sysctls are forbidden.
  # Examples: e.g. "foo/*" forbids "foo/bar", "foo/baz", etc. e.g. "foo.*" forbids "foo.bar", "foo.baz", etc.
  forbiddenSysctls:[String]
  # FSGroupStrategyOptions defines the strategy type and options used to create the strategy.
  fsGroup:io_k8s_api_policy_v1beta1_FSGroupStrategyOptionsResult
  # hostIPC determines if the policy allows the use of HostIPC in the pod spec.
  hostIPC:Boolean
  # hostNetwork determines if the policy allows the use of HostNetwork in the pod spec.
  hostNetwork:Boolean
  # hostPID determines if the policy allows the use of HostPID in the pod spec.
  hostPID:Boolean
  # hostPorts determines which host port ranges are allowed to be exposed.
  hostPorts:[io_k8s_api_policy_v1beta1_HostPortRangeResult]
  # privileged determines if a pod can request to be run as privileged.
  privileged:Boolean
  # readOnlyRootFilesystem when set to true will force containers to run with a read only root file system.  If the container specifically requests to run with a non-read only root file system the PSP should deny the pod. If set to false the container may run with a read only root file system if it wishes but it will not be forced to.
  readOnlyRootFilesystem:Boolean
  # requiredDropCapabilities are the capabilities that will be dropped from the container.  These are required to be dropped and cannot be added.
  requiredDropCapabilities:[String]
  # RunAsGroupStrategyOptions defines the strategy type and any options used to create the strategy.
  runAsGroup:io_k8s_api_policy_v1beta1_RunAsGroupStrategyOptionsResult
  # RunAsUserStrategyOptions defines the strategy type and any options used to create the strategy.
  runAsUser:io_k8s_api_policy_v1beta1_RunAsUserStrategyOptionsResult
  # RuntimeClassStrategyOptions define the strategy that will dictate the allowable RuntimeClasses for a pod.
  runtimeClass:io_k8s_api_policy_v1beta1_RuntimeClassStrategyOptionsResult
  # SELinuxStrategyOptions defines the strategy type and any options used to create the strategy.
  seLinux:io_k8s_api_policy_v1beta1_SELinuxStrategyOptionsResult
  # SupplementalGroupsStrategyOptions defines the strategy type and options used to create the strategy.
  supplementalGroups:io_k8s_api_policy_v1beta1_SupplementalGroupsStrategyOptionsResult
  # volumes is a white list of allowed volume plugins. Empty indicates that no volumes may be used. To allow all volumes you may use '*'.
  volumes:[String]
}
# RunAsGroupStrategyOptions defines the strategy type and any options used to create the strategy.
input io_k8s_api_policy_v1beta1_RunAsGroupStrategyOptionsInput {
  # ranges are the allowed ranges of gids that may be used. If you would like to force a single gid then supply a single range with the same start and end. Required for MustRunAs.
  ranges:[io_k8s_api_policy_v1beta1_IDRangeInput]
  # rule is the strategy that will dictate the allowable RunAsGroup values that may be set.
  rule:String
}
# RunAsGroupStrategyOptions defines the strategy type and any options used to create the strategy.
type io_k8s_api_policy_v1beta1_RunAsGroupStrategyOptionsResult {
  # ranges are the allowed ranges of gids that may be used. If you would like to force a single gid then supply a single range with the same start and end. Required for MustRunAs.
  ranges:[io_k8s_api_policy_v1beta1_IDRangeResult]
  # rule is the strategy that will dictate the allowable RunAsGroup values that may be set.
  rule:String
}
# RunAsUserStrategyOptions defines the strategy type and any options used to create the strategy.
input io_k8s_api_policy_v1beta1_RunAsUserStrategyOptionsInput {
  # rule is the strategy that will dictate the allowable RunAsUser values that may be set.
  rule:String
  # ranges are the allowed ranges of uids that may be used. If you would like to force a single uid then supply a single range with the same start and end. Required for MustRunAs.
  ranges:[io_k8s_api_policy_v1beta1_IDRangeInput]
}
# RunAsUserStrategyOptions defines the strategy type and any options used to create the strategy.
type io_k8s_api_policy_v1beta1_RunAsUserStrategyOptionsResult {
  # ranges are the allowed ranges of uids that may be used. If you would like to force a single uid then supply a single range with the same start and end. Required for MustRunAs.
  ranges:[io_k8s_api_policy_v1beta1_IDRangeResult]
  # rule is the strategy that will dictate the allowable RunAsUser values that may be set.
  rule:String
}
# RuntimeClassStrategyOptions define the strategy that will dictate the allowable RuntimeClasses for a pod.
input io_k8s_api_policy_v1beta1_RuntimeClassStrategyOptionsInput {
  # allowedRuntimeClassNames is a whitelist of RuntimeClass names that may be specified on a pod. A value of "*" means that any RuntimeClass name is allowed, and must be the only item in the list. An empty list requires the RuntimeClassName field to be unset.
  allowedRuntimeClassNames:[String]
  # defaultRuntimeClassName is the default RuntimeClassName to set on the pod. The default MUST be allowed by the allowedRuntimeClassNames list. A value of nil does not mutate the Pod.
  defaultRuntimeClassName:String
}
# RuntimeClassStrategyOptions define the strategy that will dictate the allowable RuntimeClasses for a pod.
type io_k8s_api_policy_v1beta1_RuntimeClassStrategyOptionsResult {
  # allowedRuntimeClassNames is a whitelist of RuntimeClass names that may be specified on a pod. A value of "*" means that any RuntimeClass name is allowed, and must be the only item in the list. An empty list requires the RuntimeClassName field to be unset.
  allowedRuntimeClassNames:[String]
  # defaultRuntimeClassName is the default RuntimeClassName to set on the pod. The default MUST be allowed by the allowedRuntimeClassNames list. A value of nil does not mutate the Pod.
  defaultRuntimeClassName:String
}
# SELinuxStrategyOptions defines the strategy type and any options used to create the strategy.
input io_k8s_api_policy_v1beta1_SELinuxStrategyOptionsInput {
  # rule is the strategy that will dictate the allowable labels that may be set.
  rule:String
  # SELinuxOptions are the labels to be applied to the container
  seLinuxOptions:io_k8s_api_core_v1_SELinuxOptionsInput
}
# SELinuxStrategyOptions defines the strategy type and any options used to create the strategy.
type io_k8s_api_policy_v1beta1_SELinuxStrategyOptionsResult {
  # rule is the strategy that will dictate the allowable labels that may be set.
  rule:String
  # SELinuxOptions are the labels to be applied to the container
  seLinuxOptions:io_k8s_api_core_v1_SELinuxOptionsResult
}
# SupplementalGroupsStrategyOptions defines the strategy type and options used to create the strategy.
input io_k8s_api_policy_v1beta1_SupplementalGroupsStrategyOptionsInput {
  # ranges are the allowed ranges of supplemental groups.  If you would like to force a single supplemental group then supply a single range with the same start and end. Required for MustRunAs.
  ranges:[io_k8s_api_policy_v1beta1_IDRangeInput]
  # rule is the strategy that will dictate what supplemental groups is used in the SecurityContext.
  rule:String
}
# SupplementalGroupsStrategyOptions defines the strategy type and options used to create the strategy.
type io_k8s_api_policy_v1beta1_SupplementalGroupsStrategyOptionsResult {
  # ranges are the allowed ranges of supplemental groups.  If you would like to force a single supplemental group then supply a single range with the same start and end. Required for MustRunAs.
  ranges:[io_k8s_api_policy_v1beta1_IDRangeResult]
  # rule is the strategy that will dictate what supplemental groups is used in the SecurityContext.
  rule:String
}
# AggregationRule describes how to locate ClusterRoles to aggregate into the ClusterRole
input io_k8s_api_rbac_v1_AggregationRuleInput {
  # ClusterRoleSelectors holds a list of selectors which will be used to find ClusterRoles and create the rules. If any of the selectors match, then the ClusterRole's permissions will be added
  clusterRoleSelectors:[io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorInput]
}
# AggregationRule describes how to locate ClusterRoles to aggregate into the ClusterRole
type io_k8s_api_rbac_v1_AggregationRuleResult {
  # ClusterRoleSelectors holds a list of selectors which will be used to find ClusterRoles and create the rules. If any of the selectors match, then the ClusterRole's permissions will be added
  clusterRoleSelectors:[io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorResult]
}
# ClusterRoleBinding references a ClusterRole, but not contain it.  It can reference a ClusterRole in the global namespace, and adds who information via Subject.
input io_k8s_api_rbac_v1_ClusterRoleBindingInput {
  # Subjects holds references to the objects the role applies to.
  subjects:[io_k8s_api_rbac_v1_SubjectInput]
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  # RoleRef contains information that points to the role being used
  roleRef:io_k8s_api_rbac_v1_RoleRefInput
}
# ClusterRoleBindingList is a collection of ClusterRoleBindings
type io_k8s_api_rbac_v1_ClusterRoleBindingListResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Items is a list of ClusterRoleBindings
  items:[io_k8s_api_rbac_v1_ClusterRoleBindingResult]
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
# ClusterRoleBinding references a ClusterRole, but not contain it.  It can reference a ClusterRole in the global namespace, and adds who information via Subject.
type io_k8s_api_rbac_v1_ClusterRoleBindingResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  # RoleRef contains information that points to the role being used
  roleRef:io_k8s_api_rbac_v1_RoleRefResult
  # Subjects holds references to the objects the role applies to.
  subjects:[io_k8s_api_rbac_v1_SubjectResult]
}
# ClusterRole is a cluster level, logical grouping of PolicyRules that can be referenced as a unit by a RoleBinding or ClusterRoleBinding.
input io_k8s_api_rbac_v1_ClusterRoleInput {
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  # Rules holds all the PolicyRules for this ClusterRole
  rules:[io_k8s_api_rbac_v1_PolicyRuleInput]
  # AggregationRule describes how to locate ClusterRoles to aggregate into the ClusterRole
  aggregationRule:io_k8s_api_rbac_v1_AggregationRuleInput
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
}
# ClusterRoleList is a collection of ClusterRoles
type io_k8s_api_rbac_v1_ClusterRoleListResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Items is a list of ClusterRoles
  items:[io_k8s_api_rbac_v1_ClusterRoleResult]
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
# ClusterRole is a cluster level, logical grouping of PolicyRules that can be referenced as a unit by a RoleBinding or ClusterRoleBinding.
type io_k8s_api_rbac_v1_ClusterRoleResult {
  # AggregationRule describes how to locate ClusterRoles to aggregate into the ClusterRole
  aggregationRule:io_k8s_api_rbac_v1_AggregationRuleResult
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  # Rules holds all the PolicyRules for this ClusterRole
  rules:[io_k8s_api_rbac_v1_PolicyRuleResult]
}
# PolicyRule holds information that describes a policy rule, but does not contain information about who the rule applies to or which namespace the rule applies to.
input io_k8s_api_rbac_v1_PolicyRuleInput {
  # NonResourceURLs is a set of partial urls that a user should have access to.  *s are allowed, but only as the full, final step in the path Since non-resource URLs are not namespaced, this field is only applicable for ClusterRoles referenced from a ClusterRoleBinding. Rules can either apply to API resources (such as "pods" or "secrets") or non-resource URL paths (such as "/api"),  but not both.
  nonResourceURLs:[String]
  # ResourceNames is an optional white list of names that the rule applies to.  An empty set means that everything is allowed.
  resourceNames:[String]
  # Resources is a list of resources this rule applies to.  ResourceAll represents all resources.
  resources:[String]
  # Verbs is a list of Verbs that apply to ALL the ResourceKinds and AttributeRestrictions contained in this rule.  VerbAll represents all kinds.
  verbs:[String]
  # APIGroups is the name of the APIGroup that contains the resources.  If multiple API groups are specified, any action requested against one of the enumerated resources in any API group will be allowed.
  apiGroups:[String]
}
# PolicyRule holds information that describes a policy rule, but does not contain information about who the rule applies to or which namespace the rule applies to.
type io_k8s_api_rbac_v1_PolicyRuleResult {
  # APIGroups is the name of the APIGroup that contains the resources.  If multiple API groups are specified, any action requested against one of the enumerated resources in any API group will be allowed.
  apiGroups:[String]
  # NonResourceURLs is a set of partial urls that a user should have access to.  *s are allowed, but only as the full, final step in the path Since non-resource URLs are not namespaced, this field is only applicable for ClusterRoles referenced from a ClusterRoleBinding. Rules can either apply to API resources (such as "pods" or "secrets") or non-resource URL paths (such as "/api"),  but not both.
  nonResourceURLs:[String]
  # ResourceNames is an optional white list of names that the rule applies to.  An empty set means that everything is allowed.
  resourceNames:[String]
  # Resources is a list of resources this rule applies to.  ResourceAll represents all resources.
  resources:[String]
  # Verbs is a list of Verbs that apply to ALL the ResourceKinds and AttributeRestrictions contained in this rule.  VerbAll represents all kinds.
  verbs:[String]
}
# RoleBinding references a role, but does not contain it.  It can reference a Role in the same namespace or a ClusterRole in the global namespace. It adds who information via Subjects and namespace information by which namespace it exists in.  RoleBindings in a given namespace only have effect in that namespace.
input io_k8s_api_rbac_v1_RoleBindingInput {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  # RoleRef contains information that points to the role being used
  roleRef:io_k8s_api_rbac_v1_RoleRefInput
  # Subjects holds references to the objects the role applies to.
  subjects:[io_k8s_api_rbac_v1_SubjectInput]
}
# RoleBindingList is a collection of RoleBindings
type io_k8s_api_rbac_v1_RoleBindingListResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Items is a list of RoleBindings
  items:[io_k8s_api_rbac_v1_RoleBindingResult]
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
# RoleBinding references a role, but does not contain it.  It can reference a Role in the same namespace or a ClusterRole in the global namespace. It adds who information via Subjects and namespace information by which namespace it exists in.  RoleBindings in a given namespace only have effect in that namespace.
type io_k8s_api_rbac_v1_RoleBindingResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  # RoleRef contains information that points to the role being used
  roleRef:io_k8s_api_rbac_v1_RoleRefResult
  # Subjects holds references to the objects the role applies to.
  subjects:[io_k8s_api_rbac_v1_SubjectResult]
}
# Role is a namespaced, logical grouping of PolicyRules that can be referenced as a unit by a RoleBinding.
input io_k8s_api_rbac_v1_RoleInput {
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  # Rules holds all the PolicyRules for this Role
  rules:[io_k8s_api_rbac_v1_PolicyRuleInput]
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
}
# RoleList is a collection of Roles
type io_k8s_api_rbac_v1_RoleListResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Items is a list of Roles
  items:[io_k8s_api_rbac_v1_RoleResult]
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
# RoleRef contains information that points to the role being used
input io_k8s_api_rbac_v1_RoleRefInput {
  # APIGroup is the group for the resource being referenced
  apiGroup:String
  # Kind is the type of resource being referenced
  kind:String
  # Name is the name of resource being referenced
  name:String
}
# RoleRef contains information that points to the role being used
type io_k8s_api_rbac_v1_RoleRefResult {
  # APIGroup is the group for the resource being referenced
  apiGroup:String
  # Kind is the type of resource being referenced
  kind:String
  # Name is the name of resource being referenced
  name:String
}
# Role is a namespaced, logical grouping of PolicyRules that can be referenced as a unit by a RoleBinding.
type io_k8s_api_rbac_v1_RoleResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  # Rules holds all the PolicyRules for this Role
  rules:[io_k8s_api_rbac_v1_PolicyRuleResult]
}
# Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
input io_k8s_api_rbac_v1_SubjectInput {
  # APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
  apiGroup:String
  # Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
  kind:String
  # Name of the object being referenced.
  name:String
  # Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
  namespace:String
}
# Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
type io_k8s_api_rbac_v1_SubjectResult {
  # APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
  apiGroup:String
  # Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
  kind:String
  # Name of the object being referenced.
  name:String
  # Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
  namespace:String
}
# AggregationRule describes how to locate ClusterRoles to aggregate into the ClusterRole
input io_k8s_api_rbac_v1beta1_AggregationRuleInput {
  # ClusterRoleSelectors holds a list of selectors which will be used to find ClusterRoles and create the rules. If any of the selectors match, then the ClusterRole's permissions will be added
  clusterRoleSelectors:[io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorInput]
}
# AggregationRule describes how to locate ClusterRoles to aggregate into the ClusterRole
type io_k8s_api_rbac_v1beta1_AggregationRuleResult {
  # ClusterRoleSelectors holds a list of selectors which will be used to find ClusterRoles and create the rules. If any of the selectors match, then the ClusterRole's permissions will be added
  clusterRoleSelectors:[io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorResult]
}
# ClusterRoleBinding references a ClusterRole, but not contain it.  It can reference a ClusterRole in the global namespace, and adds who information via Subject. Deprecated in v1.17 in favor of rbac.authorization.k8s.io/v1 ClusterRoleBinding, and will no longer be served in v1.20.
input io_k8s_api_rbac_v1beta1_ClusterRoleBindingInput {
  # RoleRef contains information that points to the role being used
  roleRef:io_k8s_api_rbac_v1beta1_RoleRefInput
  # Subjects holds references to the objects the role applies to.
  subjects:[io_k8s_api_rbac_v1beta1_SubjectInput]
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
}
# ClusterRoleBindingList is a collection of ClusterRoleBindings. Deprecated in v1.17 in favor of rbac.authorization.k8s.io/v1 ClusterRoleBindingList, and will no longer be served in v1.20.
type io_k8s_api_rbac_v1beta1_ClusterRoleBindingListResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Items is a list of ClusterRoleBindings
  items:[io_k8s_api_rbac_v1beta1_ClusterRoleBindingResult]
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
# ClusterRoleBinding references a ClusterRole, but not contain it.  It can reference a ClusterRole in the global namespace, and adds who information via Subject. Deprecated in v1.17 in favor of rbac.authorization.k8s.io/v1 ClusterRoleBinding, and will no longer be served in v1.20.
type io_k8s_api_rbac_v1beta1_ClusterRoleBindingResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  # RoleRef contains information that points to the role being used
  roleRef:io_k8s_api_rbac_v1beta1_RoleRefResult
  # Subjects holds references to the objects the role applies to.
  subjects:[io_k8s_api_rbac_v1beta1_SubjectResult]
}
# ClusterRole is a cluster level, logical grouping of PolicyRules that can be referenced as a unit by a RoleBinding or ClusterRoleBinding. Deprecated in v1.17 in favor of rbac.authorization.k8s.io/v1 ClusterRole, and will no longer be served in v1.20.
input io_k8s_api_rbac_v1beta1_ClusterRoleInput {
  # AggregationRule describes how to locate ClusterRoles to aggregate into the ClusterRole
  aggregationRule:io_k8s_api_rbac_v1beta1_AggregationRuleInput
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  # Rules holds all the PolicyRules for this ClusterRole
  rules:[io_k8s_api_rbac_v1beta1_PolicyRuleInput]
}
# ClusterRoleList is a collection of ClusterRoles. Deprecated in v1.17 in favor of rbac.authorization.k8s.io/v1 ClusterRoles, and will no longer be served in v1.20.
type io_k8s_api_rbac_v1beta1_ClusterRoleListResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Items is a list of ClusterRoles
  items:[io_k8s_api_rbac_v1beta1_ClusterRoleResult]
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
# ClusterRole is a cluster level, logical grouping of PolicyRules that can be referenced as a unit by a RoleBinding or ClusterRoleBinding. Deprecated in v1.17 in favor of rbac.authorization.k8s.io/v1 ClusterRole, and will no longer be served in v1.20.
type io_k8s_api_rbac_v1beta1_ClusterRoleResult {
  # AggregationRule describes how to locate ClusterRoles to aggregate into the ClusterRole
  aggregationRule:io_k8s_api_rbac_v1beta1_AggregationRuleResult
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  # Rules holds all the PolicyRules for this ClusterRole
  rules:[io_k8s_api_rbac_v1beta1_PolicyRuleResult]
}
# PolicyRule holds information that describes a policy rule, but does not contain information about who the rule applies to or which namespace the rule applies to.
input io_k8s_api_rbac_v1beta1_PolicyRuleInput {
  # NonResourceURLs is a set of partial urls that a user should have access to.  *s are allowed, but only as the full, final step in the path Since non-resource URLs are not namespaced, this field is only applicable for ClusterRoles referenced from a ClusterRoleBinding. Rules can either apply to API resources (such as "pods" or "secrets") or non-resource URL paths (such as "/api"),  but not both.
  nonResourceURLs:[String]
  # ResourceNames is an optional white list of names that the rule applies to.  An empty set means that everything is allowed.
  resourceNames:[String]
  # Resources is a list of resources this rule applies to.  '*' represents all resources in the specified apiGroups. '*/foo' represents the subresource 'foo' for all resources in the specified apiGroups.
  resources:[String]
  # Verbs is a list of Verbs that apply to ALL the ResourceKinds and AttributeRestrictions contained in this rule.  VerbAll represents all kinds.
  verbs:[String]
  # APIGroups is the name of the APIGroup that contains the resources.  If multiple API groups are specified, any action requested against one of the enumerated resources in any API group will be allowed.
  apiGroups:[String]
}
# PolicyRule holds information that describes a policy rule, but does not contain information about who the rule applies to or which namespace the rule applies to.
type io_k8s_api_rbac_v1beta1_PolicyRuleResult {
  # APIGroups is the name of the APIGroup that contains the resources.  If multiple API groups are specified, any action requested against one of the enumerated resources in any API group will be allowed.
  apiGroups:[String]
  # NonResourceURLs is a set of partial urls that a user should have access to.  *s are allowed, but only as the full, final step in the path Since non-resource URLs are not namespaced, this field is only applicable for ClusterRoles referenced from a ClusterRoleBinding. Rules can either apply to API resources (such as "pods" or "secrets") or non-resource URL paths (such as "/api"),  but not both.
  nonResourceURLs:[String]
  # ResourceNames is an optional white list of names that the rule applies to.  An empty set means that everything is allowed.
  resourceNames:[String]
  # Resources is a list of resources this rule applies to.  '*' represents all resources in the specified apiGroups. '*/foo' represents the subresource 'foo' for all resources in the specified apiGroups.
  resources:[String]
  # Verbs is a list of Verbs that apply to ALL the ResourceKinds and AttributeRestrictions contained in this rule.  VerbAll represents all kinds.
  verbs:[String]
}
# RoleBinding references a role, but does not contain it.  It can reference a Role in the same namespace or a ClusterRole in the global namespace. It adds who information via Subjects and namespace information by which namespace it exists in.  RoleBindings in a given namespace only have effect in that namespace. Deprecated in v1.17 in favor of rbac.authorization.k8s.io/v1 RoleBinding, and will no longer be served in v1.20.
input io_k8s_api_rbac_v1beta1_RoleBindingInput {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  # RoleRef contains information that points to the role being used
  roleRef:io_k8s_api_rbac_v1beta1_RoleRefInput
  # Subjects holds references to the objects the role applies to.
  subjects:[io_k8s_api_rbac_v1beta1_SubjectInput]
}
# RoleBindingList is a collection of RoleBindings Deprecated in v1.17 in favor of rbac.authorization.k8s.io/v1 RoleBindingList, and will no longer be served in v1.20.
type io_k8s_api_rbac_v1beta1_RoleBindingListResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Items is a list of RoleBindings
  items:[io_k8s_api_rbac_v1beta1_RoleBindingResult]
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
# RoleBinding references a role, but does not contain it.  It can reference a Role in the same namespace or a ClusterRole in the global namespace. It adds who information via Subjects and namespace information by which namespace it exists in.  RoleBindings in a given namespace only have effect in that namespace. Deprecated in v1.17 in favor of rbac.authorization.k8s.io/v1 RoleBinding, and will no longer be served in v1.20.
type io_k8s_api_rbac_v1beta1_RoleBindingResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  # RoleRef contains information that points to the role being used
  roleRef:io_k8s_api_rbac_v1beta1_RoleRefResult
  # Subjects holds references to the objects the role applies to.
  subjects:[io_k8s_api_rbac_v1beta1_SubjectResult]
}
# Role is a namespaced, logical grouping of PolicyRules that can be referenced as a unit by a RoleBinding. Deprecated in v1.17 in favor of rbac.authorization.k8s.io/v1 Role, and will no longer be served in v1.20.
input io_k8s_api_rbac_v1beta1_RoleInput {
  # Rules holds all the PolicyRules for this Role
  rules:[io_k8s_api_rbac_v1beta1_PolicyRuleInput]
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
}
# RoleList is a collection of Roles Deprecated in v1.17 in favor of rbac.authorization.k8s.io/v1 RoleList, and will no longer be served in v1.20.
type io_k8s_api_rbac_v1beta1_RoleListResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Items is a list of Roles
  items:[io_k8s_api_rbac_v1beta1_RoleResult]
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
# RoleRef contains information that points to the role being used
input io_k8s_api_rbac_v1beta1_RoleRefInput {
  # APIGroup is the group for the resource being referenced
  apiGroup:String
  # Kind is the type of resource being referenced
  kind:String
  # Name is the name of resource being referenced
  name:String
}
# RoleRef contains information that points to the role being used
type io_k8s_api_rbac_v1beta1_RoleRefResult {
  # APIGroup is the group for the resource being referenced
  apiGroup:String
  # Kind is the type of resource being referenced
  kind:String
  # Name is the name of resource being referenced
  name:String
}
# Role is a namespaced, logical grouping of PolicyRules that can be referenced as a unit by a RoleBinding. Deprecated in v1.17 in favor of rbac.authorization.k8s.io/v1 Role, and will no longer be served in v1.20.
type io_k8s_api_rbac_v1beta1_RoleResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  # Rules holds all the PolicyRules for this Role
  rules:[io_k8s_api_rbac_v1beta1_PolicyRuleResult]
}
# Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
input io_k8s_api_rbac_v1beta1_SubjectInput {
  # APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
  apiGroup:String
  # Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
  kind:String
  # Name of the object being referenced.
  name:String
  # Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
  namespace:String
}
# Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
type io_k8s_api_rbac_v1beta1_SubjectResult {
  # APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
  apiGroup:String
  # Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
  kind:String
  # Name of the object being referenced.
  name:String
  # Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
  namespace:String
}
# PriorityClass defines mapping from a priority class name to the priority integer value. The value can be any valid integer.
input io_k8s_api_scheduling_v1_PriorityClassInput {
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  # PreemptionPolicy is the Policy for preempting pods with lower priority. One of Never, PreemptLowerPriority. Defaults to PreemptLowerPriority if unset. This field is alpha-level and is only honored by servers that enable the NonPreemptingPriority feature.
  preemptionPolicy:String
  # The value of this priority class. This is the actual priority that pods receive when they have the name of this class in their pod spec.
  value:Int
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # description is an arbitrary string that usually provides guidelines on when this priority class should be used.
  description:String
  # globalDefault specifies whether this PriorityClass should be considered as the default priority for pods that do not have any priority class. Only one PriorityClass can be marked as `globalDefault`. However, if more than one PriorityClasses exists with their `globalDefault` field set to true, the smallest value of such global default PriorityClasses will be used as the default priority.
  globalDefault:Boolean
}
# PriorityClassList is a collection of priority classes.
type io_k8s_api_scheduling_v1_PriorityClassListResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # items is the list of PriorityClasses
  items:[io_k8s_api_scheduling_v1_PriorityClassResult]
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
# PriorityClass defines mapping from a priority class name to the priority integer value. The value can be any valid integer.
type io_k8s_api_scheduling_v1_PriorityClassResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # description is an arbitrary string that usually provides guidelines on when this priority class should be used.
  description:String
  # globalDefault specifies whether this PriorityClass should be considered as the default priority for pods that do not have any priority class. Only one PriorityClass can be marked as `globalDefault`. However, if more than one PriorityClasses exists with their `globalDefault` field set to true, the smallest value of such global default PriorityClasses will be used as the default priority.
  globalDefault:Boolean
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  # PreemptionPolicy is the Policy for preempting pods with lower priority. One of Never, PreemptLowerPriority. Defaults to PreemptLowerPriority if unset. This field is alpha-level and is only honored by servers that enable the NonPreemptingPriority feature.
  preemptionPolicy:String
  # The value of this priority class. This is the actual priority that pods receive when they have the name of this class in their pod spec.
  value:Int
}
# DEPRECATED - This group version of PriorityClass is deprecated by scheduling.k8s.io/v1/PriorityClass. PriorityClass defines mapping from a priority class name to the priority integer value. The value can be any valid integer.
input io_k8s_api_scheduling_v1beta1_PriorityClassInput {
  # PreemptionPolicy is the Policy for preempting pods with lower priority. One of Never, PreemptLowerPriority. Defaults to PreemptLowerPriority if unset. This field is alpha-level and is only honored by servers that enable the NonPreemptingPriority feature.
  preemptionPolicy:String
  # The value of this priority class. This is the actual priority that pods receive when they have the name of this class in their pod spec.
  value:Int
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # description is an arbitrary string that usually provides guidelines on when this priority class should be used.
  description:String
  # globalDefault specifies whether this PriorityClass should be considered as the default priority for pods that do not have any priority class. Only one PriorityClass can be marked as `globalDefault`. However, if more than one PriorityClasses exists with their `globalDefault` field set to true, the smallest value of such global default PriorityClasses will be used as the default priority.
  globalDefault:Boolean
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
}
# PriorityClassList is a collection of priority classes.
type io_k8s_api_scheduling_v1beta1_PriorityClassListResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # items is the list of PriorityClasses
  items:[io_k8s_api_scheduling_v1beta1_PriorityClassResult]
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
# DEPRECATED - This group version of PriorityClass is deprecated by scheduling.k8s.io/v1/PriorityClass. PriorityClass defines mapping from a priority class name to the priority integer value. The value can be any valid integer.
type io_k8s_api_scheduling_v1beta1_PriorityClassResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # description is an arbitrary string that usually provides guidelines on when this priority class should be used.
  description:String
  # globalDefault specifies whether this PriorityClass should be considered as the default priority for pods that do not have any priority class. Only one PriorityClass can be marked as `globalDefault`. However, if more than one PriorityClasses exists with their `globalDefault` field set to true, the smallest value of such global default PriorityClasses will be used as the default priority.
  globalDefault:Boolean
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  # PreemptionPolicy is the Policy for preempting pods with lower priority. One of Never, PreemptLowerPriority. Defaults to PreemptLowerPriority if unset. This field is alpha-level and is only honored by servers that enable the NonPreemptingPriority feature.
  preemptionPolicy:String
  # The value of this priority class. This is the actual priority that pods receive when they have the name of this class in their pod spec.
  value:Int
}
# CSINodeDriver holds information about the specification of one CSI driver installed on a node
input io_k8s_api_storage_v1_CSINodeDriverInput {
  # VolumeNodeResources is a set of resource limits for scheduling of volumes.
  allocatable:io_k8s_api_storage_v1_VolumeNodeResourcesInput
  # This is the name of the CSI driver that this object refers to. This MUST be the same name returned by the CSI GetPluginName() call for that driver.
  name:String
  # nodeID of the node from the driver point of view. This field enables Kubernetes to communicate with storage systems that do not share the same nomenclature for nodes. For example, Kubernetes may refer to a given node as "node1", but the storage system may refer to the same node as "nodeA". When Kubernetes issues a command to the storage system to attach a volume to a specific node, it can use this field to refer to the node name using the ID that the storage system will understand, e.g. "nodeA" instead of "node1". This field is required.
  nodeID:String
  # topologyKeys is the list of keys supported by the driver. When a driver is initialized on a cluster, it provides a set of topology keys that it understands (e.g. "company.com/zone", "company.com/region"). When a driver is initialized on a node, it provides the same topology keys along with values. Kubelet will expose these topology keys as labels on its own node object. When Kubernetes does topology aware provisioning, it can use this list to determine which labels it should retrieve from the node object and pass back to the driver. It is possible for different nodes to use different topology keys. This can be empty if driver does not support topology.
  topologyKeys:[String]
}
# CSINodeDriver holds information about the specification of one CSI driver installed on a node
type io_k8s_api_storage_v1_CSINodeDriverResult {
  # VolumeNodeResources is a set of resource limits for scheduling of volumes.
  allocatable:io_k8s_api_storage_v1_VolumeNodeResourcesResult
  # This is the name of the CSI driver that this object refers to. This MUST be the same name returned by the CSI GetPluginName() call for that driver.
  name:String
  # nodeID of the node from the driver point of view. This field enables Kubernetes to communicate with storage systems that do not share the same nomenclature for nodes. For example, Kubernetes may refer to a given node as "node1", but the storage system may refer to the same node as "nodeA". When Kubernetes issues a command to the storage system to attach a volume to a specific node, it can use this field to refer to the node name using the ID that the storage system will understand, e.g. "nodeA" instead of "node1". This field is required.
  nodeID:String
  # topologyKeys is the list of keys supported by the driver. When a driver is initialized on a cluster, it provides a set of topology keys that it understands (e.g. "company.com/zone", "company.com/region"). When a driver is initialized on a node, it provides the same topology keys along with values. Kubelet will expose these topology keys as labels on its own node object. When Kubernetes does topology aware provisioning, it can use this list to determine which labels it should retrieve from the node object and pass back to the driver. It is possible for different nodes to use different topology keys. This can be empty if driver does not support topology.
  topologyKeys:[String]
}
# CSINode holds information about all CSI drivers installed on a node. CSI drivers do not need to create the CSINode object directly. As long as they use the node-driver-registrar sidecar container, the kubelet will automatically populate the CSINode object for the CSI driver as part of kubelet plugin registration. CSINode has the same name as a node. If the object is missing, it means either there are no CSI Drivers available on the node, or the Kubelet version is low enough that it doesn't create this object. CSINode has an OwnerReference that points to the corresponding node object.
input io_k8s_api_storage_v1_CSINodeInput {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  # CSINodeSpec holds information about the specification of all CSI drivers installed on a node
  spec:io_k8s_api_storage_v1_CSINodeSpecInput
}
# CSINodeList is a collection of CSINode objects.
type io_k8s_api_storage_v1_CSINodeListResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # items is the list of CSINode
  items:[io_k8s_api_storage_v1_CSINodeResult]
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
# CSINode holds information about all CSI drivers installed on a node. CSI drivers do not need to create the CSINode object directly. As long as they use the node-driver-registrar sidecar container, the kubelet will automatically populate the CSINode object for the CSI driver as part of kubelet plugin registration. CSINode has the same name as a node. If the object is missing, it means either there are no CSI Drivers available on the node, or the Kubelet version is low enough that it doesn't create this object. CSINode has an OwnerReference that points to the corresponding node object.
type io_k8s_api_storage_v1_CSINodeResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  # CSINodeSpec holds information about the specification of all CSI drivers installed on a node
  spec:io_k8s_api_storage_v1_CSINodeSpecResult
}
# CSINodeSpec holds information about the specification of all CSI drivers installed on a node
input io_k8s_api_storage_v1_CSINodeSpecInput {
  # drivers is a list of information of all CSI Drivers existing on a node. If all drivers in the list are uninstalled, this can become empty.
  drivers:[io_k8s_api_storage_v1_CSINodeDriverInput]
}
# CSINodeSpec holds information about the specification of all CSI drivers installed on a node
type io_k8s_api_storage_v1_CSINodeSpecResult {
  # drivers is a list of information of all CSI Drivers existing on a node. If all drivers in the list are uninstalled, this can become empty.
  drivers:[io_k8s_api_storage_v1_CSINodeDriverResult]
}
# StorageClass describes the parameters for a class of storage for which PersistentVolumes can be dynamically provisioned.
# StorageClasses are non-namespaced; the name of the storage class according to etcd is in ObjectMeta.Name.
input io_k8s_api_storage_v1_StorageClassInput {
  # Dynamically provisioned PersistentVolumes of this storage class are created with these mountOptions, e.g. ["ro", "soft"]. Not validated - mount of the PVs will simply fail if one is invalid.
  mountOptions:[String]
  # Provisioner indicates the type of the provisioner.
  provisioner:String
  # Dynamically provisioned PersistentVolumes of this storage class are created with this reclaimPolicy. Defaults to Delete.
  reclaimPolicy:String
  # AllowVolumeExpansion shows whether the storage class allow volume expand
  allowVolumeExpansion:Boolean
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  # VolumeBindingMode indicates how PersistentVolumeClaims should be provisioned and bound.  When unset, VolumeBindingImmediate is used. This field is only honored by servers that enable the VolumeScheduling feature.
  volumeBindingMode:String
  # Restrict the node topologies where volumes can be dynamically provisioned. Each volume plugin defines its own supported topology specifications. An empty TopologySelectorTerm list means there is no topology restriction. This field is only honored by servers that enable the VolumeScheduling feature.
  allowedTopologies:[io_k8s_api_core_v1_TopologySelectorTermInput]
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
}
# StorageClassList is a collection of storage classes.
type io_k8s_api_storage_v1_StorageClassListResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Items is the list of StorageClasses
  items:[io_k8s_api_storage_v1_StorageClassResult]
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
# StorageClass describes the parameters for a class of storage for which PersistentVolumes can be dynamically provisioned.
# StorageClasses are non-namespaced; the name of the storage class according to etcd is in ObjectMeta.Name.
type io_k8s_api_storage_v1_StorageClassResult {
  # AllowVolumeExpansion shows whether the storage class allow volume expand
  allowVolumeExpansion:Boolean
  # Restrict the node topologies where volumes can be dynamically provisioned. Each volume plugin defines its own supported topology specifications. An empty TopologySelectorTerm list means there is no topology restriction. This field is only honored by servers that enable the VolumeScheduling feature.
  allowedTopologies:[io_k8s_api_core_v1_TopologySelectorTermResult]
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  # Dynamically provisioned PersistentVolumes of this storage class are created with these mountOptions, e.g. ["ro", "soft"]. Not validated - mount of the PVs will simply fail if one is invalid.
  mountOptions:[String]
  # Provisioner indicates the type of the provisioner.
  provisioner:String
  # Dynamically provisioned PersistentVolumes of this storage class are created with this reclaimPolicy. Defaults to Delete.
  reclaimPolicy:String
  # VolumeBindingMode indicates how PersistentVolumeClaims should be provisioned and bound.  When unset, VolumeBindingImmediate is used. This field is only honored by servers that enable the VolumeScheduling feature.
  volumeBindingMode:String
}
# VolumeAttachment captures the intent to attach or detach the specified volume to/from the specified node.
# VolumeAttachment objects are non-namespaced.
input io_k8s_api_storage_v1_VolumeAttachmentInput {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  # VolumeAttachmentSpec is the specification of a VolumeAttachment request.
  spec:io_k8s_api_storage_v1_VolumeAttachmentSpecInput
  # VolumeAttachmentStatus is the status of a VolumeAttachment request.
  status:io_k8s_api_storage_v1_VolumeAttachmentStatusInput
}
# VolumeAttachmentList is a collection of VolumeAttachment objects.
type io_k8s_api_storage_v1_VolumeAttachmentListResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Items is the list of VolumeAttachments
  items:[io_k8s_api_storage_v1_VolumeAttachmentResult]
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
# VolumeAttachment captures the intent to attach or detach the specified volume to/from the specified node.
# VolumeAttachment objects are non-namespaced.
type io_k8s_api_storage_v1_VolumeAttachmentResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  # VolumeAttachmentSpec is the specification of a VolumeAttachment request.
  spec:io_k8s_api_storage_v1_VolumeAttachmentSpecResult
  # VolumeAttachmentStatus is the status of a VolumeAttachment request.
  status:io_k8s_api_storage_v1_VolumeAttachmentStatusResult
}
# VolumeAttachmentSource represents a volume that should be attached. Right now only PersistenVolumes can be attached via external attacher, in future we may allow also inline volumes in pods. Exactly one member can be set.
input io_k8s_api_storage_v1_VolumeAttachmentSourceInput {
  # PersistentVolumeSpec is the specification of a persistent volume.
  inlineVolumeSpec:io_k8s_api_core_v1_PersistentVolumeSpecInput
  # Name of the persistent volume to attach.
  persistentVolumeName:String
}
# VolumeAttachmentSource represents a volume that should be attached. Right now only PersistenVolumes can be attached via external attacher, in future we may allow also inline volumes in pods. Exactly one member can be set.
type io_k8s_api_storage_v1_VolumeAttachmentSourceResult {
  # PersistentVolumeSpec is the specification of a persistent volume.
  inlineVolumeSpec:io_k8s_api_core_v1_PersistentVolumeSpecResult
  # Name of the persistent volume to attach.
  persistentVolumeName:String
}
# VolumeAttachmentSpec is the specification of a VolumeAttachment request.
input io_k8s_api_storage_v1_VolumeAttachmentSpecInput {
  # Attacher indicates the name of the volume driver that MUST handle this request. This is the name returned by GetPluginName().
  attacher:String
  # The node that the volume should be attached to.
  nodeName:String
  # VolumeAttachmentSource represents a volume that should be attached. Right now only PersistenVolumes can be attached via external attacher, in future we may allow also inline volumes in pods. Exactly one member can be set.
  source:io_k8s_api_storage_v1_VolumeAttachmentSourceInput
}
# VolumeAttachmentSpec is the specification of a VolumeAttachment request.
type io_k8s_api_storage_v1_VolumeAttachmentSpecResult {
  # Attacher indicates the name of the volume driver that MUST handle this request. This is the name returned by GetPluginName().
  attacher:String
  # The node that the volume should be attached to.
  nodeName:String
  # VolumeAttachmentSource represents a volume that should be attached. Right now only PersistenVolumes can be attached via external attacher, in future we may allow also inline volumes in pods. Exactly one member can be set.
  source:io_k8s_api_storage_v1_VolumeAttachmentSourceResult
}
# VolumeAttachmentStatus is the status of a VolumeAttachment request.
input io_k8s_api_storage_v1_VolumeAttachmentStatusInput {
  # VolumeError captures an error encountered during a volume operation.
  detachError:io_k8s_api_storage_v1_VolumeErrorInput
  # VolumeError captures an error encountered during a volume operation.
  attachError:io_k8s_api_storage_v1_VolumeErrorInput
  # Indicates the volume is successfully attached. This field must only be set by the entity completing the attach operation, i.e. the external-attacher.
  attached:Boolean
}
# VolumeAttachmentStatus is the status of a VolumeAttachment request.
type io_k8s_api_storage_v1_VolumeAttachmentStatusResult {
  # VolumeError captures an error encountered during a volume operation.
  attachError:io_k8s_api_storage_v1_VolumeErrorResult
  # Indicates the volume is successfully attached. This field must only be set by the entity completing the attach operation, i.e. the external-attacher.
  attached:Boolean
  # VolumeError captures an error encountered during a volume operation.
  detachError:io_k8s_api_storage_v1_VolumeErrorResult
}
# VolumeError captures an error encountered during a volume operation.
input io_k8s_api_storage_v1_VolumeErrorInput {
  # String detailing the error encountered during Attach or Detach operation. This string may be logged, so it should not contain sensitive information.
  message:String
  # Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
  time:String
}
# VolumeError captures an error encountered during a volume operation.
type io_k8s_api_storage_v1_VolumeErrorResult {
  # String detailing the error encountered during Attach or Detach operation. This string may be logged, so it should not contain sensitive information.
  message:String
  # Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
  time:String
}
# VolumeNodeResources is a set of resource limits for scheduling of volumes.
input io_k8s_api_storage_v1_VolumeNodeResourcesInput {
  # Maximum number of unique volumes managed by the CSI driver that can be used on a node. A volume that is both attached and mounted on a node is considered to be used once, not twice. The same rule applies for a unique volume that is shared among multiple pods on the same node. If this field is not specified, then the supported number of volumes on this node is unbounded.
  count:Int
}
# VolumeNodeResources is a set of resource limits for scheduling of volumes.
type io_k8s_api_storage_v1_VolumeNodeResourcesResult {
  # Maximum number of unique volumes managed by the CSI driver that can be used on a node. A volume that is both attached and mounted on a node is considered to be used once, not twice. The same rule applies for a unique volume that is shared among multiple pods on the same node. If this field is not specified, then the supported number of volumes on this node is unbounded.
  count:Int
}
# CSIDriver captures information about a Container Storage Interface (CSI) volume driver deployed on the cluster. CSI drivers do not need to create the CSIDriver object directly. Instead they may use the cluster-driver-registrar sidecar container. When deployed with a CSI driver it automatically creates a CSIDriver object representing the driver. Kubernetes attach detach controller uses this object to determine whether attach is required. Kubelet uses this object to determine whether pod information needs to be passed on mount. CSIDriver objects are non-namespaced.
input io_k8s_api_storage_v1beta1_CSIDriverInput {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  # CSIDriverSpec is the specification of a CSIDriver.
  spec:io_k8s_api_storage_v1beta1_CSIDriverSpecInput
}
# CSIDriverList is a collection of CSIDriver objects.
type io_k8s_api_storage_v1beta1_CSIDriverListResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # items is the list of CSIDriver
  items:[io_k8s_api_storage_v1beta1_CSIDriverResult]
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
# CSIDriver captures information about a Container Storage Interface (CSI) volume driver deployed on the cluster. CSI drivers do not need to create the CSIDriver object directly. Instead they may use the cluster-driver-registrar sidecar container. When deployed with a CSI driver it automatically creates a CSIDriver object representing the driver. Kubernetes attach detach controller uses this object to determine whether attach is required. Kubelet uses this object to determine whether pod information needs to be passed on mount. CSIDriver objects are non-namespaced.
type io_k8s_api_storage_v1beta1_CSIDriverResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  # CSIDriverSpec is the specification of a CSIDriver.
  spec:io_k8s_api_storage_v1beta1_CSIDriverSpecResult
}
# CSIDriverSpec is the specification of a CSIDriver.
input io_k8s_api_storage_v1beta1_CSIDriverSpecInput {
  # attachRequired indicates this CSI volume driver requires an attach operation (because it implements the CSI ControllerPublishVolume() method), and that the Kubernetes attach detach controller should call the attach volume interface which checks the volumeattachment status and waits until the volume is attached before proceeding to mounting. The CSI external-attacher coordinates with CSI volume driver and updates the volumeattachment status when the attach operation is complete. If the CSIDriverRegistry feature gate is enabled and the value is specified to false, the attach operation will be skipped. Otherwise the attach operation will be called.
  attachRequired:Boolean
  # If set to true, podInfoOnMount indicates this CSI volume driver requires additional pod information (like podName, podUID, etc.) during mount operations. If set to false, pod information will not be passed on mount. Default is false. The CSI driver specifies podInfoOnMount as part of driver deployment. If true, Kubelet will pass pod information as VolumeContext in the CSI NodePublishVolume() calls. The CSI driver is responsible for parsing and validating the information passed in as VolumeContext. The following VolumeConext will be passed if podInfoOnMount is set to true. This list might grow, but the prefix will be used. "csi.storage.k8s.io/pod.name": pod.Name "csi.storage.k8s.io/pod.namespace": pod.Namespace "csi.storage.k8s.io/pod.uid": string(pod.UID) "csi.storage.k8s.io/ephemeral": "true" iff the volume is an ephemeral inline volume
  #                                 defined by a CSIVolumeSource, otherwise "false"
  # "csi.storage.k8s.io/ephemeral" is a new feature in Kubernetes 1.16. It is only required for drivers which support both the "Persistent" and "Ephemeral" VolumeLifecycleMode. Other drivers can leave pod info disabled and/or ignore this field. As Kubernetes 1.15 doesn't support this field, drivers can only support one mode when deployed on such a cluster and the deployment determines which mode that is, for example via a command line parameter of the driver.
  podInfoOnMount:Boolean
  # VolumeLifecycleModes defines what kind of volumes this CSI volume driver supports. The default if the list is empty is "Persistent", which is the usage defined by the CSI specification and implemented in Kubernetes via the usual PV/PVC mechanism. The other mode is "Ephemeral". In this mode, volumes are defined inline inside the pod spec with CSIVolumeSource and their lifecycle is tied to the lifecycle of that pod. A driver has to be aware of this because it is only going to get a NodePublishVolume call for such a volume. For more information about implementing this mode, see https://kubernetes-csi.github.io/docs/ephemeral-local-volumes.html A driver can support one or more of these modes and more modes may be added in the future.
  volumeLifecycleModes:[String]
}
# CSIDriverSpec is the specification of a CSIDriver.
type io_k8s_api_storage_v1beta1_CSIDriverSpecResult {
  # attachRequired indicates this CSI volume driver requires an attach operation (because it implements the CSI ControllerPublishVolume() method), and that the Kubernetes attach detach controller should call the attach volume interface which checks the volumeattachment status and waits until the volume is attached before proceeding to mounting. The CSI external-attacher coordinates with CSI volume driver and updates the volumeattachment status when the attach operation is complete. If the CSIDriverRegistry feature gate is enabled and the value is specified to false, the attach operation will be skipped. Otherwise the attach operation will be called.
  attachRequired:Boolean
  # If set to true, podInfoOnMount indicates this CSI volume driver requires additional pod information (like podName, podUID, etc.) during mount operations. If set to false, pod information will not be passed on mount. Default is false. The CSI driver specifies podInfoOnMount as part of driver deployment. If true, Kubelet will pass pod information as VolumeContext in the CSI NodePublishVolume() calls. The CSI driver is responsible for parsing and validating the information passed in as VolumeContext. The following VolumeConext will be passed if podInfoOnMount is set to true. This list might grow, but the prefix will be used. "csi.storage.k8s.io/pod.name": pod.Name "csi.storage.k8s.io/pod.namespace": pod.Namespace "csi.storage.k8s.io/pod.uid": string(pod.UID) "csi.storage.k8s.io/ephemeral": "true" iff the volume is an ephemeral inline volume
  #                                 defined by a CSIVolumeSource, otherwise "false"
  # "csi.storage.k8s.io/ephemeral" is a new feature in Kubernetes 1.16. It is only required for drivers which support both the "Persistent" and "Ephemeral" VolumeLifecycleMode. Other drivers can leave pod info disabled and/or ignore this field. As Kubernetes 1.15 doesn't support this field, drivers can only support one mode when deployed on such a cluster and the deployment determines which mode that is, for example via a command line parameter of the driver.
  podInfoOnMount:Boolean
  # VolumeLifecycleModes defines what kind of volumes this CSI volume driver supports. The default if the list is empty is "Persistent", which is the usage defined by the CSI specification and implemented in Kubernetes via the usual PV/PVC mechanism. The other mode is "Ephemeral". In this mode, volumes are defined inline inside the pod spec with CSIVolumeSource and their lifecycle is tied to the lifecycle of that pod. A driver has to be aware of this because it is only going to get a NodePublishVolume call for such a volume. For more information about implementing this mode, see https://kubernetes-csi.github.io/docs/ephemeral-local-volumes.html A driver can support one or more of these modes and more modes may be added in the future.
  volumeLifecycleModes:[String]
}
# CSINodeDriver holds information about the specification of one CSI driver installed on a node
input io_k8s_api_storage_v1beta1_CSINodeDriverInput {
  # VolumeNodeResources is a set of resource limits for scheduling of volumes.
  allocatable:io_k8s_api_storage_v1beta1_VolumeNodeResourcesInput
  # This is the name of the CSI driver that this object refers to. This MUST be the same name returned by the CSI GetPluginName() call for that driver.
  name:String
  # nodeID of the node from the driver point of view. This field enables Kubernetes to communicate with storage systems that do not share the same nomenclature for nodes. For example, Kubernetes may refer to a given node as "node1", but the storage system may refer to the same node as "nodeA". When Kubernetes issues a command to the storage system to attach a volume to a specific node, it can use this field to refer to the node name using the ID that the storage system will understand, e.g. "nodeA" instead of "node1". This field is required.
  nodeID:String
  # topologyKeys is the list of keys supported by the driver. When a driver is initialized on a cluster, it provides a set of topology keys that it understands (e.g. "company.com/zone", "company.com/region"). When a driver is initialized on a node, it provides the same topology keys along with values. Kubelet will expose these topology keys as labels on its own node object. When Kubernetes does topology aware provisioning, it can use this list to determine which labels it should retrieve from the node object and pass back to the driver. It is possible for different nodes to use different topology keys. This can be empty if driver does not support topology.
  topologyKeys:[String]
}
# CSINodeDriver holds information about the specification of one CSI driver installed on a node
type io_k8s_api_storage_v1beta1_CSINodeDriverResult {
  # VolumeNodeResources is a set of resource limits for scheduling of volumes.
  allocatable:io_k8s_api_storage_v1beta1_VolumeNodeResourcesResult
  # This is the name of the CSI driver that this object refers to. This MUST be the same name returned by the CSI GetPluginName() call for that driver.
  name:String
  # nodeID of the node from the driver point of view. This field enables Kubernetes to communicate with storage systems that do not share the same nomenclature for nodes. For example, Kubernetes may refer to a given node as "node1", but the storage system may refer to the same node as "nodeA". When Kubernetes issues a command to the storage system to attach a volume to a specific node, it can use this field to refer to the node name using the ID that the storage system will understand, e.g. "nodeA" instead of "node1". This field is required.
  nodeID:String
  # topologyKeys is the list of keys supported by the driver. When a driver is initialized on a cluster, it provides a set of topology keys that it understands (e.g. "company.com/zone", "company.com/region"). When a driver is initialized on a node, it provides the same topology keys along with values. Kubelet will expose these topology keys as labels on its own node object. When Kubernetes does topology aware provisioning, it can use this list to determine which labels it should retrieve from the node object and pass back to the driver. It is possible for different nodes to use different topology keys. This can be empty if driver does not support topology.
  topologyKeys:[String]
}
# DEPRECATED - This group version of CSINode is deprecated by storage/v1/CSINode. See the release notes for more information. CSINode holds information about all CSI drivers installed on a node. CSI drivers do not need to create the CSINode object directly. As long as they use the node-driver-registrar sidecar container, the kubelet will automatically populate the CSINode object for the CSI driver as part of kubelet plugin registration. CSINode has the same name as a node. If the object is missing, it means either there are no CSI Drivers available on the node, or the Kubelet version is low enough that it doesn't create this object. CSINode has an OwnerReference that points to the corresponding node object.
input io_k8s_api_storage_v1beta1_CSINodeInput {
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  # CSINodeSpec holds information about the specification of all CSI drivers installed on a node
  spec:io_k8s_api_storage_v1beta1_CSINodeSpecInput
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
}
# CSINodeList is a collection of CSINode objects.
type io_k8s_api_storage_v1beta1_CSINodeListResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # items is the list of CSINode
  items:[io_k8s_api_storage_v1beta1_CSINodeResult]
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
# DEPRECATED - This group version of CSINode is deprecated by storage/v1/CSINode. See the release notes for more information. CSINode holds information about all CSI drivers installed on a node. CSI drivers do not need to create the CSINode object directly. As long as they use the node-driver-registrar sidecar container, the kubelet will automatically populate the CSINode object for the CSI driver as part of kubelet plugin registration. CSINode has the same name as a node. If the object is missing, it means either there are no CSI Drivers available on the node, or the Kubelet version is low enough that it doesn't create this object. CSINode has an OwnerReference that points to the corresponding node object.
type io_k8s_api_storage_v1beta1_CSINodeResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  # CSINodeSpec holds information about the specification of all CSI drivers installed on a node
  spec:io_k8s_api_storage_v1beta1_CSINodeSpecResult
}
# CSINodeSpec holds information about the specification of all CSI drivers installed on a node
input io_k8s_api_storage_v1beta1_CSINodeSpecInput {
  # drivers is a list of information of all CSI Drivers existing on a node. If all drivers in the list are uninstalled, this can become empty.
  drivers:[io_k8s_api_storage_v1beta1_CSINodeDriverInput]
}
# CSINodeSpec holds information about the specification of all CSI drivers installed on a node
type io_k8s_api_storage_v1beta1_CSINodeSpecResult {
  # drivers is a list of information of all CSI Drivers existing on a node. If all drivers in the list are uninstalled, this can become empty.
  drivers:[io_k8s_api_storage_v1beta1_CSINodeDriverResult]
}
# StorageClass describes the parameters for a class of storage for which PersistentVolumes can be dynamically provisioned.
# StorageClasses are non-namespaced; the name of the storage class according to etcd is in ObjectMeta.Name.
input io_k8s_api_storage_v1beta1_StorageClassInput {
  # VolumeBindingMode indicates how PersistentVolumeClaims should be provisioned and bound.  When unset, VolumeBindingImmediate is used. This field is only honored by servers that enable the VolumeScheduling feature.
  volumeBindingMode:String
  # Restrict the node topologies where volumes can be dynamically provisioned. Each volume plugin defines its own supported topology specifications. An empty TopologySelectorTerm list means there is no topology restriction. This field is only honored by servers that enable the VolumeScheduling feature.
  allowedTopologies:[io_k8s_api_core_v1_TopologySelectorTermInput]
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # Dynamically provisioned PersistentVolumes of this storage class are created with these mountOptions, e.g. ["ro", "soft"]. Not validated - mount of the PVs will simply fail if one is invalid.
  mountOptions:[String]
  # Dynamically provisioned PersistentVolumes of this storage class are created with this reclaimPolicy. Defaults to Delete.
  reclaimPolicy:String
  # AllowVolumeExpansion shows whether the storage class allow volume expand
  allowVolumeExpansion:Boolean
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  # Provisioner indicates the type of the provisioner.
  provisioner:String
}
# StorageClassList is a collection of storage classes.
type io_k8s_api_storage_v1beta1_StorageClassListResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Items is the list of StorageClasses
  items:[io_k8s_api_storage_v1beta1_StorageClassResult]
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
# StorageClass describes the parameters for a class of storage for which PersistentVolumes can be dynamically provisioned.
# StorageClasses are non-namespaced; the name of the storage class according to etcd is in ObjectMeta.Name.
type io_k8s_api_storage_v1beta1_StorageClassResult {
  # AllowVolumeExpansion shows whether the storage class allow volume expand
  allowVolumeExpansion:Boolean
  # Restrict the node topologies where volumes can be dynamically provisioned. Each volume plugin defines its own supported topology specifications. An empty TopologySelectorTerm list means there is no topology restriction. This field is only honored by servers that enable the VolumeScheduling feature.
  allowedTopologies:[io_k8s_api_core_v1_TopologySelectorTermResult]
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  # Dynamically provisioned PersistentVolumes of this storage class are created with these mountOptions, e.g. ["ro", "soft"]. Not validated - mount of the PVs will simply fail if one is invalid.
  mountOptions:[String]
  # Provisioner indicates the type of the provisioner.
  provisioner:String
  # Dynamically provisioned PersistentVolumes of this storage class are created with this reclaimPolicy. Defaults to Delete.
  reclaimPolicy:String
  # VolumeBindingMode indicates how PersistentVolumeClaims should be provisioned and bound.  When unset, VolumeBindingImmediate is used. This field is only honored by servers that enable the VolumeScheduling feature.
  volumeBindingMode:String
}
# VolumeAttachment captures the intent to attach or detach the specified volume to/from the specified node.
# VolumeAttachment objects are non-namespaced.
input io_k8s_api_storage_v1beta1_VolumeAttachmentInput {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  # VolumeAttachmentSpec is the specification of a VolumeAttachment request.
  spec:io_k8s_api_storage_v1beta1_VolumeAttachmentSpecInput
  # VolumeAttachmentStatus is the status of a VolumeAttachment request.
  status:io_k8s_api_storage_v1beta1_VolumeAttachmentStatusInput
}
# VolumeAttachmentList is a collection of VolumeAttachment objects.
type io_k8s_api_storage_v1beta1_VolumeAttachmentListResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Items is the list of VolumeAttachments
  items:[io_k8s_api_storage_v1beta1_VolumeAttachmentResult]
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
# VolumeAttachment captures the intent to attach or detach the specified volume to/from the specified node.
# VolumeAttachment objects are non-namespaced.
type io_k8s_api_storage_v1beta1_VolumeAttachmentResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  # VolumeAttachmentSpec is the specification of a VolumeAttachment request.
  spec:io_k8s_api_storage_v1beta1_VolumeAttachmentSpecResult
  # VolumeAttachmentStatus is the status of a VolumeAttachment request.
  status:io_k8s_api_storage_v1beta1_VolumeAttachmentStatusResult
}
# VolumeAttachmentSource represents a volume that should be attached. Right now only PersistenVolumes can be attached via external attacher, in future we may allow also inline volumes in pods. Exactly one member can be set.
input io_k8s_api_storage_v1beta1_VolumeAttachmentSourceInput {
  # PersistentVolumeSpec is the specification of a persistent volume.
  inlineVolumeSpec:io_k8s_api_core_v1_PersistentVolumeSpecInput
  # Name of the persistent volume to attach.
  persistentVolumeName:String
}
# VolumeAttachmentSource represents a volume that should be attached. Right now only PersistenVolumes can be attached via external attacher, in future we may allow also inline volumes in pods. Exactly one member can be set.
type io_k8s_api_storage_v1beta1_VolumeAttachmentSourceResult {
  # PersistentVolumeSpec is the specification of a persistent volume.
  inlineVolumeSpec:io_k8s_api_core_v1_PersistentVolumeSpecResult
  # Name of the persistent volume to attach.
  persistentVolumeName:String
}
# VolumeAttachmentSpec is the specification of a VolumeAttachment request.
input io_k8s_api_storage_v1beta1_VolumeAttachmentSpecInput {
  # The node that the volume should be attached to.
  nodeName:String
  # VolumeAttachmentSource represents a volume that should be attached. Right now only PersistenVolumes can be attached via external attacher, in future we may allow also inline volumes in pods. Exactly one member can be set.
  source:io_k8s_api_storage_v1beta1_VolumeAttachmentSourceInput
  # Attacher indicates the name of the volume driver that MUST handle this request. This is the name returned by GetPluginName().
  attacher:String
}
# VolumeAttachmentSpec is the specification of a VolumeAttachment request.
type io_k8s_api_storage_v1beta1_VolumeAttachmentSpecResult {
  # Attacher indicates the name of the volume driver that MUST handle this request. This is the name returned by GetPluginName().
  attacher:String
  # The node that the volume should be attached to.
  nodeName:String
  # VolumeAttachmentSource represents a volume that should be attached. Right now only PersistenVolumes can be attached via external attacher, in future we may allow also inline volumes in pods. Exactly one member can be set.
  source:io_k8s_api_storage_v1beta1_VolumeAttachmentSourceResult
}
# VolumeAttachmentStatus is the status of a VolumeAttachment request.
input io_k8s_api_storage_v1beta1_VolumeAttachmentStatusInput {
  # VolumeError captures an error encountered during a volume operation.
  attachError:io_k8s_api_storage_v1beta1_VolumeErrorInput
  # Indicates the volume is successfully attached. This field must only be set by the entity completing the attach operation, i.e. the external-attacher.
  attached:Boolean
  # VolumeError captures an error encountered during a volume operation.
  detachError:io_k8s_api_storage_v1beta1_VolumeErrorInput
}
# VolumeAttachmentStatus is the status of a VolumeAttachment request.
type io_k8s_api_storage_v1beta1_VolumeAttachmentStatusResult {
  # VolumeError captures an error encountered during a volume operation.
  attachError:io_k8s_api_storage_v1beta1_VolumeErrorResult
  # Indicates the volume is successfully attached. This field must only be set by the entity completing the attach operation, i.e. the external-attacher.
  attached:Boolean
  # VolumeError captures an error encountered during a volume operation.
  detachError:io_k8s_api_storage_v1beta1_VolumeErrorResult
}
# VolumeError captures an error encountered during a volume operation.
input io_k8s_api_storage_v1beta1_VolumeErrorInput {
  # String detailing the error encountered during Attach or Detach operation. This string may be logged, so it should not contain sensitive information.
  message:String
  # Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
  time:String
}
# VolumeError captures an error encountered during a volume operation.
type io_k8s_api_storage_v1beta1_VolumeErrorResult {
  # String detailing the error encountered during Attach or Detach operation. This string may be logged, so it should not contain sensitive information.
  message:String
  # Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
  time:String
}
# VolumeNodeResources is a set of resource limits for scheduling of volumes.
input io_k8s_api_storage_v1beta1_VolumeNodeResourcesInput {
  # Maximum number of unique volumes managed by the CSI driver that can be used on a node. A volume that is both attached and mounted on a node is considered to be used once, not twice. The same rule applies for a unique volume that is shared among multiple pods on the same node. If this field is nil, then the supported number of volumes on this node is unbounded.
  count:Int
}
# VolumeNodeResources is a set of resource limits for scheduling of volumes.
type io_k8s_api_storage_v1beta1_VolumeNodeResourcesResult {
  # Maximum number of unique volumes managed by the CSI driver that can be used on a node. A volume that is both attached and mounted on a node is considered to be used once, not twice. The same rule applies for a unique volume that is shared among multiple pods on the same node. If this field is nil, then the supported number of volumes on this node is unbounded.
  count:Int
}
# CustomResourceColumnDefinition specifies a column for server side printing.
input io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceColumnDefinitionInput {
  # type is an OpenAPI type definition for this column. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for details.
  type:String
  # description is a human readable description of this column.
  description:String
  # format is an optional OpenAPI type definition for this column. The 'name' format is applied to the primary identifier column to assist in clients identifying column is the resource name. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for details.
  format:String
  # jsonPath is a simple JSON path (i.e. with array notation) which is evaluated against each custom resource to produce the value for this column.
  jsonPath:String
  # name is a human readable name for the column.
  name:String
  # priority is an integer defining the relative importance of this column compared to others. Lower numbers are considered higher priority. Columns that may be omitted in limited space scenarios should be given a priority greater than 0.
  priority:Int
}
# CustomResourceColumnDefinition specifies a column for server side printing.
type io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceColumnDefinitionResult {
  # description is a human readable description of this column.
  description:String
  # format is an optional OpenAPI type definition for this column. The 'name' format is applied to the primary identifier column to assist in clients identifying column is the resource name. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for details.
  format:String
  # jsonPath is a simple JSON path (i.e. with array notation) which is evaluated against each custom resource to produce the value for this column.
  jsonPath:String
  # name is a human readable name for the column.
  name:String
  # priority is an integer defining the relative importance of this column compared to others. Lower numbers are considered higher priority. Columns that may be omitted in limited space scenarios should be given a priority greater than 0.
  priority:Int
  # type is an OpenAPI type definition for this column. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for details.
  type:String
}
# CustomResourceConversion describes how to convert different versions of a CR.
input io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceConversionInput {
  # strategy specifies how custom resources are converted between versions. Allowed values are: - `None`: The converter only change the apiVersion and would not touch any other field in the custom resource. - `Webhook`: API Server will call to an external webhook to do the conversion. Additional information
  #   is needed for this option. This requires spec.preserveUnknownFields to be false, and spec.conversion.webhook to be set.
  strategy:String
  # WebhookConversion describes how to call a conversion webhook
  webhook:io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_WebhookConversionInput
}
# CustomResourceConversion describes how to convert different versions of a CR.
type io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceConversionResult {
  # strategy specifies how custom resources are converted between versions. Allowed values are: - `None`: The converter only change the apiVersion and would not touch any other field in the custom resource. - `Webhook`: API Server will call to an external webhook to do the conversion. Additional information
  #   is needed for this option. This requires spec.preserveUnknownFields to be false, and spec.conversion.webhook to be set.
  strategy:String
  # WebhookConversion describes how to call a conversion webhook
  webhook:io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_WebhookConversionResult
}
# CustomResourceDefinitionCondition contains details for the current condition of this pod.
input io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceDefinitionConditionInput {
  # type is the type of the condition. Types include Established, NamesAccepted and Terminating.
  type:String
  # Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
  lastTransitionTime:String
  # message is a human-readable message indicating details about last transition.
  message:String
  # reason is a unique, one-word, CamelCase reason for the condition's last transition.
  reason:String
  # status is the status of the condition. Can be True, False, Unknown.
  status:String
}
# CustomResourceDefinitionCondition contains details for the current condition of this pod.
type io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceDefinitionConditionResult {
  # Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
  lastTransitionTime:String
  # message is a human-readable message indicating details about last transition.
  message:String
  # reason is a unique, one-word, CamelCase reason for the condition's last transition.
  reason:String
  # status is the status of the condition. Can be True, False, Unknown.
  status:String
  # type is the type of the condition. Types include Established, NamesAccepted and Terminating.
  type:String
}
# CustomResourceDefinition represents a resource that should be exposed on the API server.  Its name MUST be in the format <.spec.name>.<.spec.group>.
input io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceDefinitionInput {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  # CustomResourceDefinitionSpec describes how a user wants their resource to appear
  spec:io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceDefinitionSpecInput
  # CustomResourceDefinitionStatus indicates the state of the CustomResourceDefinition
  status:io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceDefinitionStatusInput
}
# CustomResourceDefinitionList is a list of CustomResourceDefinition objects.
type io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceDefinitionListResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # items list individual CustomResourceDefinition objects
  items:[io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceDefinitionResult]
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
# CustomResourceDefinitionNames indicates the names to serve this CustomResourceDefinition
input io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceDefinitionNamesInput {
  # categories is a list of grouped resources this custom resource belongs to (e.g. 'all'). This is published in API discovery documents, and used by clients to support invocations like `kubectl get all`.
  categories:[String]
  # kind is the serialized kind of the resource. It is normally CamelCase and singular. Custom resource instances will use this value as the `kind` attribute in API calls.
  kind:String
  # listKind is the serialized kind of the list for this resource. Defaults to "`kind`List".
  listKind:String
  # plural is the plural name of the resource to serve. The custom resources are served under `/apis/<group>/<version>/.../<plural>`. Must match the name of the CustomResourceDefinition (in the form `<names.plural>.<group>`). Must be all lowercase.
  plural:String
  # shortNames are short names for the resource, exposed in API discovery documents, and used by clients to support invocations like `kubectl get <shortname>`. It must be all lowercase.
  shortNames:[String]
  # singular is the singular name of the resource. It must be all lowercase. Defaults to lowercased `kind`.
  singular:String
}
# CustomResourceDefinitionNames indicates the names to serve this CustomResourceDefinition
type io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceDefinitionNamesResult {
  # categories is a list of grouped resources this custom resource belongs to (e.g. 'all'). This is published in API discovery documents, and used by clients to support invocations like `kubectl get all`.
  categories:[String]
  # kind is the serialized kind of the resource. It is normally CamelCase and singular. Custom resource instances will use this value as the `kind` attribute in API calls.
  kind:String
  # listKind is the serialized kind of the list for this resource. Defaults to "`kind`List".
  listKind:String
  # plural is the plural name of the resource to serve. The custom resources are served under `/apis/<group>/<version>/.../<plural>`. Must match the name of the CustomResourceDefinition (in the form `<names.plural>.<group>`). Must be all lowercase.
  plural:String
  # shortNames are short names for the resource, exposed in API discovery documents, and used by clients to support invocations like `kubectl get <shortname>`. It must be all lowercase.
  shortNames:[String]
  # singular is the singular name of the resource. It must be all lowercase. Defaults to lowercased `kind`.
  singular:String
}
# CustomResourceDefinition represents a resource that should be exposed on the API server.  Its name MUST be in the format <.spec.name>.<.spec.group>.
type io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceDefinitionResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  # CustomResourceDefinitionSpec describes how a user wants their resource to appear
  spec:io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceDefinitionSpecResult
  # CustomResourceDefinitionStatus indicates the state of the CustomResourceDefinition
  status:io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceDefinitionStatusResult
}
# CustomResourceDefinitionSpec describes how a user wants their resource to appear
input io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceDefinitionSpecInput {
  # CustomResourceConversion describes how to convert different versions of a CR.
  conversion:io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceConversionInput
  # group is the API group of the defined custom resource. The custom resources are served under `/apis/<group>/...`. Must match the name of the CustomResourceDefinition (in the form `<names.plural>.<group>`).
  group:String
  # CustomResourceDefinitionNames indicates the names to serve this CustomResourceDefinition
  names:io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceDefinitionNamesInput
  # preserveUnknownFields indicates that object fields which are not specified in the OpenAPI schema should be preserved when persisting to storage. apiVersion, kind, metadata and known fields inside metadata are always preserved. This field is deprecated in favor of setting `x-preserve-unknown-fields` to true in `spec.versions[*].schema.openAPIV3Schema`. See https://kubernetes.io/docs/tasks/access-kubernetes-api/custom-resources/custom-resource-definitions/#pruning-versus-preserving-unknown-fields for details.
  preserveUnknownFields:Boolean
  # scope indicates whether the defined custom resource is cluster- or namespace-scoped. Allowed values are `Cluster` and `Namespaced`.
  scope:String
  # versions is the list of all API versions of the defined custom resource. Version names are used to compute the order in which served versions are listed in API discovery. If the version string is "kube-like", it will sort above non "kube-like" version strings, which are ordered lexicographically. "Kube-like" versions start with a "v", then are followed by a number (the major version), then optionally the string "alpha" or "beta" and another number (the minor version). These are sorted first by GA > beta > alpha (where GA is a version with no suffix such as beta or alpha), and then by comparing major version, then minor version. An example sorted list of versions: v10, v2, v1, v11beta2, v10beta3, v3beta1, v12alpha1, v11alpha2, foo1, foo10.
  versions:[io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceDefinitionVersionInput]
}
# CustomResourceDefinitionSpec describes how a user wants their resource to appear
type io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceDefinitionSpecResult {
  # CustomResourceConversion describes how to convert different versions of a CR.
  conversion:io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceConversionResult
  # group is the API group of the defined custom resource. The custom resources are served under `/apis/<group>/...`. Must match the name of the CustomResourceDefinition (in the form `<names.plural>.<group>`).
  group:String
  # CustomResourceDefinitionNames indicates the names to serve this CustomResourceDefinition
  names:io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceDefinitionNamesResult
  # preserveUnknownFields indicates that object fields which are not specified in the OpenAPI schema should be preserved when persisting to storage. apiVersion, kind, metadata and known fields inside metadata are always preserved. This field is deprecated in favor of setting `x-preserve-unknown-fields` to true in `spec.versions[*].schema.openAPIV3Schema`. See https://kubernetes.io/docs/tasks/access-kubernetes-api/custom-resources/custom-resource-definitions/#pruning-versus-preserving-unknown-fields for details.
  preserveUnknownFields:Boolean
  # scope indicates whether the defined custom resource is cluster- or namespace-scoped. Allowed values are `Cluster` and `Namespaced`.
  scope:String
  # versions is the list of all API versions of the defined custom resource. Version names are used to compute the order in which served versions are listed in API discovery. If the version string is "kube-like", it will sort above non "kube-like" version strings, which are ordered lexicographically. "Kube-like" versions start with a "v", then are followed by a number (the major version), then optionally the string "alpha" or "beta" and another number (the minor version). These are sorted first by GA > beta > alpha (where GA is a version with no suffix such as beta or alpha), and then by comparing major version, then minor version. An example sorted list of versions: v10, v2, v1, v11beta2, v10beta3, v3beta1, v12alpha1, v11alpha2, foo1, foo10.
  versions:[io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceDefinitionVersionResult]
}
# CustomResourceDefinitionStatus indicates the state of the CustomResourceDefinition
input io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceDefinitionStatusInput {
  # CustomResourceDefinitionNames indicates the names to serve this CustomResourceDefinition
  acceptedNames:io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceDefinitionNamesInput
  # conditions indicate state for particular aspects of a CustomResourceDefinition
  conditions:[io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceDefinitionConditionInput]
  # storedVersions lists all versions of CustomResources that were ever persisted. Tracking these versions allows a migration path for stored versions in etcd. The field is mutable so a migration controller can finish a migration to another version (ensuring no old objects are left in storage), and then remove the rest of the versions from this list. Versions may not be removed from `spec.versions` while they exist in this list.
  storedVersions:[String]
}
# CustomResourceDefinitionStatus indicates the state of the CustomResourceDefinition
type io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceDefinitionStatusResult {
  # CustomResourceDefinitionNames indicates the names to serve this CustomResourceDefinition
  acceptedNames:io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceDefinitionNamesResult
  # conditions indicate state for particular aspects of a CustomResourceDefinition
  conditions:[io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceDefinitionConditionResult]
  # storedVersions lists all versions of CustomResources that were ever persisted. Tracking these versions allows a migration path for stored versions in etcd. The field is mutable so a migration controller can finish a migration to another version (ensuring no old objects are left in storage), and then remove the rest of the versions from this list. Versions may not be removed from `spec.versions` while they exist in this list.
  storedVersions:[String]
}
# CustomResourceDefinitionVersion describes a version for CRD.
input io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceDefinitionVersionInput {
  # additionalPrinterColumns specifies additional columns returned in Table output. See https://kubernetes.io/docs/reference/using-api/api-concepts/#receiving-resources-as-tables for details. If no columns are specified, a single column displaying the age of the custom resource is used.
  additionalPrinterColumns:[io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceColumnDefinitionInput]
  # name is the version name, e.g. “v1”, “v2beta1”, etc. The custom resources are served under this version at `/apis/<group>/<version>/...` if `served` is true.
  name:String
  # CustomResourceValidation is a list of validation methods for CustomResources.
  schema:io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceValidationInput
  # served is a flag enabling/disabling this version from being served via REST APIs
  served:Boolean
  # storage indicates this version should be used when persisting custom resources to storage. There must be exactly one version with storage=true.
  storage:Boolean
  # CustomResourceSubresources defines the status and scale subresources for CustomResources.
  subresources:io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceSubresourcesInput
}
# CustomResourceDefinitionVersion describes a version for CRD.
type io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceDefinitionVersionResult {
  # additionalPrinterColumns specifies additional columns returned in Table output. See https://kubernetes.io/docs/reference/using-api/api-concepts/#receiving-resources-as-tables for details. If no columns are specified, a single column displaying the age of the custom resource is used.
  additionalPrinterColumns:[io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceColumnDefinitionResult]
  # name is the version name, e.g. “v1”, “v2beta1”, etc. The custom resources are served under this version at `/apis/<group>/<version>/...` if `served` is true.
  name:String
  # CustomResourceValidation is a list of validation methods for CustomResources.
  schema:io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceValidationResult
  # served is a flag enabling/disabling this version from being served via REST APIs
  served:Boolean
  # storage indicates this version should be used when persisting custom resources to storage. There must be exactly one version with storage=true.
  storage:Boolean
  # CustomResourceSubresources defines the status and scale subresources for CustomResources.
  subresources:io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceSubresourcesResult
}
# CustomResourceSubresourceScale defines how to serve the scale subresource for CustomResources.
input io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceSubresourceScaleInput {
  # labelSelectorPath defines the JSON path inside of a custom resource that corresponds to Scale `status.selector`. Only JSON paths without the array notation are allowed. Must be a JSON Path under `.status` or `.spec`. Must be set to work with HorizontalPodAutoscaler. The field pointed by this JSON path must be a string field (not a complex selector struct) which contains a serialized label selector in string form. More info: https://kubernetes.io/docs/tasks/access-kubernetes-api/custom-resources/custom-resource-definitions#scale-subresource If there is no value under the given path in the custom resource, the `status.selector` value in the `/scale` subresource will default to the empty string.
  labelSelectorPath:String
  # specReplicasPath defines the JSON path inside of a custom resource that corresponds to Scale `spec.replicas`. Only JSON paths without the array notation are allowed. Must be a JSON Path under `.spec`. If there is no value under the given path in the custom resource, the `/scale` subresource will return an error on GET.
  specReplicasPath:String
  # statusReplicasPath defines the JSON path inside of a custom resource that corresponds to Scale `status.replicas`. Only JSON paths without the array notation are allowed. Must be a JSON Path under `.status`. If there is no value under the given path in the custom resource, the `status.replicas` value in the `/scale` subresource will default to 0.
  statusReplicasPath:String
}
# CustomResourceSubresourceScale defines how to serve the scale subresource for CustomResources.
type io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceSubresourceScaleResult {
  # labelSelectorPath defines the JSON path inside of a custom resource that corresponds to Scale `status.selector`. Only JSON paths without the array notation are allowed. Must be a JSON Path under `.status` or `.spec`. Must be set to work with HorizontalPodAutoscaler. The field pointed by this JSON path must be a string field (not a complex selector struct) which contains a serialized label selector in string form. More info: https://kubernetes.io/docs/tasks/access-kubernetes-api/custom-resources/custom-resource-definitions#scale-subresource If there is no value under the given path in the custom resource, the `status.selector` value in the `/scale` subresource will default to the empty string.
  labelSelectorPath:String
  # specReplicasPath defines the JSON path inside of a custom resource that corresponds to Scale `spec.replicas`. Only JSON paths without the array notation are allowed. Must be a JSON Path under `.spec`. If there is no value under the given path in the custom resource, the `/scale` subresource will return an error on GET.
  specReplicasPath:String
  # statusReplicasPath defines the JSON path inside of a custom resource that corresponds to Scale `status.replicas`. Only JSON paths without the array notation are allowed. Must be a JSON Path under `.status`. If there is no value under the given path in the custom resource, the `status.replicas` value in the `/scale` subresource will default to 0.
  statusReplicasPath:String
}
# CustomResourceSubresources defines the status and scale subresources for CustomResources.
input io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceSubresourcesInput {
  # CustomResourceSubresourceScale defines how to serve the scale subresource for CustomResources.
  scale:io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceSubresourceScaleInput
}
# CustomResourceSubresources defines the status and scale subresources for CustomResources.
type io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceSubresourcesResult {
  # CustomResourceSubresourceScale defines how to serve the scale subresource for CustomResources.
  scale:io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceSubresourceScaleResult
}
# CustomResourceValidation is a list of validation methods for CustomResources.
input io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceValidationInput {
  # JSONSchemaProps is a JSON-Schema following Specification Draft 4 (http://json-schema.org/).
  openAPIV3Schema:io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_JSONSchemaPropsInput
}
# CustomResourceValidation is a list of validation methods for CustomResources.
type io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_CustomResourceValidationResult {
  # JSONSchemaProps is a JSON-Schema following Specification Draft 4 (http://json-schema.org/).
  openAPIV3Schema:io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_JSONSchemaPropsResult
}
# ExternalDocumentation allows referencing an external resource for extended documentation.
input io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_ExternalDocumentationInput {
  description:String
  url:String
}
# ExternalDocumentation allows referencing an external resource for extended documentation.
type io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_ExternalDocumentationResult {
  description:String
  url:String
}
# JSONSchemaProps is a JSON-Schema following Specification Draft 4 (http://json-schema.org/).
input io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_JSONSchemaPropsInput {
  # x-kubernetes-preserve-unknown-fields stops the API server decoding step from pruning fields which are not specified in the validation schema. This affects fields recursively, but switches back to normal pruning behaviour if nested properties or additionalProperties are specified in the schema. This can either be true or undefined. False is forbidden.
  x_kubernetes_preserve_unknown_fields:Boolean
  id:String
  maxItems:Int
  minItems:Int
  allOf:[io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_JSONSchemaPropsInput]
  anyOf:[io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_JSONSchemaPropsInput]
  description:String
  multipleOf:Float
  # JSONSchemaProps is a JSON-Schema following Specification Draft 4 (http://json-schema.org/).
  not:io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_JSONSchemaPropsInput
  required:[String]
  exclusiveMinimum:Boolean
  maximum:Float
  type:String
  minLength:Int
  # x-kubernetes-int-or-string specifies that this value is either an integer or a string. If this is true, an empty type is allowed and type as child of anyOf is permitted if following one of the following patterns:
  # 1) anyOf:
  #    - type: integer
  #    - type: string
  # 2) allOf:
  #    - anyOf:
  #      - type: integer
  #      - type: string
  #    - ... zero or more
  x_kubernetes_int_or_string:Boolean
  oneOf:[io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_JSONSchemaPropsInput]
  title:String
  # x-kubernetes-list-type annotates an array to further describe its topology. This extension must only be used on lists and may have 3 possible values:
  # 1) `atomic`: the list is treated as a single entity, like a scalar.
  #      Atomic lists will be entirely replaced when updated. This extension
  #      may be used on any type of list (struct, scalar, ...).
  # 2) `set`:
  #      Sets are lists that must not have multiple items with the same value. Each
  #      value must be a scalar, an object with x-kubernetes-map-type `atomic` or an
  #      array with x-kubernetes-list-type `atomic`.
  # 3) `map`:
  #      These lists are like maps in that their elements have a non-index key
  #      used to identify them. Order is preserved upon merge. The map tag
  #      must only be used on a list with elements of type object.
  # Defaults to atomic for arrays.
  x_kubernetes_list_type:String
  exclusiveMaximum:Boolean
  maxLength:Int
  nullable:Boolean
  # ExternalDocumentation allows referencing an external resource for extended documentation.
  externalDocs:io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_ExternalDocumentationInput
  # format is an OpenAPI v3 format string. Unknown formats are ignored. The following formats are validated:
  # - bsonobjectid: a bson object ID, i.e. a 24 characters hex string - uri: an URI as parsed by Golang net/url.ParseRequestURI - email: an email address as parsed by Golang net/mail.ParseAddress - hostname: a valid representation for an Internet host name, as defined by RFC 1034, section 3.1 [RFC1034]. - ipv4: an IPv4 IP as parsed by Golang net.ParseIP - ipv6: an IPv6 IP as parsed by Golang net.ParseIP - cidr: a CIDR as parsed by Golang net.ParseCIDR - mac: a MAC address as parsed by Golang net.ParseMAC - uuid: an UUID that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?[0-9a-f]{4}-?[0-9a-f]{4}-?[0-9a-f]{12}$ - uuid3: an UUID3 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?3[0-9a-f]{3}-?[0-9a-f]{4}-?[0-9a-f]{12}$ - uuid4: an UUID4 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?4[0-9a-f]{3}-?[89ab][0-9a-f]{3}-?[0-9a-f]{12}$ - uuid5: an UUID5 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?5[0-9a-f]{3}-?[89ab][0-9a-f]{3}-?[0-9a-f]{12}$ - isbn: an ISBN10 or ISBN13 number string like "0321751043" or "978-0321751041" - isbn10: an ISBN10 number string like "0321751043" - isbn13: an ISBN13 number string like "978-0321751041" - creditcard: a credit card number defined by the regex ^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\d{3})\d{11})$ with any non digit characters mixed in - ssn: a U.S. social security number following the regex ^\d{3}[- ]?\d{2}[- ]?\d{4}$ - hexcolor: an hexadecimal color code like "#FFFFFF: following the regex ^#?([0-9a-fA-F]{3}|[0-9a-fA-F]{6})$ - rgbcolor: an RGB color code like rgb like "rgb(255,255,2559" - byte: base64 encoded binary data - password: any kind of string - date: a date string like "2006-01-02" as defined by full-date in RFC3339 - duration: a duration string like "22 ns" as parsed by Golang time.ParseDuration or compatible with Scala duration format - datetime: a date time string like "2014-12-15T19:30:20.000Z" as defined by date-time in RFC3339.
  format:String
  maxProperties:Int
  # x-kubernetes-list-map-keys annotates an array with the x-kubernetes-list-type `map` by specifying the keys used as the index of the map.
  # This tag MUST only be used on lists that have the "x-kubernetes-list-type" extension set to "map". Also, the values specified for this attribute must be a scalar typed field of the child structure (no nesting is supported).
  x_kubernetes_list_map_keys:[String]
  # x-kubernetes-map-type annotates an object to further describe its topology. This extension must only be used when type is object and may have 2 possible values:
  # 1) `granular`:
  #      These maps are actual maps (key-value pairs) and each fields are independent
  #      from each other (they can each be manipulated by separate actors). This is
  #      the default behaviour for all maps.
  # 2) `atomic`: the list is treated as a single entity, like a scalar.
  #      Atomic maps will be entirely replaced when updated.
  x_kubernetes_map_type:String
  minProperties:Int
  minimum:Float
  uniqueItems:Boolean
  _ref:String
  _schema:String
  pattern:String
  # x-kubernetes-embedded-resource defines that the value is an embedded Kubernetes runtime.Object, with TypeMeta and ObjectMeta. The type must be object. It is allowed to further restrict the embedded object. kind, apiVersion and metadata are validated automatically. x-kubernetes-preserve-unknown-fields is allowed to be true, but does not have to be if the object is fully specified (up to kind, apiVersion, metadata).
  x_kubernetes_embedded_resource:Boolean
}
# JSONSchemaProps is a JSON-Schema following Specification Draft 4 (http://json-schema.org/).
type io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_JSONSchemaPropsResult {
  _ref:String
  _schema:String
  allOf:[io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_JSONSchemaPropsResult]
  anyOf:[io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_JSONSchemaPropsResult]
  description:String
  exclusiveMaximum:Boolean
  exclusiveMinimum:Boolean
  # ExternalDocumentation allows referencing an external resource for extended documentation.
  externalDocs:io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_ExternalDocumentationResult
  # format is an OpenAPI v3 format string. Unknown formats are ignored. The following formats are validated:
  # - bsonobjectid: a bson object ID, i.e. a 24 characters hex string - uri: an URI as parsed by Golang net/url.ParseRequestURI - email: an email address as parsed by Golang net/mail.ParseAddress - hostname: a valid representation for an Internet host name, as defined by RFC 1034, section 3.1 [RFC1034]. - ipv4: an IPv4 IP as parsed by Golang net.ParseIP - ipv6: an IPv6 IP as parsed by Golang net.ParseIP - cidr: a CIDR as parsed by Golang net.ParseCIDR - mac: a MAC address as parsed by Golang net.ParseMAC - uuid: an UUID that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?[0-9a-f]{4}-?[0-9a-f]{4}-?[0-9a-f]{12}$ - uuid3: an UUID3 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?3[0-9a-f]{3}-?[0-9a-f]{4}-?[0-9a-f]{12}$ - uuid4: an UUID4 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?4[0-9a-f]{3}-?[89ab][0-9a-f]{3}-?[0-9a-f]{12}$ - uuid5: an UUID5 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?5[0-9a-f]{3}-?[89ab][0-9a-f]{3}-?[0-9a-f]{12}$ - isbn: an ISBN10 or ISBN13 number string like "0321751043" or "978-0321751041" - isbn10: an ISBN10 number string like "0321751043" - isbn13: an ISBN13 number string like "978-0321751041" - creditcard: a credit card number defined by the regex ^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\d{3})\d{11})$ with any non digit characters mixed in - ssn: a U.S. social security number following the regex ^\d{3}[- ]?\d{2}[- ]?\d{4}$ - hexcolor: an hexadecimal color code like "#FFFFFF: following the regex ^#?([0-9a-fA-F]{3}|[0-9a-fA-F]{6})$ - rgbcolor: an RGB color code like rgb like "rgb(255,255,2559" - byte: base64 encoded binary data - password: any kind of string - date: a date string like "2006-01-02" as defined by full-date in RFC3339 - duration: a duration string like "22 ns" as parsed by Golang time.ParseDuration or compatible with Scala duration format - datetime: a date time string like "2014-12-15T19:30:20.000Z" as defined by date-time in RFC3339.
  format:String
  id:String
  maxItems:Int
  maxLength:Int
  maxProperties:Int
  maximum:Float
  minItems:Int
  minLength:Int
  minProperties:Int
  minimum:Float
  multipleOf:Float
  # JSONSchemaProps is a JSON-Schema following Specification Draft 4 (http://json-schema.org/).
  not:io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_JSONSchemaPropsResult
  nullable:Boolean
  oneOf:[io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_JSONSchemaPropsResult]
  pattern:String
  required:[String]
  title:String
  type:String
  uniqueItems:Boolean
  # x-kubernetes-embedded-resource defines that the value is an embedded Kubernetes runtime.Object, with TypeMeta and ObjectMeta. The type must be object. It is allowed to further restrict the embedded object. kind, apiVersion and metadata are validated automatically. x-kubernetes-preserve-unknown-fields is allowed to be true, but does not have to be if the object is fully specified (up to kind, apiVersion, metadata).
  x_kubernetes_embedded_resource:Boolean
  # x-kubernetes-int-or-string specifies that this value is either an integer or a string. If this is true, an empty type is allowed and type as child of anyOf is permitted if following one of the following patterns:
  # 1) anyOf:
  #    - type: integer
  #    - type: string
  # 2) allOf:
  #    - anyOf:
  #      - type: integer
  #      - type: string
  #    - ... zero or more
  x_kubernetes_int_or_string:Boolean
  # x-kubernetes-list-map-keys annotates an array with the x-kubernetes-list-type `map` by specifying the keys used as the index of the map.
  # This tag MUST only be used on lists that have the "x-kubernetes-list-type" extension set to "map". Also, the values specified for this attribute must be a scalar typed field of the child structure (no nesting is supported).
  x_kubernetes_list_map_keys:[String]
  # x-kubernetes-list-type annotates an array to further describe its topology. This extension must only be used on lists and may have 3 possible values:
  # 1) `atomic`: the list is treated as a single entity, like a scalar.
  #      Atomic lists will be entirely replaced when updated. This extension
  #      may be used on any type of list (struct, scalar, ...).
  # 2) `set`:
  #      Sets are lists that must not have multiple items with the same value. Each
  #      value must be a scalar, an object with x-kubernetes-map-type `atomic` or an
  #      array with x-kubernetes-list-type `atomic`.
  # 3) `map`:
  #      These lists are like maps in that their elements have a non-index key
  #      used to identify them. Order is preserved upon merge. The map tag
  #      must only be used on a list with elements of type object.
  # Defaults to atomic for arrays.
  x_kubernetes_list_type:String
  # x-kubernetes-map-type annotates an object to further describe its topology. This extension must only be used when type is object and may have 2 possible values:
  # 1) `granular`:
  #      These maps are actual maps (key-value pairs) and each fields are independent
  #      from each other (they can each be manipulated by separate actors). This is
  #      the default behaviour for all maps.
  # 2) `atomic`: the list is treated as a single entity, like a scalar.
  #      Atomic maps will be entirely replaced when updated.
  x_kubernetes_map_type:String
  # x-kubernetes-preserve-unknown-fields stops the API server decoding step from pruning fields which are not specified in the validation schema. This affects fields recursively, but switches back to normal pruning behaviour if nested properties or additionalProperties are specified in the schema. This can either be true or undefined. False is forbidden.
  x_kubernetes_preserve_unknown_fields:Boolean
}
# ServiceReference holds a reference to Service.legacy.k8s.io
input io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_ServiceReferenceInput {
  # name is the name of the service. Required
  name:String
  # namespace is the namespace of the service. Required
  namespace:String
  # path is an optional URL path at which the webhook will be contacted.
  path:String
  # port is an optional service port at which the webhook will be contacted. `port` should be a valid port number (1-65535, inclusive). Defaults to 443 for backward compatibility.
  port:Int
}
# ServiceReference holds a reference to Service.legacy.k8s.io
type io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_ServiceReferenceResult {
  # name is the name of the service. Required
  name:String
  # namespace is the namespace of the service. Required
  namespace:String
  # path is an optional URL path at which the webhook will be contacted.
  path:String
  # port is an optional service port at which the webhook will be contacted. `port` should be a valid port number (1-65535, inclusive). Defaults to 443 for backward compatibility.
  port:Int
}
# WebhookClientConfig contains the information to make a TLS connection with the webhook.
input io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_WebhookClientConfigInput {
  # url gives the location of the webhook, in standard URL form (`scheme://host:port/path`). Exactly one of `url` or `service` must be specified.
  # The `host` should not refer to a service running in the cluster; use the `service` field instead. The host might be resolved via external DNS in some apiservers (e.g., `kube-apiserver` cannot resolve in-cluster DNS as that would be a layering violation). `host` may also be an IP address.
  # Please note that using `localhost` or `127.0.0.1` as a `host` is risky unless you take great care to run this webhook on all hosts which run an apiserver which might need to make calls to this webhook. Such installs are likely to be non-portable, i.e., not easy to turn up in a new cluster.
  # The scheme must be "https"; the URL must begin with "https://".
  # A path is optional, and if present may be any string permissible in a URL. You may use the path to pass an arbitrary string to the webhook, for example, a cluster identifier.
  # Attempting to use a user or basic auth e.g. "user:password@" is not allowed. Fragments ("#...") and query parameters ("?...") are not allowed, either.
  url:String
  # caBundle is a PEM encoded CA bundle which will be used to validate the webhook's server certificate. If unspecified, system trust roots on the apiserver are used.
  caBundle:String
  # ServiceReference holds a reference to Service.legacy.k8s.io
  service:io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_ServiceReferenceInput
}
# WebhookClientConfig contains the information to make a TLS connection with the webhook.
type io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_WebhookClientConfigResult {
  # caBundle is a PEM encoded CA bundle which will be used to validate the webhook's server certificate. If unspecified, system trust roots on the apiserver are used.
  caBundle:String
  # ServiceReference holds a reference to Service.legacy.k8s.io
  service:io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_ServiceReferenceResult
  # url gives the location of the webhook, in standard URL form (`scheme://host:port/path`). Exactly one of `url` or `service` must be specified.
  # The `host` should not refer to a service running in the cluster; use the `service` field instead. The host might be resolved via external DNS in some apiservers (e.g., `kube-apiserver` cannot resolve in-cluster DNS as that would be a layering violation). `host` may also be an IP address.
  # Please note that using `localhost` or `127.0.0.1` as a `host` is risky unless you take great care to run this webhook on all hosts which run an apiserver which might need to make calls to this webhook. Such installs are likely to be non-portable, i.e., not easy to turn up in a new cluster.
  # The scheme must be "https"; the URL must begin with "https://".
  # A path is optional, and if present may be any string permissible in a URL. You may use the path to pass an arbitrary string to the webhook, for example, a cluster identifier.
  # Attempting to use a user or basic auth e.g. "user:password@" is not allowed. Fragments ("#...") and query parameters ("?...") are not allowed, either.
  url:String
}
# WebhookConversion describes how to call a conversion webhook
input io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_WebhookConversionInput {
  # conversionReviewVersions is an ordered list of preferred `ConversionReview` versions the Webhook expects. The API server will use the first version in the list which it supports. If none of the versions specified in this list are supported by API server, conversion will fail for the custom resource. If a persisted Webhook configuration specifies allowed versions and does not include any versions known to the API Server, calls to the webhook will fail.
  conversionReviewVersions:[String]
  # WebhookClientConfig contains the information to make a TLS connection with the webhook.
  clientConfig:io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_WebhookClientConfigInput
}
# WebhookConversion describes how to call a conversion webhook
type io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_WebhookConversionResult {
  # WebhookClientConfig contains the information to make a TLS connection with the webhook.
  clientConfig:io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1_WebhookClientConfigResult
  # conversionReviewVersions is an ordered list of preferred `ConversionReview` versions the Webhook expects. The API server will use the first version in the list which it supports. If none of the versions specified in this list are supported by API server, conversion will fail for the custom resource. If a persisted Webhook configuration specifies allowed versions and does not include any versions known to the API Server, calls to the webhook will fail.
  conversionReviewVersions:[String]
}
# CustomResourceColumnDefinition specifies a column for server side printing.
input io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_CustomResourceColumnDefinitionInput {
  # type is an OpenAPI type definition for this column. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for details.
  type:String
  # JSONPath is a simple JSON path (i.e. with array notation) which is evaluated against each custom resource to produce the value for this column.
  JSONPath:String
  # description is a human readable description of this column.
  description:String
  # format is an optional OpenAPI type definition for this column. The 'name' format is applied to the primary identifier column to assist in clients identifying column is the resource name. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for details.
  format:String
  # name is a human readable name for the column.
  name:String
  # priority is an integer defining the relative importance of this column compared to others. Lower numbers are considered higher priority. Columns that may be omitted in limited space scenarios should be given a priority greater than 0.
  priority:Int
}
# CustomResourceColumnDefinition specifies a column for server side printing.
type io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_CustomResourceColumnDefinitionResult {
  # JSONPath is a simple JSON path (i.e. with array notation) which is evaluated against each custom resource to produce the value for this column.
  JSONPath:String
  # description is a human readable description of this column.
  description:String
  # format is an optional OpenAPI type definition for this column. The 'name' format is applied to the primary identifier column to assist in clients identifying column is the resource name. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for details.
  format:String
  # name is a human readable name for the column.
  name:String
  # priority is an integer defining the relative importance of this column compared to others. Lower numbers are considered higher priority. Columns that may be omitted in limited space scenarios should be given a priority greater than 0.
  priority:Int
  # type is an OpenAPI type definition for this column. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for details.
  type:String
}
# CustomResourceConversion describes how to convert different versions of a CR.
input io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_CustomResourceConversionInput {
  # conversionReviewVersions is an ordered list of preferred `ConversionReview` versions the Webhook expects. The API server will use the first version in the list which it supports. If none of the versions specified in this list are supported by API server, conversion will fail for the custom resource. If a persisted Webhook configuration specifies allowed versions and does not include any versions known to the API Server, calls to the webhook will fail. Defaults to `["v1beta1"]`.
  conversionReviewVersions:[String]
  # strategy specifies how custom resources are converted between versions. Allowed values are: - `None`: The converter only change the apiVersion and would not touch any other field in the custom resource. - `Webhook`: API Server will call to an external webhook to do the conversion. Additional information
  #   is needed for this option. This requires spec.preserveUnknownFields to be false, and spec.conversion.webhookClientConfig to be set.
  strategy:String
  # WebhookClientConfig contains the information to make a TLS connection with the webhook.
  webhookClientConfig:io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_WebhookClientConfigInput
}
# CustomResourceConversion describes how to convert different versions of a CR.
type io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_CustomResourceConversionResult {
  # conversionReviewVersions is an ordered list of preferred `ConversionReview` versions the Webhook expects. The API server will use the first version in the list which it supports. If none of the versions specified in this list are supported by API server, conversion will fail for the custom resource. If a persisted Webhook configuration specifies allowed versions and does not include any versions known to the API Server, calls to the webhook will fail. Defaults to `["v1beta1"]`.
  conversionReviewVersions:[String]
  # strategy specifies how custom resources are converted between versions. Allowed values are: - `None`: The converter only change the apiVersion and would not touch any other field in the custom resource. - `Webhook`: API Server will call to an external webhook to do the conversion. Additional information
  #   is needed for this option. This requires spec.preserveUnknownFields to be false, and spec.conversion.webhookClientConfig to be set.
  strategy:String
  # WebhookClientConfig contains the information to make a TLS connection with the webhook.
  webhookClientConfig:io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_WebhookClientConfigResult
}
# CustomResourceDefinitionCondition contains details for the current condition of this pod.
input io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_CustomResourceDefinitionConditionInput {
  # reason is a unique, one-word, CamelCase reason for the condition's last transition.
  reason:String
  # status is the status of the condition. Can be True, False, Unknown.
  status:String
  # type is the type of the condition. Types include Established, NamesAccepted and Terminating.
  type:String
  # Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
  lastTransitionTime:String
  # message is a human-readable message indicating details about last transition.
  message:String
}
# CustomResourceDefinitionCondition contains details for the current condition of this pod.
type io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_CustomResourceDefinitionConditionResult {
  # Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
  lastTransitionTime:String
  # message is a human-readable message indicating details about last transition.
  message:String
  # reason is a unique, one-word, CamelCase reason for the condition's last transition.
  reason:String
  # status is the status of the condition. Can be True, False, Unknown.
  status:String
  # type is the type of the condition. Types include Established, NamesAccepted and Terminating.
  type:String
}
# CustomResourceDefinition represents a resource that should be exposed on the API server.  Its name MUST be in the format <.spec.name>.<.spec.group>. Deprecated in v1.16, planned for removal in v1.19. Use apiextensions.k8s.io/v1 CustomResourceDefinition instead.
input io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_CustomResourceDefinitionInput {
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  # CustomResourceDefinitionSpec describes how a user wants their resource to appear
  spec:io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_CustomResourceDefinitionSpecInput
  # CustomResourceDefinitionStatus indicates the state of the CustomResourceDefinition
  status:io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_CustomResourceDefinitionStatusInput
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
}
# CustomResourceDefinitionList is a list of CustomResourceDefinition objects.
type io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_CustomResourceDefinitionListResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # items list individual CustomResourceDefinition objects
  items:[io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_CustomResourceDefinitionResult]
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
# CustomResourceDefinitionNames indicates the names to serve this CustomResourceDefinition
input io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_CustomResourceDefinitionNamesInput {
  # singular is the singular name of the resource. It must be all lowercase. Defaults to lowercased `kind`.
  singular:String
  # categories is a list of grouped resources this custom resource belongs to (e.g. 'all'). This is published in API discovery documents, and used by clients to support invocations like `kubectl get all`.
  categories:[String]
  # kind is the serialized kind of the resource. It is normally CamelCase and singular. Custom resource instances will use this value as the `kind` attribute in API calls.
  kind:String
  # listKind is the serialized kind of the list for this resource. Defaults to "`kind`List".
  listKind:String
  # plural is the plural name of the resource to serve. The custom resources are served under `/apis/<group>/<version>/.../<plural>`. Must match the name of the CustomResourceDefinition (in the form `<names.plural>.<group>`). Must be all lowercase.
  plural:String
  # shortNames are short names for the resource, exposed in API discovery documents, and used by clients to support invocations like `kubectl get <shortname>`. It must be all lowercase.
  shortNames:[String]
}
# CustomResourceDefinitionNames indicates the names to serve this CustomResourceDefinition
type io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_CustomResourceDefinitionNamesResult {
  # categories is a list of grouped resources this custom resource belongs to (e.g. 'all'). This is published in API discovery documents, and used by clients to support invocations like `kubectl get all`.
  categories:[String]
  # kind is the serialized kind of the resource. It is normally CamelCase and singular. Custom resource instances will use this value as the `kind` attribute in API calls.
  kind:String
  # listKind is the serialized kind of the list for this resource. Defaults to "`kind`List".
  listKind:String
  # plural is the plural name of the resource to serve. The custom resources are served under `/apis/<group>/<version>/.../<plural>`. Must match the name of the CustomResourceDefinition (in the form `<names.plural>.<group>`). Must be all lowercase.
  plural:String
  # shortNames are short names for the resource, exposed in API discovery documents, and used by clients to support invocations like `kubectl get <shortname>`. It must be all lowercase.
  shortNames:[String]
  # singular is the singular name of the resource. It must be all lowercase. Defaults to lowercased `kind`.
  singular:String
}
# CustomResourceDefinition represents a resource that should be exposed on the API server.  Its name MUST be in the format <.spec.name>.<.spec.group>. Deprecated in v1.16, planned for removal in v1.19. Use apiextensions.k8s.io/v1 CustomResourceDefinition instead.
type io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_CustomResourceDefinitionResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  # CustomResourceDefinitionSpec describes how a user wants their resource to appear
  spec:io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_CustomResourceDefinitionSpecResult
  # CustomResourceDefinitionStatus indicates the state of the CustomResourceDefinition
  status:io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_CustomResourceDefinitionStatusResult
}
# CustomResourceDefinitionSpec describes how a user wants their resource to appear
input io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_CustomResourceDefinitionSpecInput {
  # group is the API group of the defined custom resource. The custom resources are served under `/apis/<group>/...`. Must match the name of the CustomResourceDefinition (in the form `<names.plural>.<group>`).
  group:String
  # scope indicates whether the defined custom resource is cluster- or namespace-scoped. Allowed values are `Cluster` and `Namespaced`. Default is `Namespaced`.
  scope:String
  # version is the API version of the defined custom resource. The custom resources are served under `/apis/<group>/<version>/...`. Must match the name of the first item in the `versions` list if `version` and `versions` are both specified. Optional if `versions` is specified. Deprecated: use `versions` instead.
  version:String
  # versions is the list of all API versions of the defined custom resource. Optional if `version` is specified. The name of the first item in the `versions` list must match the `version` field if `version` and `versions` are both specified. Version names are used to compute the order in which served versions are listed in API discovery. If the version string is "kube-like", it will sort above non "kube-like" version strings, which are ordered lexicographically. "Kube-like" versions start with a "v", then are followed by a number (the major version), then optionally the string "alpha" or "beta" and another number (the minor version). These are sorted first by GA > beta > alpha (where GA is a version with no suffix such as beta or alpha), and then by comparing major version, then minor version. An example sorted list of versions: v10, v2, v1, v11beta2, v10beta3, v3beta1, v12alpha1, v11alpha2, foo1, foo10.
  versions:[io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_CustomResourceDefinitionVersionInput]
  # additionalPrinterColumns specifies additional columns returned in Table output. See https://kubernetes.io/docs/reference/using-api/api-concepts/#receiving-resources-as-tables for details. If present, this field configures columns for all versions. Top-level and per-version columns are mutually exclusive. If no top-level or per-version columns are specified, a single column displaying the age of the custom resource is used.
  additionalPrinterColumns:[io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_CustomResourceColumnDefinitionInput]
  # CustomResourceConversion describes how to convert different versions of a CR.
  conversion:io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_CustomResourceConversionInput
  # CustomResourceDefinitionNames indicates the names to serve this CustomResourceDefinition
  names:io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_CustomResourceDefinitionNamesInput
  # preserveUnknownFields indicates that object fields which are not specified in the OpenAPI schema should be preserved when persisting to storage. apiVersion, kind, metadata and known fields inside metadata are always preserved. If false, schemas must be defined for all versions. Defaults to true in v1beta for backwards compatibility. Deprecated: will be required to be false in v1. Preservation of unknown fields can be specified in the validation schema using the `x-kubernetes-preserve-unknown-fields: true` extension. See https://kubernetes.io/docs/tasks/access-kubernetes-api/custom-resources/custom-resource-definitions/#pruning-versus-preserving-unknown-fields for details.
  preserveUnknownFields:Boolean
  # CustomResourceSubresources defines the status and scale subresources for CustomResources.
  subresources:io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_CustomResourceSubresourcesInput
  # CustomResourceValidation is a list of validation methods for CustomResources.
  validation:io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_CustomResourceValidationInput
}
# CustomResourceDefinitionSpec describes how a user wants their resource to appear
type io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_CustomResourceDefinitionSpecResult {
  # additionalPrinterColumns specifies additional columns returned in Table output. See https://kubernetes.io/docs/reference/using-api/api-concepts/#receiving-resources-as-tables for details. If present, this field configures columns for all versions. Top-level and per-version columns are mutually exclusive. If no top-level or per-version columns are specified, a single column displaying the age of the custom resource is used.
  additionalPrinterColumns:[io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_CustomResourceColumnDefinitionResult]
  # CustomResourceConversion describes how to convert different versions of a CR.
  conversion:io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_CustomResourceConversionResult
  # group is the API group of the defined custom resource. The custom resources are served under `/apis/<group>/...`. Must match the name of the CustomResourceDefinition (in the form `<names.plural>.<group>`).
  group:String
  # CustomResourceDefinitionNames indicates the names to serve this CustomResourceDefinition
  names:io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_CustomResourceDefinitionNamesResult
  # preserveUnknownFields indicates that object fields which are not specified in the OpenAPI schema should be preserved when persisting to storage. apiVersion, kind, metadata and known fields inside metadata are always preserved. If false, schemas must be defined for all versions. Defaults to true in v1beta for backwards compatibility. Deprecated: will be required to be false in v1. Preservation of unknown fields can be specified in the validation schema using the `x-kubernetes-preserve-unknown-fields: true` extension. See https://kubernetes.io/docs/tasks/access-kubernetes-api/custom-resources/custom-resource-definitions/#pruning-versus-preserving-unknown-fields for details.
  preserveUnknownFields:Boolean
  # scope indicates whether the defined custom resource is cluster- or namespace-scoped. Allowed values are `Cluster` and `Namespaced`. Default is `Namespaced`.
  scope:String
  # CustomResourceSubresources defines the status and scale subresources for CustomResources.
  subresources:io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_CustomResourceSubresourcesResult
  # CustomResourceValidation is a list of validation methods for CustomResources.
  validation:io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_CustomResourceValidationResult
  # version is the API version of the defined custom resource. The custom resources are served under `/apis/<group>/<version>/...`. Must match the name of the first item in the `versions` list if `version` and `versions` are both specified. Optional if `versions` is specified. Deprecated: use `versions` instead.
  version:String
  # versions is the list of all API versions of the defined custom resource. Optional if `version` is specified. The name of the first item in the `versions` list must match the `version` field if `version` and `versions` are both specified. Version names are used to compute the order in which served versions are listed in API discovery. If the version string is "kube-like", it will sort above non "kube-like" version strings, which are ordered lexicographically. "Kube-like" versions start with a "v", then are followed by a number (the major version), then optionally the string "alpha" or "beta" and another number (the minor version). These are sorted first by GA > beta > alpha (where GA is a version with no suffix such as beta or alpha), and then by comparing major version, then minor version. An example sorted list of versions: v10, v2, v1, v11beta2, v10beta3, v3beta1, v12alpha1, v11alpha2, foo1, foo10.
  versions:[io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_CustomResourceDefinitionVersionResult]
}
# CustomResourceDefinitionStatus indicates the state of the CustomResourceDefinition
input io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_CustomResourceDefinitionStatusInput {
  # CustomResourceDefinitionNames indicates the names to serve this CustomResourceDefinition
  acceptedNames:io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_CustomResourceDefinitionNamesInput
  # conditions indicate state for particular aspects of a CustomResourceDefinition
  conditions:[io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_CustomResourceDefinitionConditionInput]
  # storedVersions lists all versions of CustomResources that were ever persisted. Tracking these versions allows a migration path for stored versions in etcd. The field is mutable so a migration controller can finish a migration to another version (ensuring no old objects are left in storage), and then remove the rest of the versions from this list. Versions may not be removed from `spec.versions` while they exist in this list.
  storedVersions:[String]
}
# CustomResourceDefinitionStatus indicates the state of the CustomResourceDefinition
type io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_CustomResourceDefinitionStatusResult {
  # CustomResourceDefinitionNames indicates the names to serve this CustomResourceDefinition
  acceptedNames:io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_CustomResourceDefinitionNamesResult
  # conditions indicate state for particular aspects of a CustomResourceDefinition
  conditions:[io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_CustomResourceDefinitionConditionResult]
  # storedVersions lists all versions of CustomResources that were ever persisted. Tracking these versions allows a migration path for stored versions in etcd. The field is mutable so a migration controller can finish a migration to another version (ensuring no old objects are left in storage), and then remove the rest of the versions from this list. Versions may not be removed from `spec.versions` while they exist in this list.
  storedVersions:[String]
}
# CustomResourceDefinitionVersion describes a version for CRD.
input io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_CustomResourceDefinitionVersionInput {
  # served is a flag enabling/disabling this version from being served via REST APIs
  served:Boolean
  # storage indicates this version should be used when persisting custom resources to storage. There must be exactly one version with storage=true.
  storage:Boolean
  # CustomResourceSubresources defines the status and scale subresources for CustomResources.
  subresources:io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_CustomResourceSubresourcesInput
  # additionalPrinterColumns specifies additional columns returned in Table output. See https://kubernetes.io/docs/reference/using-api/api-concepts/#receiving-resources-as-tables for details. Top-level and per-version columns are mutually exclusive. Per-version columns must not all be set to identical values (top-level columns should be used instead). If no top-level or per-version columns are specified, a single column displaying the age of the custom resource is used.
  additionalPrinterColumns:[io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_CustomResourceColumnDefinitionInput]
  # name is the version name, e.g. “v1”, “v2beta1”, etc. The custom resources are served under this version at `/apis/<group>/<version>/...` if `served` is true.
  name:String
  # CustomResourceValidation is a list of validation methods for CustomResources.
  schema:io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_CustomResourceValidationInput
}
# CustomResourceDefinitionVersion describes a version for CRD.
type io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_CustomResourceDefinitionVersionResult {
  # additionalPrinterColumns specifies additional columns returned in Table output. See https://kubernetes.io/docs/reference/using-api/api-concepts/#receiving-resources-as-tables for details. Top-level and per-version columns are mutually exclusive. Per-version columns must not all be set to identical values (top-level columns should be used instead). If no top-level or per-version columns are specified, a single column displaying the age of the custom resource is used.
  additionalPrinterColumns:[io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_CustomResourceColumnDefinitionResult]
  # name is the version name, e.g. “v1”, “v2beta1”, etc. The custom resources are served under this version at `/apis/<group>/<version>/...` if `served` is true.
  name:String
  # CustomResourceValidation is a list of validation methods for CustomResources.
  schema:io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_CustomResourceValidationResult
  # served is a flag enabling/disabling this version from being served via REST APIs
  served:Boolean
  # storage indicates this version should be used when persisting custom resources to storage. There must be exactly one version with storage=true.
  storage:Boolean
  # CustomResourceSubresources defines the status and scale subresources for CustomResources.
  subresources:io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_CustomResourceSubresourcesResult
}
# CustomResourceSubresourceScale defines how to serve the scale subresource for CustomResources.
input io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_CustomResourceSubresourceScaleInput {
  # statusReplicasPath defines the JSON path inside of a custom resource that corresponds to Scale `status.replicas`. Only JSON paths without the array notation are allowed. Must be a JSON Path under `.status`. If there is no value under the given path in the custom resource, the `status.replicas` value in the `/scale` subresource will default to 0.
  statusReplicasPath:String
  # labelSelectorPath defines the JSON path inside of a custom resource that corresponds to Scale `status.selector`. Only JSON paths without the array notation are allowed. Must be a JSON Path under `.status` or `.spec`. Must be set to work with HorizontalPodAutoscaler. The field pointed by this JSON path must be a string field (not a complex selector struct) which contains a serialized label selector in string form. More info: https://kubernetes.io/docs/tasks/access-kubernetes-api/custom-resources/custom-resource-definitions#scale-subresource If there is no value under the given path in the custom resource, the `status.selector` value in the `/scale` subresource will default to the empty string.
  labelSelectorPath:String
  # specReplicasPath defines the JSON path inside of a custom resource that corresponds to Scale `spec.replicas`. Only JSON paths without the array notation are allowed. Must be a JSON Path under `.spec`. If there is no value under the given path in the custom resource, the `/scale` subresource will return an error on GET.
  specReplicasPath:String
}
# CustomResourceSubresourceScale defines how to serve the scale subresource for CustomResources.
type io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_CustomResourceSubresourceScaleResult {
  # labelSelectorPath defines the JSON path inside of a custom resource that corresponds to Scale `status.selector`. Only JSON paths without the array notation are allowed. Must be a JSON Path under `.status` or `.spec`. Must be set to work with HorizontalPodAutoscaler. The field pointed by this JSON path must be a string field (not a complex selector struct) which contains a serialized label selector in string form. More info: https://kubernetes.io/docs/tasks/access-kubernetes-api/custom-resources/custom-resource-definitions#scale-subresource If there is no value under the given path in the custom resource, the `status.selector` value in the `/scale` subresource will default to the empty string.
  labelSelectorPath:String
  # specReplicasPath defines the JSON path inside of a custom resource that corresponds to Scale `spec.replicas`. Only JSON paths without the array notation are allowed. Must be a JSON Path under `.spec`. If there is no value under the given path in the custom resource, the `/scale` subresource will return an error on GET.
  specReplicasPath:String
  # statusReplicasPath defines the JSON path inside of a custom resource that corresponds to Scale `status.replicas`. Only JSON paths without the array notation are allowed. Must be a JSON Path under `.status`. If there is no value under the given path in the custom resource, the `status.replicas` value in the `/scale` subresource will default to 0.
  statusReplicasPath:String
}
# CustomResourceSubresources defines the status and scale subresources for CustomResources.
input io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_CustomResourceSubresourcesInput {
  # CustomResourceSubresourceScale defines how to serve the scale subresource for CustomResources.
  scale:io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_CustomResourceSubresourceScaleInput
}
# CustomResourceSubresources defines the status and scale subresources for CustomResources.
type io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_CustomResourceSubresourcesResult {
  # CustomResourceSubresourceScale defines how to serve the scale subresource for CustomResources.
  scale:io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_CustomResourceSubresourceScaleResult
}
# CustomResourceValidation is a list of validation methods for CustomResources.
input io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_CustomResourceValidationInput {
  # JSONSchemaProps is a JSON-Schema following Specification Draft 4 (http://json-schema.org/).
  openAPIV3Schema:io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_JSONSchemaPropsInput
}
# CustomResourceValidation is a list of validation methods for CustomResources.
type io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_CustomResourceValidationResult {
  # JSONSchemaProps is a JSON-Schema following Specification Draft 4 (http://json-schema.org/).
  openAPIV3Schema:io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_JSONSchemaPropsResult
}
# ExternalDocumentation allows referencing an external resource for extended documentation.
input io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_ExternalDocumentationInput {
  description:String
  url:String
}
# ExternalDocumentation allows referencing an external resource for extended documentation.
type io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_ExternalDocumentationResult {
  description:String
  url:String
}
# JSONSchemaProps is a JSON-Schema following Specification Draft 4 (http://json-schema.org/).
input io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_JSONSchemaPropsInput {
  # x-kubernetes-list-map-keys annotates an array with the x-kubernetes-list-type `map` by specifying the keys used as the index of the map.
  # This tag MUST only be used on lists that have the "x-kubernetes-list-type" extension set to "map". Also, the values specified for this attribute must be a scalar typed field of the child structure (no nesting is supported).
  x_kubernetes_list_map_keys:[String]
  maximum:Float
  # JSONSchemaProps is a JSON-Schema following Specification Draft 4 (http://json-schema.org/).
  not:io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_JSONSchemaPropsInput
  maxLength:Int
  nullable:Boolean
  # x-kubernetes-embedded-resource defines that the value is an embedded Kubernetes runtime.Object, with TypeMeta and ObjectMeta. The type must be object. It is allowed to further restrict the embedded object. kind, apiVersion and metadata are validated automatically. x-kubernetes-preserve-unknown-fields is allowed to be true, but does not have to be if the object is fully specified (up to kind, apiVersion, metadata).
  x_kubernetes_embedded_resource:Boolean
  anyOf:[io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_JSONSchemaPropsInput]
  maxProperties:Int
  exclusiveMaximum:Boolean
  # format is an OpenAPI v3 format string. Unknown formats are ignored. The following formats are validated:
  # - bsonobjectid: a bson object ID, i.e. a 24 characters hex string - uri: an URI as parsed by Golang net/url.ParseRequestURI - email: an email address as parsed by Golang net/mail.ParseAddress - hostname: a valid representation for an Internet host name, as defined by RFC 1034, section 3.1 [RFC1034]. - ipv4: an IPv4 IP as parsed by Golang net.ParseIP - ipv6: an IPv6 IP as parsed by Golang net.ParseIP - cidr: a CIDR as parsed by Golang net.ParseCIDR - mac: a MAC address as parsed by Golang net.ParseMAC - uuid: an UUID that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?[0-9a-f]{4}-?[0-9a-f]{4}-?[0-9a-f]{12}$ - uuid3: an UUID3 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?3[0-9a-f]{3}-?[0-9a-f]{4}-?[0-9a-f]{12}$ - uuid4: an UUID4 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?4[0-9a-f]{3}-?[89ab][0-9a-f]{3}-?[0-9a-f]{12}$ - uuid5: an UUID5 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?5[0-9a-f]{3}-?[89ab][0-9a-f]{3}-?[0-9a-f]{12}$ - isbn: an ISBN10 or ISBN13 number string like "0321751043" or "978-0321751041" - isbn10: an ISBN10 number string like "0321751043" - isbn13: an ISBN13 number string like "978-0321751041" - creditcard: a credit card number defined by the regex ^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\d{3})\d{11})$ with any non digit characters mixed in - ssn: a U.S. social security number following the regex ^\d{3}[- ]?\d{2}[- ]?\d{4}$ - hexcolor: an hexadecimal color code like "#FFFFFF: following the regex ^#?([0-9a-fA-F]{3}|[0-9a-fA-F]{6})$ - rgbcolor: an RGB color code like rgb like "rgb(255,255,2559" - byte: base64 encoded binary data - password: any kind of string - date: a date string like "2006-01-02" as defined by full-date in RFC3339 - duration: a duration string like "22 ns" as parsed by Golang time.ParseDuration or compatible with Scala duration format - datetime: a date time string like "2014-12-15T19:30:20.000Z" as defined by date-time in RFC3339.
  format:String
  # ExternalDocumentation allows referencing an external resource for extended documentation.
  externalDocs:io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_ExternalDocumentationInput
  maxItems:Int
  required:[String]
  type:String
  _ref:String
  allOf:[io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_JSONSchemaPropsInput]
  # x-kubernetes-preserve-unknown-fields stops the API server decoding step from pruning fields which are not specified in the validation schema. This affects fields recursively, but switches back to normal pruning behaviour if nested properties or additionalProperties are specified in the schema. This can either be true or undefined. False is forbidden.
  x_kubernetes_preserve_unknown_fields:Boolean
  minProperties:Int
  minLength:Int
  title:String
  # x-kubernetes-int-or-string specifies that this value is either an integer or a string. If this is true, an empty type is allowed and type as child of anyOf is permitted if following one of the following patterns:
  # 1) anyOf:
  #    - type: integer
  #    - type: string
  # 2) allOf:
  #    - anyOf:
  #      - type: integer
  #      - type: string
  #    - ... zero or more
  x_kubernetes_int_or_string:Boolean
  # x-kubernetes-list-type annotates an array to further describe its topology. This extension must only be used on lists and may have 3 possible values:
  # 1) `atomic`: the list is treated as a single entity, like a scalar.
  #      Atomic lists will be entirely replaced when updated. This extension
  #      may be used on any type of list (struct, scalar, ...).
  # 2) `set`:
  #      Sets are lists that must not have multiple items with the same value. Each
  #      value must be a scalar, an object with x-kubernetes-map-type `atomic` or an
  #      array with x-kubernetes-list-type `atomic`.
  # 3) `map`:
  #      These lists are like maps in that their elements have a non-index key
  #      used to identify them. Order is preserved upon merge. The map tag
  #      must only be used on a list with elements of type object.
  # Defaults to atomic for arrays.
  x_kubernetes_list_type:String
  # x-kubernetes-map-type annotates an object to further describe its topology. This extension must only be used when type is object and may have 2 possible values:
  # 1) `granular`:
  #      These maps are actual maps (key-value pairs) and each fields are independent
  #      from each other (they can each be manipulated by separate actors). This is
  #      the default behaviour for all maps.
  # 2) `atomic`: the list is treated as a single entity, like a scalar.
  #      Atomic maps will be entirely replaced when updated.
  x_kubernetes_map_type:String
  _schema:String
  minItems:Int
  minimum:Float
  multipleOf:Float
  description:String
  id:String
  exclusiveMinimum:Boolean
  oneOf:[io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_JSONSchemaPropsInput]
  pattern:String
  uniqueItems:Boolean
}
# JSONSchemaProps is a JSON-Schema following Specification Draft 4 (http://json-schema.org/).
type io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_JSONSchemaPropsResult {
  _ref:String
  _schema:String
  allOf:[io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_JSONSchemaPropsResult]
  anyOf:[io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_JSONSchemaPropsResult]
  description:String
  exclusiveMaximum:Boolean
  exclusiveMinimum:Boolean
  # ExternalDocumentation allows referencing an external resource for extended documentation.
  externalDocs:io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_ExternalDocumentationResult
  # format is an OpenAPI v3 format string. Unknown formats are ignored. The following formats are validated:
  # - bsonobjectid: a bson object ID, i.e. a 24 characters hex string - uri: an URI as parsed by Golang net/url.ParseRequestURI - email: an email address as parsed by Golang net/mail.ParseAddress - hostname: a valid representation for an Internet host name, as defined by RFC 1034, section 3.1 [RFC1034]. - ipv4: an IPv4 IP as parsed by Golang net.ParseIP - ipv6: an IPv6 IP as parsed by Golang net.ParseIP - cidr: a CIDR as parsed by Golang net.ParseCIDR - mac: a MAC address as parsed by Golang net.ParseMAC - uuid: an UUID that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?[0-9a-f]{4}-?[0-9a-f]{4}-?[0-9a-f]{12}$ - uuid3: an UUID3 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?3[0-9a-f]{3}-?[0-9a-f]{4}-?[0-9a-f]{12}$ - uuid4: an UUID4 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?4[0-9a-f]{3}-?[89ab][0-9a-f]{3}-?[0-9a-f]{12}$ - uuid5: an UUID5 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?5[0-9a-f]{3}-?[89ab][0-9a-f]{3}-?[0-9a-f]{12}$ - isbn: an ISBN10 or ISBN13 number string like "0321751043" or "978-0321751041" - isbn10: an ISBN10 number string like "0321751043" - isbn13: an ISBN13 number string like "978-0321751041" - creditcard: a credit card number defined by the regex ^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\d{3})\d{11})$ with any non digit characters mixed in - ssn: a U.S. social security number following the regex ^\d{3}[- ]?\d{2}[- ]?\d{4}$ - hexcolor: an hexadecimal color code like "#FFFFFF: following the regex ^#?([0-9a-fA-F]{3}|[0-9a-fA-F]{6})$ - rgbcolor: an RGB color code like rgb like "rgb(255,255,2559" - byte: base64 encoded binary data - password: any kind of string - date: a date string like "2006-01-02" as defined by full-date in RFC3339 - duration: a duration string like "22 ns" as parsed by Golang time.ParseDuration or compatible with Scala duration format - datetime: a date time string like "2014-12-15T19:30:20.000Z" as defined by date-time in RFC3339.
  format:String
  id:String
  maxItems:Int
  maxLength:Int
  maxProperties:Int
  maximum:Float
  minItems:Int
  minLength:Int
  minProperties:Int
  minimum:Float
  multipleOf:Float
  # JSONSchemaProps is a JSON-Schema following Specification Draft 4 (http://json-schema.org/).
  not:io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_JSONSchemaPropsResult
  nullable:Boolean
  oneOf:[io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_JSONSchemaPropsResult]
  pattern:String
  required:[String]
  title:String
  type:String
  uniqueItems:Boolean
  # x-kubernetes-embedded-resource defines that the value is an embedded Kubernetes runtime.Object, with TypeMeta and ObjectMeta. The type must be object. It is allowed to further restrict the embedded object. kind, apiVersion and metadata are validated automatically. x-kubernetes-preserve-unknown-fields is allowed to be true, but does not have to be if the object is fully specified (up to kind, apiVersion, metadata).
  x_kubernetes_embedded_resource:Boolean
  # x-kubernetes-int-or-string specifies that this value is either an integer or a string. If this is true, an empty type is allowed and type as child of anyOf is permitted if following one of the following patterns:
  # 1) anyOf:
  #    - type: integer
  #    - type: string
  # 2) allOf:
  #    - anyOf:
  #      - type: integer
  #      - type: string
  #    - ... zero or more
  x_kubernetes_int_or_string:Boolean
  # x-kubernetes-list-map-keys annotates an array with the x-kubernetes-list-type `map` by specifying the keys used as the index of the map.
  # This tag MUST only be used on lists that have the "x-kubernetes-list-type" extension set to "map". Also, the values specified for this attribute must be a scalar typed field of the child structure (no nesting is supported).
  x_kubernetes_list_map_keys:[String]
  # x-kubernetes-list-type annotates an array to further describe its topology. This extension must only be used on lists and may have 3 possible values:
  # 1) `atomic`: the list is treated as a single entity, like a scalar.
  #      Atomic lists will be entirely replaced when updated. This extension
  #      may be used on any type of list (struct, scalar, ...).
  # 2) `set`:
  #      Sets are lists that must not have multiple items with the same value. Each
  #      value must be a scalar, an object with x-kubernetes-map-type `atomic` or an
  #      array with x-kubernetes-list-type `atomic`.
  # 3) `map`:
  #      These lists are like maps in that their elements have a non-index key
  #      used to identify them. Order is preserved upon merge. The map tag
  #      must only be used on a list with elements of type object.
  # Defaults to atomic for arrays.
  x_kubernetes_list_type:String
  # x-kubernetes-map-type annotates an object to further describe its topology. This extension must only be used when type is object and may have 2 possible values:
  # 1) `granular`:
  #      These maps are actual maps (key-value pairs) and each fields are independent
  #      from each other (they can each be manipulated by separate actors). This is
  #      the default behaviour for all maps.
  # 2) `atomic`: the list is treated as a single entity, like a scalar.
  #      Atomic maps will be entirely replaced when updated.
  x_kubernetes_map_type:String
  # x-kubernetes-preserve-unknown-fields stops the API server decoding step from pruning fields which are not specified in the validation schema. This affects fields recursively, but switches back to normal pruning behaviour if nested properties or additionalProperties are specified in the schema. This can either be true or undefined. False is forbidden.
  x_kubernetes_preserve_unknown_fields:Boolean
}
# ServiceReference holds a reference to Service.legacy.k8s.io
input io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_ServiceReferenceInput {
  # path is an optional URL path at which the webhook will be contacted.
  path:String
  # port is an optional service port at which the webhook will be contacted. `port` should be a valid port number (1-65535, inclusive). Defaults to 443 for backward compatibility.
  port:Int
  # name is the name of the service. Required
  name:String
  # namespace is the namespace of the service. Required
  namespace:String
}
# ServiceReference holds a reference to Service.legacy.k8s.io
type io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_ServiceReferenceResult {
  # name is the name of the service. Required
  name:String
  # namespace is the namespace of the service. Required
  namespace:String
  # path is an optional URL path at which the webhook will be contacted.
  path:String
  # port is an optional service port at which the webhook will be contacted. `port` should be a valid port number (1-65535, inclusive). Defaults to 443 for backward compatibility.
  port:Int
}
# WebhookClientConfig contains the information to make a TLS connection with the webhook.
input io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_WebhookClientConfigInput {
  # caBundle is a PEM encoded CA bundle which will be used to validate the webhook's server certificate. If unspecified, system trust roots on the apiserver are used.
  caBundle:String
  # ServiceReference holds a reference to Service.legacy.k8s.io
  service:io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_ServiceReferenceInput
  # url gives the location of the webhook, in standard URL form (`scheme://host:port/path`). Exactly one of `url` or `service` must be specified.
  # The `host` should not refer to a service running in the cluster; use the `service` field instead. The host might be resolved via external DNS in some apiservers (e.g., `kube-apiserver` cannot resolve in-cluster DNS as that would be a layering violation). `host` may also be an IP address.
  # Please note that using `localhost` or `127.0.0.1` as a `host` is risky unless you take great care to run this webhook on all hosts which run an apiserver which might need to make calls to this webhook. Such installs are likely to be non-portable, i.e., not easy to turn up in a new cluster.
  # The scheme must be "https"; the URL must begin with "https://".
  # A path is optional, and if present may be any string permissible in a URL. You may use the path to pass an arbitrary string to the webhook, for example, a cluster identifier.
  # Attempting to use a user or basic auth e.g. "user:password@" is not allowed. Fragments ("#...") and query parameters ("?...") are not allowed, either.
  url:String
}
# WebhookClientConfig contains the information to make a TLS connection with the webhook.
type io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_WebhookClientConfigResult {
  # caBundle is a PEM encoded CA bundle which will be used to validate the webhook's server certificate. If unspecified, system trust roots on the apiserver are used.
  caBundle:String
  # ServiceReference holds a reference to Service.legacy.k8s.io
  service:io_k8s_apiextensions_apiserver_pkg_apis_apiextensions_v1beta1_ServiceReferenceResult
  # url gives the location of the webhook, in standard URL form (`scheme://host:port/path`). Exactly one of `url` or `service` must be specified.
  # The `host` should not refer to a service running in the cluster; use the `service` field instead. The host might be resolved via external DNS in some apiservers (e.g., `kube-apiserver` cannot resolve in-cluster DNS as that would be a layering violation). `host` may also be an IP address.
  # Please note that using `localhost` or `127.0.0.1` as a `host` is risky unless you take great care to run this webhook on all hosts which run an apiserver which might need to make calls to this webhook. Such installs are likely to be non-portable, i.e., not easy to turn up in a new cluster.
  # The scheme must be "https"; the URL must begin with "https://".
  # A path is optional, and if present may be any string permissible in a URL. You may use the path to pass an arbitrary string to the webhook, for example, a cluster identifier.
  # Attempting to use a user or basic auth e.g. "user:password@" is not allowed. Fragments ("#...") and query parameters ("?...") are not allowed, either.
  url:String
}
# APIGroupList is a list of APIGroup, to allow clients to discover the API at /apis.
type io_k8s_apimachinery_pkg_apis_meta_v1_APIGroupListResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # groups is a list of APIGroup.
  groups:[io_k8s_apimachinery_pkg_apis_meta_v1_APIGroupResult]
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
}
# APIGroup contains the name, the supported versions, and the preferred version of a group.
type io_k8s_apimachinery_pkg_apis_meta_v1_APIGroupResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # name is the name of the group.
  name:String
  # GroupVersion contains the "group/version" and "version" string of a version. It is made a struct to keep extensibility.
  preferredVersion:io_k8s_apimachinery_pkg_apis_meta_v1_GroupVersionForDiscoveryResult
  # a map of client CIDR to server address that is serving this group. This is to help clients reach servers in the most network-efficient way possible. Clients can use the appropriate server address as per the CIDR that they match. In case of multiple matches, clients should use the longest matching CIDR. The server returns only those CIDRs that it thinks that the client can match. For example: the master will return an internal IP CIDR only, if the client reaches the server using an internal IP. Server looks at X-Forwarded-For header or X-Real-Ip header or request.RemoteAddr (in that order) to get the client IP.
  serverAddressByClientCIDRs:[io_k8s_apimachinery_pkg_apis_meta_v1_ServerAddressByClientCIDRResult]
  # versions are the versions supported in this group.
  versions:[io_k8s_apimachinery_pkg_apis_meta_v1_GroupVersionForDiscoveryResult]
}
# APIResourceList is a list of APIResource, it is used to expose the name of the resources supported in a specific group and version, and if the resource is namespaced.
type io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceListResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # groupVersion is the group and version this APIResourceList is for.
  groupVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # resources contains the name of the resources and if they are namespaced.
  resources:[io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceResult]
}
# APIResource specifies the name of a resource and whether it is namespaced.
type io_k8s_apimachinery_pkg_apis_meta_v1_APIResourceResult {
  # categories is a list of the grouped resources this resource belongs to (e.g. 'all')
  categories:[String]
  # group is the preferred group of the resource.  Empty implies the group of the containing resource list. For subresources, this may have a different value, for example: Scale".
  group:String
  # kind is the kind for the resource (e.g. 'Foo' is the kind for a resource 'foo')
  kind:String
  # name is the plural name of the resource.
  name:String
  # namespaced indicates if a resource is namespaced or not.
  namespaced:Boolean
  # shortNames is a list of suggested short names of the resource.
  shortNames:[String]
  # singularName is the singular name of the resource.  This allows clients to handle plural and singular opaquely. The singularName is more correct for reporting status on a single item and both singular and plural are allowed from the kubectl CLI interface.
  singularName:String
  # The hash value of the storage version, the version this resource is converted to when written to the data store. Value must be treated as opaque by clients. Only equality comparison on the value is valid. This is an alpha feature and may change or be removed in the future. The field is populated by the apiserver only if the StorageVersionHash feature gate is enabled. This field will remain optional even if it graduates.
  storageVersionHash:String
  # verbs is a list of supported kube verbs (this includes get, list, watch, create, update, patch, delete, deletecollection, and proxy)
  verbs:[String]
  # version is the preferred version of the resource.  Empty implies the version of the containing resource list For subresources, this may have a different value, for example: v1 (while inside a v1beta1 version of the core resource's group)".
  version:String
}
# APIVersions lists the versions that are available, to allow clients to discover the API at /api, which is the root path of the legacy v1 API.
type io_k8s_apimachinery_pkg_apis_meta_v1_APIVersionsResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # a map of client CIDR to server address that is serving this group. This is to help clients reach servers in the most network-efficient way possible. Clients can use the appropriate server address as per the CIDR that they match. In case of multiple matches, clients should use the longest matching CIDR. The server returns only those CIDRs that it thinks that the client can match. For example: the master will return an internal IP CIDR only, if the client reaches the server using an internal IP. Server looks at X-Forwarded-For header or X-Real-Ip header or request.RemoteAddr (in that order) to get the client IP.
  serverAddressByClientCIDRs:[io_k8s_apimachinery_pkg_apis_meta_v1_ServerAddressByClientCIDRResult]
  # versions are the api versions that are available.
  versions:[String]
}
# DeleteOptions may be provided when deleting an API object.
input io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsInput {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
  dryRun:[String]
  # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
  gracePeriodSeconds:Int
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
  orphanDependents:Boolean
  # Preconditions must be fulfilled before an operation (update, delete, etc.) is carried out.
  preconditions:io_k8s_apimachinery_pkg_apis_meta_v1_PreconditionsInput
  # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
  propagationPolicy:String
}
# DeleteOptions may be provided when deleting an API object.
type io_k8s_apimachinery_pkg_apis_meta_v1_DeleteOptionsResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
  dryRun:[String]
  # The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.
  gracePeriodSeconds:Int
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.
  orphanDependents:Boolean
  # Preconditions must be fulfilled before an operation (update, delete, etc.) is carried out.
  preconditions:io_k8s_apimachinery_pkg_apis_meta_v1_PreconditionsResult
  # Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.
  propagationPolicy:String
}
# GroupVersion contains the "group/version" and "version" string of a version. It is made a struct to keep extensibility.
type io_k8s_apimachinery_pkg_apis_meta_v1_GroupVersionForDiscoveryResult {
  # groupVersion specifies the API group and version in the form "group/version"
  groupVersion:String
  # version specifies the version in the form of "version". This is to save the clients the trouble of splitting the GroupVersion.
  version:String
}
# A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
input io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorInput {
  # matchExpressions is a list of label selector requirements. The requirements are ANDed.
  matchExpressions:[io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorRequirementInput]
}
# A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
input io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorRequirementInput {
  # key is the label key that the selector applies to.
  key:String
  # operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
  operator:String
  # values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
  values:[String]
}
# A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
type io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorRequirementResult {
  # key is the label key that the selector applies to.
  key:String
  # operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
  operator:String
  # values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
  values:[String]
}
# A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
type io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorResult {
  # matchExpressions is a list of label selector requirements. The requirements are ANDed.
  matchExpressions:[io_k8s_apimachinery_pkg_apis_meta_v1_LabelSelectorRequirementResult]
}
# ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
type io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult {
  # continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a consistent list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response, unless you have received this token from an error message.
  continue:String
  # remainingItemCount is the number of subsequent items in the list which are not included in this list response. If the list request contained label or field selectors, then the number of remaining items is unknown and the field will be left unset and omitted during serialization. If the list is complete (either because it is not chunking or because this is the last chunk), then there are no more remaining items and this field will be left unset and omitted during serialization. Servers older than v1.15 do not set this field. The intended use of the remainingItemCount is *estimating* the size of a collection. Clients should not rely on the remainingItemCount to be set or to be exact.
  remainingItemCount:Int
  # String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
  resourceVersion:String
  # selfLink is a URL representing this object. Populated by the system. Read-only.
  # DEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.
  selfLink:String
}
# ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the fieldset applies to.
input io_k8s_apimachinery_pkg_apis_meta_v1_ManagedFieldsEntryInput {
  # Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
  time:String
  # APIVersion defines the version of this resource that this field set applies to. The format is "group/version" just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.
  apiVersion:String
  # FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: "FieldsV1"
  fieldsType:String
  # Manager is an identifier of the workflow managing these fields.
  manager:String
  # Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.
  operation:String
}
# ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the fieldset applies to.
type io_k8s_apimachinery_pkg_apis_meta_v1_ManagedFieldsEntryResult {
  # APIVersion defines the version of this resource that this field set applies to. The format is "group/version" just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.
  apiVersion:String
  # FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: "FieldsV1"
  fieldsType:String
  # Manager is an identifier of the workflow managing these fields.
  manager:String
  # Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.
  operation:String
  # Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
  time:String
}
# ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
input io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput {
  # Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
  deletionTimestamp:String
  # Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names
  name:String
  # Namespace defines the space within each name must be unique. An empty namespace is equivalent to the "default" namespace, but "default" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.
  # Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces
  namespace:String
  # An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.
  # Populated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
  resourceVersion:String
  # Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.
  deletionGracePeriodSeconds:Int
  # GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.
  # If this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).
  # Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency
  generateName:String
  # A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.
  generation:Int
  # ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like "ci-cd". The set of fields is always in the version that the workflow used when modifying the object.
  managedFields:[io_k8s_apimachinery_pkg_apis_meta_v1_ManagedFieldsEntryInput]
  # SelfLink is a URL representing this object. Populated by the system. Read-only.
  # DEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.
  selfLink:String
  # UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.
  # Populated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids
  uid:String
  # The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.
  clusterName:String
  # Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
  creationTimestamp:String
  # Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.
  finalizers:[String]
  # List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.
  ownerReferences:[io_k8s_apimachinery_pkg_apis_meta_v1_OwnerReferenceInput]
}
# ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
type io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult {
  # The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.
  clusterName:String
  # Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
  creationTimestamp:String
  # Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.
  deletionGracePeriodSeconds:Int
  # Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
  deletionTimestamp:String
  # Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.
  finalizers:[String]
  # GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.
  # If this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).
  # Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency
  generateName:String
  # A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.
  generation:Int
  # ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like "ci-cd". The set of fields is always in the version that the workflow used when modifying the object.
  managedFields:[io_k8s_apimachinery_pkg_apis_meta_v1_ManagedFieldsEntryResult]
  # Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names
  name:String
  # Namespace defines the space within each name must be unique. An empty namespace is equivalent to the "default" namespace, but "default" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.
  # Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces
  namespace:String
  # List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.
  ownerReferences:[io_k8s_apimachinery_pkg_apis_meta_v1_OwnerReferenceResult]
  # An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.
  # Populated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
  resourceVersion:String
  # SelfLink is a URL representing this object. Populated by the system. Read-only.
  # DEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.
  selfLink:String
  # UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.
  # Populated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids
  uid:String
}
# OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.
input io_k8s_apimachinery_pkg_apis_meta_v1_OwnerReferenceInput {
  # API version of the referent.
  apiVersion:String
  # If true, AND if the owner has the "foregroundDeletion" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. Defaults to false. To set this field, a user needs "delete" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.
  blockOwnerDeletion:Boolean
  # If true, this reference points to the managing controller.
  controller:Boolean
  # Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names
  name:String
  # UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids
  uid:String
}
# OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.
type io_k8s_apimachinery_pkg_apis_meta_v1_OwnerReferenceResult {
  # API version of the referent.
  apiVersion:String
  # If true, AND if the owner has the "foregroundDeletion" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. Defaults to false. To set this field, a user needs "delete" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.
  blockOwnerDeletion:Boolean
  # If true, this reference points to the managing controller.
  controller:Boolean
  # Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names
  name:String
  # UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids
  uid:String
}
# Preconditions must be fulfilled before an operation (update, delete, etc.) is carried out.
input io_k8s_apimachinery_pkg_apis_meta_v1_PreconditionsInput {
  # Specifies the target ResourceVersion
  resourceVersion:String
  # Specifies the target UID.
  uid:String
}
# Preconditions must be fulfilled before an operation (update, delete, etc.) is carried out.
type io_k8s_apimachinery_pkg_apis_meta_v1_PreconditionsResult {
  # Specifies the target ResourceVersion
  resourceVersion:String
  # Specifies the target UID.
  uid:String
}
# ServerAddressByClientCIDR helps the client to determine the server address that they should use, depending on the clientCIDR that they match.
type io_k8s_apimachinery_pkg_apis_meta_v1_ServerAddressByClientCIDRResult {
  # The CIDR with which clients can match their IP to figure out the server address that they should use.
  clientCIDR:String
  # Address of this server, suitable for a client that matches the above CIDR. This can be a hostname, hostname:port, IP or IP:port.
  serverAddress:String
}
# StatusCause provides more information about an api.Status failure, including cases when multiple errors are encountered.
type io_k8s_apimachinery_pkg_apis_meta_v1_StatusCauseResult {
  # The field of the resource that has caused this error, as named by its JSON serialization. May include dot and postfix notation for nested attributes. Arrays are zero-indexed.  Fields may appear more than once in an array of causes due to fields having multiple errors. Optional.
  # Examples:
  #   "name" - the field "name" on the current resource
  #   "items[0].name" - the field "name" on the first array entry in "items"
  field:String
  # A human-readable description of the cause of the error.  This field may be presented as-is to a reader.
  message:String
  # A machine-readable description of the cause of the error. If this value is empty there is no information available.
  reason:String
}
# StatusDetails is a set of additional properties that MAY be set by the server to provide additional information about a response. The Reason field of a Status object defines what attributes will be set. Clients must ignore fields that do not match the defined type of each attribute, and should assume that any attribute may be empty, invalid, or under defined.
type io_k8s_apimachinery_pkg_apis_meta_v1_StatusDetailsResult {
  # The Causes array includes more details associated with the StatusReason failure. Not all StatusReasons may provide detailed causes.
  causes:[io_k8s_apimachinery_pkg_apis_meta_v1_StatusCauseResult]
  # The group attribute of the resource associated with the status StatusReason.
  group:String
  # The kind attribute of the resource associated with the status StatusReason. On some operations may differ from the requested resource Kind. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # The name attribute of the resource associated with the status StatusReason (when there is a single name which can be described).
  name:String
  # If specified, the time in seconds before the operation should be retried. Some errors may indicate the client must take an alternate action - for those errors this field may indicate how long to wait before taking the alternate action.
  retryAfterSeconds:Int
  # UID of the resource. (when there is a single resource which can be described). More info: http://kubernetes.io/docs/user-guide/identifiers#uids
  uid:String
}
# Status is a return value for calls that don't return other objects.
type io_k8s_apimachinery_pkg_apis_meta_v1_StatusResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Suggested HTTP return code for this status, 0 if not set.
  code:Int
  # StatusDetails is a set of additional properties that MAY be set by the server to provide additional information about a response. The Reason field of a Status object defines what attributes will be set. Clients must ignore fields that do not match the defined type of each attribute, and should assume that any attribute may be empty, invalid, or under defined.
  details:io_k8s_apimachinery_pkg_apis_meta_v1_StatusDetailsResult
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # A human-readable description of the status of this operation.
  message:String
  # ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
  # A machine-readable description of why this operation is in the "Failure" status. If this value is empty there is no information available. A Reason clarifies an HTTP status code but does not override it.
  reason:String
  # Status of the operation. One of: "Success" or "Failure". More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
  status:String
}
# Event represents a single event to a watched resource.
type io_k8s_apimachinery_pkg_apis_meta_v1_WatchEventResult {
  type:String
}
# Info contains versioning information. how we'll want to distribute that information.
type io_k8s_apimachinery_pkg_version_InfoResult {
  buildDate:String
  compiler:String
  gitCommit:String
  gitTreeState:String
  gitVersion:String
  goVersion:String
  major:String
  minor:String
  platform:String
}
# APIServiceCondition describes the state of an APIService at a particular point
input io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIServiceConditionInput {
  # Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
  lastTransitionTime:String
  # Human-readable message indicating details about last transition.
  message:String
  # Unique, one-word, CamelCase reason for the condition's last transition.
  reason:String
  # Status is the status of the condition. Can be True, False, Unknown.
  status:String
  # Type is the type of the condition.
  type:String
}
# APIServiceCondition describes the state of an APIService at a particular point
type io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIServiceConditionResult {
  # Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
  lastTransitionTime:String
  # Human-readable message indicating details about last transition.
  message:String
  # Unique, one-word, CamelCase reason for the condition's last transition.
  reason:String
  # Status is the status of the condition. Can be True, False, Unknown.
  status:String
  # Type is the type of the condition.
  type:String
}
# APIService represents a server for a particular GroupVersion. Name must be "version.group".
input io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIServiceInput {
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  # APIServiceSpec contains information for locating and communicating with a server. Only https is supported, though you are able to disable certificate verification.
  spec:io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIServiceSpecInput
  # APIServiceStatus contains derived information about an API server
  status:io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIServiceStatusInput
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
}
# APIServiceList is a list of APIService objects.
type io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIServiceListResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  items:[io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIServiceResult]
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
# APIService represents a server for a particular GroupVersion. Name must be "version.group".
type io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIServiceResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  # APIServiceSpec contains information for locating and communicating with a server. Only https is supported, though you are able to disable certificate verification.
  spec:io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIServiceSpecResult
  # APIServiceStatus contains derived information about an API server
  status:io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIServiceStatusResult
}
# APIServiceSpec contains information for locating and communicating with a server. Only https is supported, though you are able to disable certificate verification.
input io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIServiceSpecInput {
  # Version is the API version this server hosts.  For example, "v1"
  version:String
  # VersionPriority controls the ordering of this API version inside of its group.  Must be greater than zero. The primary sort is based on VersionPriority, ordered highest to lowest (20 before 10). Since it's inside of a group, the number can be small, probably in the 10s. In case of equal version priorities, the version string will be used to compute the order inside a group. If the version string is "kube-like", it will sort above non "kube-like" version strings, which are ordered lexicographically. "Kube-like" versions start with a "v", then are followed by a number (the major version), then optionally the string "alpha" or "beta" and another number (the minor version). These are sorted first by GA > beta > alpha (where GA is a version with no suffix such as beta or alpha), and then by comparing major version, then minor version. An example sorted list of versions: v10, v2, v1, v11beta2, v10beta3, v3beta1, v12alpha1, v11alpha2, foo1, foo10.
  versionPriority:Int
  # CABundle is a PEM encoded CA bundle which will be used to validate an API server's serving certificate. If unspecified, system trust roots on the apiserver are used.
  caBundle:String
  # Group is the API group name this server hosts
  group:String
  # GroupPriorityMininum is the priority this group should have at least. Higher priority means that the group is preferred by clients over lower priority ones. Note that other versions of this group might specify even higher GroupPriorityMininum values such that the whole group gets a higher priority. The primary sort is based on GroupPriorityMinimum, ordered highest number to lowest (20 before 10). The secondary sort is based on the alphabetical comparison of the name of the object.  (v1.bar before v1.foo) We'd recommend something like: *.k8s.io (except extensions) at 18000 and PaaSes (OpenShift, Deis) are recommended to be in the 2000s
  groupPriorityMinimum:Int
  # InsecureSkipTLSVerify disables TLS certificate verification when communicating with this server. This is strongly discouraged.  You should use the CABundle instead.
  insecureSkipTLSVerify:Boolean
  # ServiceReference holds a reference to Service.legacy.k8s.io
  service:io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_ServiceReferenceInput
}
# APIServiceSpec contains information for locating and communicating with a server. Only https is supported, though you are able to disable certificate verification.
type io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIServiceSpecResult {
  # CABundle is a PEM encoded CA bundle which will be used to validate an API server's serving certificate. If unspecified, system trust roots on the apiserver are used.
  caBundle:String
  # Group is the API group name this server hosts
  group:String
  # GroupPriorityMininum is the priority this group should have at least. Higher priority means that the group is preferred by clients over lower priority ones. Note that other versions of this group might specify even higher GroupPriorityMininum values such that the whole group gets a higher priority. The primary sort is based on GroupPriorityMinimum, ordered highest number to lowest (20 before 10). The secondary sort is based on the alphabetical comparison of the name of the object.  (v1.bar before v1.foo) We'd recommend something like: *.k8s.io (except extensions) at 18000 and PaaSes (OpenShift, Deis) are recommended to be in the 2000s
  groupPriorityMinimum:Int
  # InsecureSkipTLSVerify disables TLS certificate verification when communicating with this server. This is strongly discouraged.  You should use the CABundle instead.
  insecureSkipTLSVerify:Boolean
  # ServiceReference holds a reference to Service.legacy.k8s.io
  service:io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_ServiceReferenceResult
  # Version is the API version this server hosts.  For example, "v1"
  version:String
  # VersionPriority controls the ordering of this API version inside of its group.  Must be greater than zero. The primary sort is based on VersionPriority, ordered highest to lowest (20 before 10). Since it's inside of a group, the number can be small, probably in the 10s. In case of equal version priorities, the version string will be used to compute the order inside a group. If the version string is "kube-like", it will sort above non "kube-like" version strings, which are ordered lexicographically. "Kube-like" versions start with a "v", then are followed by a number (the major version), then optionally the string "alpha" or "beta" and another number (the minor version). These are sorted first by GA > beta > alpha (where GA is a version with no suffix such as beta or alpha), and then by comparing major version, then minor version. An example sorted list of versions: v10, v2, v1, v11beta2, v10beta3, v3beta1, v12alpha1, v11alpha2, foo1, foo10.
  versionPriority:Int
}
# APIServiceStatus contains derived information about an API server
input io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIServiceStatusInput {
  # Current service state of apiService.
  conditions:[io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIServiceConditionInput]
}
# APIServiceStatus contains derived information about an API server
type io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIServiceStatusResult {
  # Current service state of apiService.
  conditions:[io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_APIServiceConditionResult]
}
# ServiceReference holds a reference to Service.legacy.k8s.io
input io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_ServiceReferenceInput {
  # Name is the name of the service
  name:String
  # Namespace is the namespace of the service
  namespace:String
  # If specified, the port on the service that hosting webhook. Default to 443 for backward compatibility. `port` should be a valid port number (1-65535, inclusive).
  port:Int
}
# ServiceReference holds a reference to Service.legacy.k8s.io
type io_k8s_kube_aggregator_pkg_apis_apiregistration_v1_ServiceReferenceResult {
  # Name is the name of the service
  name:String
  # Namespace is the namespace of the service
  namespace:String
  # If specified, the port on the service that hosting webhook. Default to 443 for backward compatibility. `port` should be a valid port number (1-65535, inclusive).
  port:Int
}
# APIServiceCondition describes the state of an APIService at a particular point
input io_k8s_kube_aggregator_pkg_apis_apiregistration_v1beta1_APIServiceConditionInput {
  # Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
  lastTransitionTime:String
  # Human-readable message indicating details about last transition.
  message:String
  # Unique, one-word, CamelCase reason for the condition's last transition.
  reason:String
  # Status is the status of the condition. Can be True, False, Unknown.
  status:String
  # Type is the type of the condition.
  type:String
}
# APIServiceCondition describes the state of an APIService at a particular point
type io_k8s_kube_aggregator_pkg_apis_apiregistration_v1beta1_APIServiceConditionResult {
  # Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
  lastTransitionTime:String
  # Human-readable message indicating details about last transition.
  message:String
  # Unique, one-word, CamelCase reason for the condition's last transition.
  reason:String
  # Status is the status of the condition. Can be True, False, Unknown.
  status:String
  # Type is the type of the condition.
  type:String
}
# APIService represents a server for a particular GroupVersion. Name must be "version.group".
input io_k8s_kube_aggregator_pkg_apis_apiregistration_v1beta1_APIServiceInput {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaInput
  # APIServiceSpec contains information for locating and communicating with a server. Only https is supported, though you are able to disable certificate verification.
  spec:io_k8s_kube_aggregator_pkg_apis_apiregistration_v1beta1_APIServiceSpecInput
  # APIServiceStatus contains derived information about an API server
  status:io_k8s_kube_aggregator_pkg_apis_apiregistration_v1beta1_APIServiceStatusInput
}
# APIServiceList is a list of APIService objects.
type io_k8s_kube_aggregator_pkg_apis_apiregistration_v1beta1_APIServiceListResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  items:[io_k8s_kube_aggregator_pkg_apis_apiregistration_v1beta1_APIServiceResult]
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ListMetaResult
}
# APIService represents a server for a particular GroupVersion. Name must be "version.group".
type io_k8s_kube_aggregator_pkg_apis_apiregistration_v1beta1_APIServiceResult {
  # APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
  apiVersion:String
  # Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
  kind:String
  # ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
  metadata:io_k8s_apimachinery_pkg_apis_meta_v1_ObjectMetaResult
  # APIServiceSpec contains information for locating and communicating with a server. Only https is supported, though you are able to disable certificate verification.
  spec:io_k8s_kube_aggregator_pkg_apis_apiregistration_v1beta1_APIServiceSpecResult
  # APIServiceStatus contains derived information about an API server
  status:io_k8s_kube_aggregator_pkg_apis_apiregistration_v1beta1_APIServiceStatusResult
}
# APIServiceSpec contains information for locating and communicating with a server. Only https is supported, though you are able to disable certificate verification.
input io_k8s_kube_aggregator_pkg_apis_apiregistration_v1beta1_APIServiceSpecInput {
  # GroupPriorityMininum is the priority this group should have at least. Higher priority means that the group is preferred by clients over lower priority ones. Note that other versions of this group might specify even higher GroupPriorityMininum values such that the whole group gets a higher priority. The primary sort is based on GroupPriorityMinimum, ordered highest number to lowest (20 before 10). The secondary sort is based on the alphabetical comparison of the name of the object.  (v1.bar before v1.foo) We'd recommend something like: *.k8s.io (except extensions) at 18000 and PaaSes (OpenShift, Deis) are recommended to be in the 2000s
  groupPriorityMinimum:Int
  # InsecureSkipTLSVerify disables TLS certificate verification when communicating with this server. This is strongly discouraged.  You should use the CABundle instead.
  insecureSkipTLSVerify:Boolean
  # ServiceReference holds a reference to Service.legacy.k8s.io
  service:io_k8s_kube_aggregator_pkg_apis_apiregistration_v1beta1_ServiceReferenceInput
  # Version is the API version this server hosts.  For example, "v1"
  version:String
  # VersionPriority controls the ordering of this API version inside of its group.  Must be greater than zero. The primary sort is based on VersionPriority, ordered highest to lowest (20 before 10). Since it's inside of a group, the number can be small, probably in the 10s. In case of equal version priorities, the version string will be used to compute the order inside a group. If the version string is "kube-like", it will sort above non "kube-like" version strings, which are ordered lexicographically. "Kube-like" versions start with a "v", then are followed by a number (the major version), then optionally the string "alpha" or "beta" and another number (the minor version). These are sorted first by GA > beta > alpha (where GA is a version with no suffix such as beta or alpha), and then by comparing major version, then minor version. An example sorted list of versions: v10, v2, v1, v11beta2, v10beta3, v3beta1, v12alpha1, v11alpha2, foo1, foo10.
  versionPriority:Int
  # CABundle is a PEM encoded CA bundle which will be used to validate an API server's serving certificate. If unspecified, system trust roots on the apiserver are used.
  caBundle:String
  # Group is the API group name this server hosts
  group:String
}
# APIServiceSpec contains information for locating and communicating with a server. Only https is supported, though you are able to disable certificate verification.
type io_k8s_kube_aggregator_pkg_apis_apiregistration_v1beta1_APIServiceSpecResult {
  # CABundle is a PEM encoded CA bundle which will be used to validate an API server's serving certificate. If unspecified, system trust roots on the apiserver are used.
  caBundle:String
  # Group is the API group name this server hosts
  group:String
  # GroupPriorityMininum is the priority this group should have at least. Higher priority means that the group is preferred by clients over lower priority ones. Note that other versions of this group might specify even higher GroupPriorityMininum values such that the whole group gets a higher priority. The primary sort is based on GroupPriorityMinimum, ordered highest number to lowest (20 before 10). The secondary sort is based on the alphabetical comparison of the name of the object.  (v1.bar before v1.foo) We'd recommend something like: *.k8s.io (except extensions) at 18000 and PaaSes (OpenShift, Deis) are recommended to be in the 2000s
  groupPriorityMinimum:Int
  # InsecureSkipTLSVerify disables TLS certificate verification when communicating with this server. This is strongly discouraged.  You should use the CABundle instead.
  insecureSkipTLSVerify:Boolean
  # ServiceReference holds a reference to Service.legacy.k8s.io
  service:io_k8s_kube_aggregator_pkg_apis_apiregistration_v1beta1_ServiceReferenceResult
  # Version is the API version this server hosts.  For example, "v1"
  version:String
  # VersionPriority controls the ordering of this API version inside of its group.  Must be greater than zero. The primary sort is based on VersionPriority, ordered highest to lowest (20 before 10). Since it's inside of a group, the number can be small, probably in the 10s. In case of equal version priorities, the version string will be used to compute the order inside a group. If the version string is "kube-like", it will sort above non "kube-like" version strings, which are ordered lexicographically. "Kube-like" versions start with a "v", then are followed by a number (the major version), then optionally the string "alpha" or "beta" and another number (the minor version). These are sorted first by GA > beta > alpha (where GA is a version with no suffix such as beta or alpha), and then by comparing major version, then minor version. An example sorted list of versions: v10, v2, v1, v11beta2, v10beta3, v3beta1, v12alpha1, v11alpha2, foo1, foo10.
  versionPriority:Int
}
# APIServiceStatus contains derived information about an API server
input io_k8s_kube_aggregator_pkg_apis_apiregistration_v1beta1_APIServiceStatusInput {
  # Current service state of apiService.
  conditions:[io_k8s_kube_aggregator_pkg_apis_apiregistration_v1beta1_APIServiceConditionInput]
}
# APIServiceStatus contains derived information about an API server
type io_k8s_kube_aggregator_pkg_apis_apiregistration_v1beta1_APIServiceStatusResult {
  # Current service state of apiService.
  conditions:[io_k8s_kube_aggregator_pkg_apis_apiregistration_v1beta1_APIServiceConditionResult]
}
# ServiceReference holds a reference to Service.legacy.k8s.io
input io_k8s_kube_aggregator_pkg_apis_apiregistration_v1beta1_ServiceReferenceInput {
  # Namespace is the namespace of the service
  namespace:String
  # If specified, the port on the service that hosting webhook. Default to 443 for backward compatibility. `port` should be a valid port number (1-65535, inclusive).
  port:Int
  # Name is the name of the service
  name:String
}
# ServiceReference holds a reference to Service.legacy.k8s.io
type io_k8s_kube_aggregator_pkg_apis_apiregistration_v1beta1_ServiceReferenceResult {
  # Name is the name of the service
  name:String
  # Namespace is the namespace of the service
  namespace:String
  # If specified, the port on the service that hosting webhook. Default to 443 for backward compatibility. `port` should be a valid port number (1-65535, inclusive).
  port:Int
}
schema {
}
